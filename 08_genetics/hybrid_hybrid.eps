%!PS-Adobe-3.0 EPSF-3.0
%%Title: (hybrid_hybrid.pdf)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 10:20:25 04/05/07
%%For: (No set)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 59 422 608 537
%%HiResBoundingBox: 59.0 422.0 608.0 537.15
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3517 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2007-04-05T10:20:25-05:00</xap:CreateDate>
         <xap:ModifyDate>2007-04-05T10:20:25-05:00</xap:ModifyDate>
         <xap:MetadataDate>2007-04-05T10:20:25-05:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:C4C9BD2589E3DB1197ABA4A2BDE89816</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:C4C9BD2589E3DB1197ABA4A2BDE89816</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:192c121a-6088-42c8-b29a-3de7a105246c</stRef:instanceID>
            <stRef:documentID>uuid:5f436396-00ae-48d7-a4f9-c7e571e59195</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:creator>
            <rdf:Seq>
               <rdf:li>No set</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
59.0 422.0 549.0 115.15 rectclip
q
59.0 422.0 m
608.0 422.0 l
608.0 537.15 l
59.0 537.15 l
h
W
n
0.0 w
q
n
0.0 -0.1 612.1 792.1 re
eoclip
n
q
1 j
n
198.4 508.5 m
184.3 508.5 l
184.3 536.9 l
212.6 536.9 l
212.6 508.5 l
198.4 508.5 l
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
S
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
%ADOBeginSubsetFont: WKFBAA+DejaVuSans Initial
ct_T42Dict begin
0 -0.207 0.73 0.758
 256 array 0 1 255 {1 index exch /.notdef put} for  /WKFBAA+DejaVuSans
Type42DictBegin
[<00010000000b000b000b000b637674203a1868c2000000bc000001fe6670
676d77773264000002bc000000ab676c7966099adb9600004c180000090c
686561647361f7250000036800000036686865612cfe6e07000003a00000
0024686d74783605ce39000003c4000000386c6f6361ea0f160f000003fc
0000001e6d617870d70546040000041c000000206e616d657299de270000
043c000042737072657066f004d9000046b0000005686764697200000000
0000000000000000013500b800cb00cb00c100aa009c01a600b800660000
007100cb00a002b20085007500b800c301cb0189022d00cb00a600f000d3
00aa008700cb03aa0400014a003300cb000000d9050200f4015400b4009c
01390114013907060400044e04b4045204b804e704cd0037047304cd0460
0473013303a2055605a60556053903c5021200c9001f00b801df007300ba
03e9033303bc0444040e00df03cd03aa00e503aa0404000000cb008f00a4
007b00b80014016f007f027b0252008f00c705cd009a009a006f00cb00cd
019e01d300f000ba018300d5009803040248009e01d500c100cb00f60083
0354027f00000333026600d300c700a400cd008f009a0073040005d5010a
00fe022b00a400b4009c00000062009c0000001d032d05d505d505d505f0
007f007b005400a406b80614072301d300b800cb00a601c301ec069300a0
00d3035c037103db0185042304a80448008f0139011401390360008f05d5
019a0614072306660179046004600460047b009c00000277046001aa00e9
04600762007b00c5007f027b000000b4025205cd006600bc006600770610
00cd013b01850389008f007b0000001d00cd074a042f009c009c0000077d
006f0000006f0335006a006f007b00ae00b2002d0396008f027b00f60083
0354063705f6008f009c04e10266008f018d02f600cd03440029006604ee
00730000140000960000b707060504030201002c2010b002254964b04051
5820c859212d2cb002254964b040515820c859212d2c20100720b00050b0
0d7920b8ffff5058041b0559b0051cb0032508b0042523e120b00050b00d
7920b8ffff5058041b0559b0051cb0032508e12d2c4b505820b0fd454459
212d2cb002254560442d2c4b5358b00225b0022545445921212d2c45442d
2cb00225b0022549b00525b005254960b0206368208a108a233a8a10653a
2d0000010000000223d701e4285e5f0f3cf5001f080000000000c1ecf533
00000000000000000000fe5605d906140000000800000000000000000001
0000076dfe1d000000000000000000000001000000000000000000000000
0000000e04cd0066063300730514007104d300c904e7007b034a00ba04ec
0071051200ba03230037042b006f064c007302d1002f051400ba023900c1
00000022007600da011a01b001e80252028e02cc037c03c2040e045e0486
000000010000000e00290002000000000002001000400008000004150568
000800040000004c03960001000000000000009800000001000000000001
000b00980001000000000002000400a30001000000000003000b00a70001
000000000004000b00b20001000000000005000c00bd0001000000000006
000a00c90001000000000008001100d3000100000000000b001d00e40001
00000000000d129d0101000100000000000e0034139e0001000000000010
000b13d20001000000000011000413dd0001000000000100001813e10001
000000000101000913f90001000000000102001214020001000000000103
0009141400010000000001040011141d00010000000001050012142e0001
000000000106001014400001000000000107000e14500001000000000108
000b145e000100000000010900071469000100000000010a000c14700001
00000000010b0012147c00010000000101000018148e0001000000010101
000914a60001000000010102001714af0001000000010103000914c60001
000000010104001f14cf0001000000010105001214ee0001000000010106
001215000001000000010107000f15120001000000010108000e15210001
0000000101090015152f000100000001010a00101544000100000001010b
0016155400010000000201000021156a00010000000201010009158b0001
000000020104001715940001000000020106001115ab0001000000020107
001115bc000100000002010a000b15cd000100000002010b001015d80001
000000030100001515e80001000000030101000815fd0001000000030104
001116050001000000030106001316160001000000030107000d16290001
00000003010a00101636000100000003010b001216460001000000040100
001c165800010000000401010009167400010000000401020013167d0001
000000040103000716900001000000040104001216970001000000040105
001216a90001000000040106001c16bb0001000000040107001216d70001
000000040108000e16e90001000000040109000716f7000100000004010a
000c16fe000100000004010b0011170a00030001040900000130171b0003
0001040900010016184b0003000104090002000818610003000104090003
0016186900030001040900040016187f0003000104090005001818950003
000104090006001418ad0003000104090008002218c1000300010409000b
003a18e3000300010409000d253a191d000300010409000e00683e570003
00010409001000163ebf000300010409001100083ed5436f707972696768
742028632920323030332062792042697473747265616d2c20496e632e20
416c6c205269676874732052657365727665642e0a436f70797269676874
202863292032303036206279205461766d6a6f6e67204261682e20416c6c
205269676874732052657365727665642e0a44656a615675206368616e67
65732061726520696e207075626c696320646f6d61696e0a44656a615675
2053616e73426f6f6b44656a6156752053616e7344656a6156752053616e
7356657273696f6e20322e313444656a61567553616e7344656a61567520
666f6e7473207465616d687474703a2f2f64656a6176752e736f75726365
666f7267652e6e6574466f6e747320617265202863292042697473747265
616d20287365652062656c6f77292e2044656a615675206368616e676573
2061726520696e207075626c696320646f6d61696e2e20476c7970687320
696d706f727465642066726f6d204172657620666f6e7473206172652028
6329205461766d6a756e672042616820287365652062656c6f77290a0a42
697473747265616d205665726120466f6e747320436f707972696768740a
2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d
0a0a436f7079726967687420286329203230303320627920426974737472
65616d2c20496e632e20416c6c205269676874732052657365727665642e
2042697473747265616d20566572612069730a612074726164656d61726b
206f662042697473747265616d2c20496e632e0a0a5065726d697373696f
6e20697320686572656279206772616e7465642c2066726565206f662063
68617267652c20746f20616e7920706572736f6e206f627461696e696e67
206120636f70790a6f662074686520666f6e7473206163636f6d70616e79
696e672074686973206c6963656e7365202822466f6e7473222920616e64
206173736f6369617465640a646f63756d656e746174696f6e2066696c65
7320287468652022466f6e7420536f66747761726522292c20746f207265
70726f6475636520616e642064697374726962757465207468650a466f6e
7420536f6674776172652c20696e636c7564696e6720776974686f757420
6c696d69746174696f6e207468652072696768747320746f207573652c20
636f70792c206d657267652c0a7075626c6973682c206469737472696275
74652c20616e642f6f722073656c6c20636f70696573206f662074686520
466f6e7420536f6674776172652c20616e6420746f207065726d69740a70
6572736f6e7320746f2077686f6d2074686520466f6e7420536f66747761
7265206973206675726e697368656420746f20646f20736f2c207375626a
65637420746f207468650a666f6c6c6f77696e6720636f6e646974696f6e
733a0a0a5468652061626f766520636f7079726967687420616e64207472
6164656d61726b206e6f746963657320616e642074686973207065726d69
7373696f6e206e6f74696365207368616c6c0a626520696e636c75646564
20696e20616c6c20636f70696573206f66206f6e65206f72206d6f726520
6f662074686520466f6e7420536f66747761726520747970656661636573
2e0a0a54686520466f6e7420536f667477617265206d6179206265206d6f
6469666965642c20616c74657265642c206f7220616464656420746f2c20
616e6420696e20706172746963756c61720a7468652064657369676e7320
6f6620676c79706873206f72206368617261637465727320696e20746865
20466f6e7473206d6179206265206d6f64696669656420616e640a616464
6974696f6e616c20676c79706873206f722063686172616374657273206d
617920626520616464656420746f2074686520466f6e74732c206f6e6c79
2069662074686520666f6e74730a6172652072656e616d656420746f206e
616d6573206e6f7420636f6e7461696e696e672065697468657220746865
20776f726473202242697473747265616d22206f722074686520776f7264
0a2256657261222e0a0a54686973204c6963656e7365206265636f6d6573
206e756c6c20616e6420766f696420746f2074686520657874656e742061
70706c696361626c6520746f20466f6e7473206f7220466f6e740a536f66
7477617265207468617420686173206265656e206d6f6469666965642061
6e6420697320646973747269627574656420756e64657220746865202242
697473747265616d0a5665726122206e616d65732e0a0a54686520466f6e
7420536f667477617265206d617920626520736f6c642061732070617274
206f662061206c617267657220736f667477617265207061636b61676520
627574206e6f0a636f7079206f66206f6e65206f72206d6f7265206f6620
74686520466f6e7420536f66747761726520747970656661636573206d61
7920626520736f6c6420627920697473656c662e0a0a54484520464f4e54
20534f4654574152452049532050524f564944454420224153204953222c
20574954484f55542057415252414e5459204f4620414e59204b494e442c
20455850524553530a4f5220494d504c4945442c20494e434c5544494e47
20425554204e4f54204c494d4954454420544f20414e592057415252414e
54494553204f46204d45524348414e544142494c4954592c0a4649544e45
535320464f52204120504152544943554c415220505552504f534520414e
44204e4f4e494e4652494e47454d454e54204f4620434f50595249474854
2c20504154454e542c0a54524144454d41524b2c204f52204f5448455220
52494748542e20494e204e4f204556454e54205348414c4c204249545354
5245414d204f522054484520474e4f4d450a464f554e444154494f4e2042
45204c4941424c4520464f5220414e5920434c41494d2c2044414d414745
53204f52204f54484552204c494142494c4954592c20494e434c5544494e
470a414e592047454e4552414c2c205350454349414c2c20494e44495245
43542c20494e434944454e54414c2c204f5220434f4e53455155454e5449
414c2044414d414745532c0a5748455448455220494e20414e2041435449
4f4e204f4620434f4e54524143542c20544f5254204f52204f5448455257
4953452c2041524953494e472046524f4d2c204f5554204f460a54484520
555345204f5220494e4142494c49545920544f205553452054484520464f
4e5420534f465457415245204f522046524f4d204f54484552204445414c
494e475320494e205448450a464f4e5420534f4654574152452e0a0a4578
6365707420617320636f6e7461696e656420696e2074686973206e6f7469
63652c20746865206e616d6573206f6620476e6f6d652c2074686520476e
6f6d650a466f756e646174696f6e2c20616e642042697473747265616d20
496e632e2c207368616c6c206e6f74206265207573656420696e20616476
6572746973696e67206f720a6f746865727769736520746f2070726f6d6f
7465207468652073616c652c20757365206f72206f74686572206465616c
696e677320696e207468697320466f6e7420536f6674776172650a776974
686f7574207072696f72207772697474656e20617574686f72697a617469
6f6e2066726f6d2074686520476e6f6d6520466f756e646174696f6e206f
722042697473747265616d0a496e632e2c20726573706563746976656c79
2e20466f72206675727468657220696e666f726d6174696f6e2c20636f6e
746163743a20666f6e747320617420676e6f6d6520646f740a6f72672e20
0a0a4172657620466f6e747320436f707972696768740a2d2d2d2d2d2d2d
2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a436f707972
69676874202863292032303036206279205461766d6a6f6e67204261682e
20416c6c205269676874732052657365727665642e0a0a5065726d697373
696f6e20697320686572656279206772616e7465642c2066726565206f66
206368617267652c20746f20616e7920706572736f6e206f627461696e69
6e670a6120636f7079206f662074686520666f6e7473206163636f6d7061
6e79696e672074686973206c6963656e7365202822466f6e747322292061
6e640a6173736f63696174656420646f63756d656e746174696f6e206669
6c657320287468652022466f6e7420536f66747761726522292c20746f20
726570726f647563650a616e64206469737472696275746520746865206d
6f64696669636174696f6e7320746f207468652042697473747265616d20
5665726120466f6e7420536f6674776172652c0a696e636c7564696e6720
776974686f7574206c696d69746174696f6e207468652072696768747320
746f207573652c20636f70792c206d657267652c207075626c6973682c0a
646973747269627574652c20616e642f6f722073656c6c20636f70696573
206f662074686520466f6e7420536f6674776172652c20616e6420746f20
7065726d69740a706572736f6e7320746f2077686f6d2074686520466f6e
7420536f667477617265206973206675726e697368656420746f20646f20
736f2c207375626a65637420746f0a74686520666f6c6c6f77696e672063
6f6e646974696f6e733a0a0a5468652061626f766520636f707972696768
7420616e642074726164656d61726b206e6f746963657320616e64207468
6973207065726d697373696f6e206e6f746963650a7368616c6c20626520
696e636c7564656420696e20616c6c20636f70696573206f66206f6e6520
6f72206d6f7265206f662074686520466f6e7420536f6674776172650a74
79706566616365732e0a0a54686520466f6e7420536f667477617265206d
6179206265206d6f6469666965642c20616c74657265642c206f72206164
64656420746f2c20616e6420696e0a706172746963756c61722074686520
64657369676e73206f6620676c79706873206f7220636861726163746572
7320696e2074686520466f6e7473206d61792062650a6d6f646966696564
20616e64206164646974696f6e616c20676c79706873206f722063686172
616374657273206d617920626520616464656420746f207468650a466f6e
74732c206f6e6c792069662074686520666f6e7473206172652072656e61
6d656420746f206e616d6573206e6f7420636f6e7461696e696e67206569
746865720a74686520776f72647320225461766d6a6f6e67204261682220
6f722074686520776f7264202241726576222e0a0a54686973204c696365
6e7365206265636f6d6573206e756c6c20616e6420766f696420746f2074
686520657874656e74206170706c696361626c6520746f20466f6e74730a
6f7220466f6e7420536f667477617265207468617420686173206265656e
206d6f64696669656420616e642069732064697374726962757465642075
6e64657220746865200a225461766d6a6f6e672042616820417265762220
6e616d65732e0a0a54686520466f6e7420536f667477617265206d617920
626520736f6c642061732070617274206f662061206c617267657220736f
667477617265207061636b616765206275740a6e6f20636f7079206f6620
6f6e65206f72206d6f7265206f662074686520466f6e7420536f66747761
726520747970656661636573206d617920626520736f6c642062790a6974
73656c662e0a0a54484520464f4e5420534f465457415245204953205052
4f564944454420224153204953222c20574954484f55542057415252414e
5459204f4620414e59204b494e442c0a45585052455353204f5220494d50
4c4945442c20494e434c5544494e4720425554204e4f54204c494d495445
4420544f20414e592057415252414e54494553204f460a4d45524348414e
544142494c4954592c204649544e45535320464f52204120504152544943
554c415220505552504f534520414e44204e4f4e494e4652494e47454d45
4e540a4f4620434f505952494748542c20504154454e542c205452414445
4d41524b2c204f52204f544845522052494748542e20494e204e4f204556
454e54205348414c4c0a5441564d4a4f4e4720424148204245204c494142
4c4520464f5220414e5920434c41494d2c2044414d41474553204f52204f
54484552204c494142494c4954592c0a494e434c5544494e4720414e5920
47454e4552414c2c205350454349414c2c20494e4449524543542c20494e
434944454e54414c2c204f5220434f4e53455155454e5449414c0a44414d
414745532c205748455448455220494e20414e20414354494f4e204f4620
434f4e54524143542c20544f5254204f52204f54484552574953452c2041
524953494e470a46524f4d2c204f5554204f462054484520555345204f52
20494e4142494c49545920544f205553452054484520464f4e5420534f46
5457415245204f522046524f4d0a4f54484552204445414c494e47532049
4e2054484520464f4e5420534f4654574152452e0a0a4578636570742061
7320636f6e7461696e656420696e2074686973206e6f746963652c207468
65206e616d65206f66205461766d6a6f6e6720426168207368616c6c206e
6f740a6265207573656420696e206164766572746973696e67206f72206f
746865727769736520746f2070726f6d6f7465207468652073616c652c20
757365206f72206f746865720a6465616c696e677320696e207468697320
466f6e7420536f66747761726520776974686f7574207072696f72207772
697474656e20617574686f72697a6174696f6e0a66726f6d205461766d6a
6f6e67204261682e20466f72206675727468657220696e666f726d617469
6f6e2c20636f6e746163743a207461766d6a6f6e67204020667265650a2e
2066722e687474703a2f2f64656a6176752e736f75726365666f7267652e
6e65742f77696b692f696e6465782e7068702f4c6963656e736544656a61
56752053616e73426f6f6b416c6c205479706f6772617068696320466561
74757265734c69676174757265734375727369766520636f6e6e65637469
6f6e4672616374696f6e73416c6c20547970652046656174757265735265
717569726564204c6967617475726573436f6d6d6f6e204c696761747572
657352617265204c6967617475726573556e636f6e6e6563746564437572
736976654e6f204672616374696f6e73446961676f6e616c204672616374
696f6e73466f6e6374696f6e73207479706f677261706869717565734c69
67617475726573436f6e6e656374696f6e20646573204375727369766573
4672616374696f6e73546f7574657320666f6e6374696f6e73207479706f
677261706869717565734c69676174757265732052657175697365734c69
6761747572657320557375656c6c65734c69676174757265732052617265
734e6f6e20636f6e6e6563748e6573506c65696e656d656e7420636f6e6e
6563748e6573506173206465204672616374696f6e734672616374696f6e
7320656e20446961676f6e616c65416c6c65207479706f67726166697363
68656e204d9a676c6963686b656974656e4c696761747572656e416c6c65
204175737a656963686e756e6773617274656e4e6f726d616c65204c6967
61747572656e53656c74656e65204c696761747572656e4b65696e204272
75636865446961676f6e616c657220427275636846756e7a696f6e692054
69706f67726166696368654c656761747572655475747465206c65204675
6e7a696f6e694c656761747572652070699d20436f6d756e694c65676174
75726520526172654e657373756e61204672617a696f6e654672617a696f
6e6920446961676f6e616c69416c6c65207479706f677261666973636865
206b656e6d65726b656e4c696761747572656e4375727369657665207665
7262696e64696e67427265756b656e416c6c6520747970656b656e6d6572
6b656e5665726569737465206c696761747572656e47656d65656e736368
617070656c696a6b65204c696761747572656e5a656c647a616d65206c69
6761747572656e4e69657420766572626f6e64656e437572736965664765
656e20627265756b656e446961676f6e616c6520627265756b656e004300
6f0070007900720069006700680074002000280063002900200032003000
300033002000620079002000420069007400730074007200650061006d00
2c00200049006e0063002e00200041006c006c0020005200690067006800
740073002000520065007300650072007600650064002e000a0043006f00
700079007200690067006800740020002800630029002000320030003000
360020006200790020005400610076006d006a006f006e00670020004200
610068002e00200041006c006c0020005200690067006800740073002000
520065007300650072007600650064002e000a00440065006a0061005600
750020006300680061006e00670065007300200061007200650020006900
6e0020007000750062006c0069006300200064006f006d00610069006e00
0a00440065006a006100560075002000530061006e00730042006f006f00
6b00440065006a006100560075002000530061006e007300440065006a00
6100560075002000530061006e007300560065007200730069006f006e00
200032002e0031003400440065006a00610056007500530061006e007300
440065006a00610056007500200066006f006e0074007300200074006500
61006d0068007400740070003a002f002f00640065006a00610076007500
2e0073006f00750072006300650066006f007200670065002e006e006500
740046006f006e0074007300200061007200650020002800630029002000
420069007400730074007200650061006d00200028007300650065002000
620065006c006f00770029002e002000440065006a006100560075002000
6300680061006e006700650073002000610072006500200069006e002000
7000750062006c0069006300200064006f006d00610069006e002e002000
47006c007900700068007300200069006d0070006f007200740065006400
2000660072006f006d0020004100720065007600200066006f006e007400
73002000610072006500200028006300290020005400610076006d006a00
75006e006700200042006100680020002800730065006500200062006500
6c006f00770029000a000a00420069007400730074007200650061006d00
20005600650072006100200046006f006e0074007300200043006f007000
7900720069006700680074000a002d002d002d002d002d002d002d002d00
2d002d002d002d002d002d002d002d002d002d002d002d002d002d002d00
2d002d002d002d002d002d002d000a000a0043006f007000790072006900
670068007400200028006300290020003200300030003300200062007900
2000420069007400730074007200650061006d002c00200049006e006300
2e00200041006c006c002000520069006700680074007300200052006500
7300650072007600650064002e0020004200690074007300740072006500
61006d00200056006500720061002000690073000a006100200074007200
6100640065006d00610072006b0020006f00660020004200690074007300
74007200650061006d002c00200049006e0063002e000a000a0050006500
72006d0069007300730069006f006e002000690073002000680065007200
65006200790020006700720061006e007400650064002c00200066007200
6500650020006f00660020006300680061007200670065002c0020007400
6f00200061006e007900200070006500720073006f006e0020006f006200
7400610069006e0069006e00670020006100200063006f00700079000a00
6f0066002000740068006500200066006f006e0074007300200061006300
63006f006d00700061006e00790069006e00670020007400680069007300
20006c006900630065006e007300650020002800220046006f006e007400
730022002900200061006e00640020006100730073006f00630069006100
7400650064000a0064006f00630075006d0065006e007400610074006900
6f006e002000660069006c00650073002000280074006800650020002200
46006f006e007400200053006f0066007400770061007200650022002900
2c00200074006f00200072006500700072006f0064007500630065002000
61006e006400200064006900730074007200690062007500740065002000
7400680065000a0046006f006e007400200053006f006600740077006100
720065002c00200069006e0063006c007500640069006e00670020007700
6900740068006f007500740020006c0069006d0069007400610074006900
6f006e002000740068006500200072006900670068007400730020007400
6f0020007500730065002c00200063006f00700079002c0020006d006500
7200670065002c000a007000750062006c006900730068002c0020006400
6900730074007200690062007500740065002c00200061006e0064002f00
6f0072002000730065006c006c00200063006f0070006900650073002000
6f0066002000740068006500200046006f006e007400200053006f006600
740077006100720065002c00200061006e006400200074006f0020007000
650072006d00690074000a0070006500720073006f006e00730020007400
6f002000770068006f006d002000740068006500200046006f006e007400
200053006f00660074007700610072006500200069007300200066007500
72006e0069007300680065006400200074006f00200064006f0020007300
6f002c0020007300750062006a00650063007400200074006f0020007400
680065000a0066006f006c006c006f00770069006e006700200063006f00
6e0064006900740069006f006e0073003a000a000a005400680065002000
610062006f0076006500200063006f007000790072006900670068007400
200061006e0064002000740072006100640065006d00610072006b002000
6e006f0074006900630065007300200061006e0064002000740068006900
730020007000650072006d0069007300730069006f006e0020006e006f00
740069006300650020007300680061006c006c000a006200650020006900
6e0063006c007500640065006400200069006e00200061006c006c002000
63006f00700069006500730020006f00660020006f006e00650020006f00
720020006d006f007200650020006f006600200074006800650020004600
6f006e007400200053006f00660074007700610072006500200074007900
70006500660061006300650073002e000a000a0054006800650020004600
6f006e007400200053006f0066007400770061007200650020006d006100
790020006200650020006d006f006400690066006900650064002c002000
61006c00740065007200650064002c0020006f0072002000610064006400
65006400200074006f002c00200061006e006400200069006e0020007000
6100720074006900630075006c00610072000a0074006800650020006400
65007300690067006e00730020006f006600200067006c00790070006800
730020006f00720020006300680061007200610063007400650072007300
200069006e002000740068006500200046006f006e007400730020006d00
6100790020006200650020006d006f006400690066006900650064002000
61006e0064000a006100640064006900740069006f006e0061006c002000
67006c00790070006800730020006f007200200063006800610072006100
6300740065007200730020006d0061007900200062006500200061006400
640065006400200074006f002000740068006500200046006f006e007400
73002c0020006f006e006c00790020006900660020007400680065002000
66006f006e00740073000a006100720065002000720065006e0061006d00
65006400200074006f0020006e0061006d006500730020006e006f007400
200063006f006e007400610069006e0069006e0067002000650069007400
6800650072002000740068006500200077006f0072006400730020002200
420069007400730074007200650061006d00220020006f00720020007400
68006500200077006f00720064000a002200560065007200610022002e00
0a000a00540068006900730020004c006900630065006e00730065002000
6200650063006f006d006500730020006e0075006c006c00200061006e00
6400200076006f0069006400200074006f00200074006800650020006500
7800740065006e00740020006100700070006c0069006300610062006c00
6500200074006f00200046006f006e007400730020006f00720020004600
6f006e0074000a0053006f00660074007700610072006500200074006800
61007400200068006100730020006200650065006e0020006d006f006400
69006600690065006400200061006e006400200069007300200064006900
730074007200690062007500740065006400200075006e00640065007200
200074006800650020002200420069007400730074007200650061006d00
0a005600650072006100220020006e0061006d00650073002e000a000a00
540068006500200046006f006e007400200053006f006600740077006100
7200650020006d0061007900200062006500200073006f006c0064002000
610073002000700061007200740020006f0066002000610020006c006100
7200670065007200200073006f0066007400770061007200650020007000
610063006b00610067006500200062007500740020006e006f000a006300
6f007000790020006f00660020006f006e00650020006f00720020006d00
6f007200650020006f0066002000740068006500200046006f006e007400
200053006f00660074007700610072006500200074007900700065006600
610063006500730020006d0061007900200062006500200073006f006c00
6400200062007900200069007400730065006c0066002e000a000a005400
48004500200046004f004e005400200053004f0046005400570041005200
45002000490053002000500052004f005600490044004500440020002200
4100530020004900530022002c00200057004900540048004f0055005400
2000570041005200520041004e005400590020004f004600200041004e00
590020004b0049004e0044002c0020004500580050005200450053005300
0a004f005200200049004d0050004c004900450044002c00200049004e00
43004c005500440049004e004700200042005500540020004e004f005400
20004c0049004d004900540045004400200054004f00200041004e005900
2000570041005200520041004e00540049004500530020004f0046002000
4d00450052004300480041004e0054004100420049004c00490054005900
2c000a004600490054004e00450053005300200046004f00520020004100
200050004100520054004900430055004c00410052002000500055005200
50004f0053004500200041004e00440020004e004f004e0049004e004600
520049004e00470045004d0045004e00540020004f004600200043004f00
50005900520049004700480054002c00200050004100540045004e005400
2c000a00540052004100440045004d00410052004b002c0020004f005200
20004f0054004800450052002000520049004700480054002e0020004900
4e0020004e004f0020004500560045004e00540020005300480041004c00
4c002000420049005400530054005200450041004d0020004f0052002000
540048004500200047004e004f004d0045000a0046004f0055004e004400
4100540049004f004e0020004200450020004c004900410042004c004500
200046004f005200200041004e005900200043004c00410049004d002c00
2000440041004d00410047004500530020004f00520020004f0054004800
4500520020004c0049004100420049004c004900540059002c0020004900
4e0043004c005500440049004e0047000a0041004e005900200047004500
4e004500520041004c002c0020005300500045004300490041004c002c00
200049004e004400490052004500430054002c00200049004e0043004900
440045004e00540041004c002c0020004f005200200043004f004e005300
45005100550045004e005400490041004c002000440041004d0041004700
450053002c000a005700480045005400480045005200200049004e002000
41004e00200041004300540049004f004e0020004f004600200043004f00
4e00540052004100430054002c00200054004f005200540020004f005200
20004f00540048004500520057004900530045002c002000410052004900
530049004e0047002000460052004f004d002c0020004f00550054002000
4f0046000a00540048004500200055005300450020004f00520020004900
4e004100420049004c00490054005900200054004f002000550053004500
2000540048004500200046004f004e005400200053004f00460054005700
41005200450020004f0052002000460052004f004d0020004f0054004800
4500520020004400450041004c0049004e0047005300200049004e002000
5400480045000a0046004f004e005400200053004f004600540057004100
520045002e000a000a004500780063006500700074002000610073002000
63006f006e007400610069006e0065006400200069006e00200074006800
6900730020006e006f0074006900630065002c0020007400680065002000
6e0061006d006500730020006f006600200047006e006f006d0065002c00
2000740068006500200047006e006f006d0065000a0046006f0075006e00
64006100740069006f006e002c00200061006e0064002000420069007400
730074007200650061006d00200049006e0063002e002c00200073006800
61006c006c0020006e006f00740020006200650020007500730065006400
200069006e0020006100640076006500720074006900730069006e006700
20006f0072000a006f007400680065007200770069007300650020007400
6f002000700072006f006d006f0074006500200074006800650020007300
61006c0065002c00200075007300650020006f00720020006f0074006800
6500720020006400650061006c0069006e0067007300200069006e002000
7400680069007300200046006f006e007400200053006f00660074007700
6100720065000a0077006900740068006f00750074002000700072006900
6f00720020007700720069007400740065006e0020006100750074006800
6f00720069007a006100740069006f006e002000660072006f006d002000
740068006500200047006e006f006d006500200046006f0075006e006400
6100740069006f006e0020006f0072002000420069007400730074007200
650061006d000a0049006e0063002e002c00200072006500730070006500
630074006900760065006c0079002e00200046006f007200200066007500
72007400680065007200200069006e0066006f0072006d00610074006900
6f006e002c00200063006f006e0074006100630074003a00200066006f00
6e0074007300200061007400200067006e006f006d006500200064006f00
74000a006f00720067002e0020000a000a00410072006500760020004600
6f006e0074007300200043006f0070007900720069006700680074000a00
2d002d002d002d002d002d002d002d002d002d002d002d002d002d002d00
2d002d002d002d002d002d002d002d002d002d002d002d002d002d002d00
0a000a0043006f0070007900720069006700680074002000280063002900
2000320030003000360020006200790020005400610076006d006a006f00
6e00670020004200610068002e00200041006c006c002000520069006700
6800740073002000520065007300650072007600650064002e000a000a00
5000650072006d0069007300730069006f006e0020006900730020006800
6500720065006200790020006700720061006e007400650064002c002000
660072006500650020006f00660020006300680061007200670065002c00
200074006f00200061006e007900200070006500720073006f006e002000
6f0062007400610069006e0069006e0067000a006100200063006f007000
790020006f0066002000740068006500200066006f006e00740073002000
6100630063006f006d00700061006e00790069006e006700200074006800
6900730020006c006900630065006e007300650020002800220046006f00
6e007400730022002900200061006e0064000a006100730073006f006300
69006100740065006400200064006f00630075006d0065006e0074006100
740069006f006e002000660069006c006500730020002800740068006500
2000220046006f006e007400200053006f00660074007700610072006500
220029002c00200074006f00200072006500700072006f00640075006300
65000a0061006e0064002000640069007300740072006900620075007400
6500200074006800650020006d006f006400690066006900630061007400
69006f006e007300200074006f0020007400680065002000420069007400
730074007200650061006d0020005600650072006100200046006f006e00
7400200053006f006600740077006100720065002c000a0069006e006300
6c007500640069006e006700200077006900740068006f00750074002000
6c0069006d00690074006100740069006f006e0020007400680065002000
720069006700680074007300200074006f0020007500730065002c002000
63006f00700079002c0020006d0065007200670065002c00200070007500
62006c006900730068002c000a0064006900730074007200690062007500
740065002c00200061006e0064002f006f0072002000730065006c006c00
200063006f00700069006500730020006f00660020007400680065002000
46006f006e007400200053006f006600740077006100720065002c002000
61006e006400200074006f0020007000650072006d00690074000a007000
6500720073006f006e007300200074006f002000770068006f006d002000
740068006500200046006f006e007400200053006f006600740077006100
7200650020006900730020006600750072006e0069007300680065006400
200074006f00200064006f00200073006f002c0020007300750062006a00
650063007400200074006f000a00740068006500200066006f006c006c00
6f00770069006e006700200063006f006e0064006900740069006f006e00
73003a000a000a005400680065002000610062006f007600650020006300
6f007000790072006900670068007400200061006e006400200074007200
6100640065006d00610072006b0020006e006f0074006900630065007300
200061006e0064002000740068006900730020007000650072006d006900
7300730069006f006e0020006e006f0074006900630065000a0073006800
61006c006c00200062006500200069006e0063006c007500640065006400
200069006e00200061006c006c00200063006f0070006900650073002000
6f00660020006f006e00650020006f00720020006d006f00720065002000
6f0066002000740068006500200046006f006e007400200053006f006600
740077006100720065000a00740079007000650066006100630065007300
2e000a000a00540068006500200046006f006e007400200053006f006600
7400770061007200650020006d006100790020006200650020006d006f00
6400690066006900650064002c00200061006c0074006500720065006400
2c0020006f007200200061006400640065006400200074006f002c002000
61006e006400200069006e000a0070006100720074006900630075006c00
6100720020007400680065002000640065007300690067006e0073002000
6f006600200067006c00790070006800730020006f007200200063006800
61007200610063007400650072007300200069006e002000740068006500
200046006f006e007400730020006d00610079002000620065000a006d00
6f00640069006600690065006400200061006e0064002000610064006400
6900740069006f006e0061006c00200067006c0079007000680073002000
6f0072002000630068006100720061006300740065007200730020006d00
61007900200062006500200061006400640065006400200074006f002000
7400680065000a0046006f006e00740073002c0020006f006e006c007900
2000690066002000740068006500200066006f006e007400730020006100
720065002000720065006e0061006d0065006400200074006f0020006e00
61006d006500730020006e006f007400200063006f006e00740061006900
6e0069006e00670020006500690074006800650072000a00740068006500
200077006f00720064007300200022005400610076006d006a006f006e00
67002000420061006800220020006f007200200074006800650020007700
6f007200640020002200410072006500760022002e000a000a0054006800
6900730020004c006900630065006e007300650020006200650063006f00
6d006500730020006e0075006c006c00200061006e006400200076006f00
69006400200074006f002000740068006500200065007800740065006e00
740020006100700070006c0069006300610062006c006500200074006f00
200046006f006e00740073000a006f007200200046006f006e0074002000
53006f006600740077006100720065002000740068006100740020006800
6100730020006200650065006e0020006d006f0064006900660069006500
6400200061006e0064002000690073002000640069007300740072006900
62007500740065006400200075006e006400650072002000740068006500
20000a0022005400610076006d006a006f006e0067002000420061006800
20004100720065007600220020006e0061006d00650073002e000a000a00
540068006500200046006f006e007400200053006f006600740077006100
7200650020006d0061007900200062006500200073006f006c0064002000
610073002000700061007200740020006f0066002000610020006c006100
7200670065007200200073006f0066007400770061007200650020007000
610063006b0061006700650020006200750074000a006e006f0020006300
6f007000790020006f00660020006f006e00650020006f00720020006d00
6f007200650020006f0066002000740068006500200046006f006e007400
200053006f00660074007700610072006500200074007900700065006600
610063006500730020006d0061007900200062006500200073006f006c00
64002000620079000a0069007400730065006c0066002e000a000a005400
48004500200046004f004e005400200053004f0046005400570041005200
45002000490053002000500052004f005600490044004500440020002200
4100530020004900530022002c00200057004900540048004f0055005400
2000570041005200520041004e005400590020004f004600200041004e00
590020004b0049004e0044002c000a004500580050005200450053005300
20004f005200200049004d0050004c004900450044002c00200049004e00
43004c005500440049004e004700200042005500540020004e004f005400
20004c0049004d004900540045004400200054004f00200041004e005900
2000570041005200520041004e00540049004500530020004f0046000a00
4d00450052004300480041004e0054004100420049004c00490054005900
2c0020004600490054004e00450053005300200046004f00520020004100
200050004100520054004900430055004c00410052002000500055005200
50004f0053004500200041004e00440020004e004f004e0049004e004600
520049004e00470045004d0045004e0054000a004f004600200043004f00
50005900520049004700480054002c00200050004100540045004e005400
2c002000540052004100440045004d00410052004b002c0020004f005200
20004f0054004800450052002000520049004700480054002e0020004900
4e0020004e004f0020004500560045004e00540020005300480041004c00
4c000a005400410056004d004a004f004e00470020004200410048002000
4200450020004c004900410042004c004500200046004f00520020004100
4e005900200043004c00410049004d002c002000440041004d0041004700
4500530020004f00520020004f00540048004500520020004c0049004100
420049004c004900540059002c000a0049004e0043004c00550044004900
4e004700200041004e0059002000470045004e004500520041004c002c00
20005300500045004300490041004c002c00200049004e00440049005200
4500430054002c00200049004e0043004900440045004e00540041004c00
2c0020004f005200200043004f004e00530045005100550045004e005400
490041004c000a00440041004d0041004700450053002c00200057004800
45005400480045005200200049004e00200041004e002000410043005400
49004f004e0020004f004600200043004f004e0054005200410043005400
2c00200054004f005200540020004f00520020004f005400480045005200
57004900530045002c002000410052004900530049004e0047000a004600
52004f004d002c0020004f005500540020004f0046002000540048004500
200055005300450020004f005200200049004e004100420049004c004900
54005900200054004f002000550053004500200054004800450020004600
4f004e005400200053004f0046005400570041005200450020004f005200
2000460052004f004d000a004f0054004800450052002000440045004100
4c0049004e0047005300200049004e002000540048004500200046004f00
4e005400200053004f004600540057004100520045002e000a000a004500
78006300650070007400200061007300200063006f006e00740061006900
6e0065006400200069006e002000740068006900730020006e006f007400
6900630065002c00200074006800650020006e0061006d00650020006f00
660020005400610076006d006a006f006e00670020004200610068002000
7300680061006c006c0020006e006f0074000a0062006500200075007300
65006400200069006e002000610064007600650072007400690073006900
6e00670020006f00720020006f0074006800650072007700690073006500
200074006f002000700072006f006d006f00740065002000740068006500
2000730061006c0065002c00200075007300650020006f00720020006f00
74006800650072000a006400650061006c0069006e006700730020006900
6e0020007400680069007300200046006f006e007400200053006f006600
74007700610072006500200077006900740068006f007500740020007000
720069006f00720020007700720069007400740065006e00200061007500
740068006f00720069007a006100740069006f006e000a00660072006f00
6d0020005400610076006d006a006f006e00670020004200610068002e00
200046006f00720020006600750072007400680065007200200069006e00
66006f0072006d006100740069006f006e002c00200063006f006e007400
6100630074003a0020007400610076006d006a006f006e00670020004000
200066007200650065000a002e002000660072002e006800740074007000
3a002f002f00640065006a006100760075002e0073006f00750072006300
650066006f007200670065002e006e00650074002f00770069006b006900
2f0069006e006400650078002e007000680070002f004c00690063006500
6e0073006500440065006a006100560075002000530061006e0073004200
6f006f006b00b8028040fffbfe03fa1403f92503f83203f79603f60e03f5
fe03f4fe03f32503f20e03f19603f02503ef8a4105effe03ee9603ed9603
ecfa03ebfa03eafe03e93a03e84203e7fe03e63203e5e45305e59603e48a
4105e45303e3e22f05e3fa03e22f03e1fe03e0fe03df3203de1403dd9603
dcfe03db1203da7d03d9bb03d8fe03d68a4105d67d03d5d44705d57d03d4
4703d3d21b05d3fe03d21b03d1fe03d0fe03cffe03cefe03cd9603cccb1e
05ccfe03cb1e03ca3203c9fe03c6851105c61c03c51603c4fe03c3fe03c2
fe03c1fe03c0fe03bffe03befe03bdfe03bcfe03bbfe03ba1103b9862505
b9fe03b8b7bb05b8fe03b7b65d05b7bb03b78004b6b52505b65d40ff03b6
4004b52503b4fe03b39603b2fe03b1fe03b0fe03affe03ae6403ad0e03ac
ab2505ac6403abaa1205ab2503aa1203a98a4105a9fa03a8fe03a7fe03a6
fe03a51203a4fe03a3a20e05a33203a20e03a16403a08a4105a096039ffe
039e9d0c059efe039d0c039c9b19059c64039b9a10059b19039a1003990a
0398fe0397960d0597fe03960d03958a410595960394930e05942803930e
0392fa039190bb0591fe03908f5d0590bb039080048f8e25058f5d038f40
048e25038dfe038c8b2e058cfe038b2e038a8625058a410389880b058914
03880b03878625058764038685110586250385110384fe038382110583fe
0382110381fe0380fe037ffe0340ff7e7d7d057efe037d7d037c64037b54
15057b25037afe0379fe03780e03770c03760a0375fe0374fa0373fa0372
fa0371fa0370fe036ffe036efe036c21036bfe036a1142056a530369fe03
687d036711420566fe0365fe0364fe0363fe0362fe03613a0360fa035e0c
035dfe035bfe035afe0359580a0559fa03580a035716190557320356fe03
5554150555420354150353011005531803521403514a130551fe03500b03
4ffe034e4d10054efe034d10034cfe034b4a13054bfe034a4910054a1303
491d0d05491003480d0347fe0346960345960344fe0343022d0543fa0342
bb03414b0340fe033ffe033e3d12053e14033d3c0f053d12033c3b0d053c
40ff0f033b0d033afe0339fe033837140538fa033736100537140336350b
05361003350b03341e03330d0332310b0532fe03310b03302f0b05300d03
2f0b032e2d09052e10032d09032c32032b2a25052b64032a2912052a2503
2912032827250528410327250326250b05260f03250b0324fe0323fe0322
0f03210110052112032064031ffa031e1d0d051e64031d0d031c1142051c
fe031bfa031a42031911420519fe031864031716190517fe031601100516
190315fe0314fe0313fe031211420512fe0311022d05114203107d030f64
030efe030d0c16050dfe030c0110050c16030bfe030a100309fe0308022d
0508fe030714030664030401100504fe03401503022d0503fe0302011005
022d0301100300fe0301b80164858d012b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b1d00>
[2317 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 0 0 <00020066fe96046605a400030007001a400c04fb0006fb0108057f020400
2fc4d4ec310010d4ecd4ec301311211125211121660400fc73031bfce5fe
96070ef8f2720629>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
end
end
%ADOEndSubsetFont
[/N9 (WKFBAA+DejaVuSans) -1 TZ
191.6 516.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 68 1 <00010073ffe3058b05f0001d0039402000051b0195031b950812a111ae15
950e91088c1e02001c1134043318190b101e10fcecfce4fcc4310010e4f4
ecf4ec10fed4ee1139393025112135211106042320001110002132041715
2e0123200011100021323604c3feb6021275fee6a0fea2fe75018b015e92
01076f70fc8bfeeefeed011301126ba8d50191a6fd7f53550199016d016e
01994846d75f60fecefed1fed2fece250000>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g1 1 def
end
WKFBAA+DejaVuSans /Encoding get
dup 1 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\001) show
Q
q
1 j
n
226.8 508.5 m
212.6 508.5 l
212.6 536.9 l
240.9 536.9 l
240.9 508.5 l
226.8 508.5 l
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
S
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
221.2 516.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 236 2 <00020071fe56045a047b000b0028004a4023190c1d0912861316b90f03b9
2623b827bc09b90fbd1a1d261900080c4706121220452910fcc4ecf4ec32
3231002fc4e4ece4f4c4ec10fed5ee1112393930b6602a802aa02a03015d
01342623220615141633323617100221222627351e013332363d010e0123
220211101233321617353303a2a59594a5a59495a5b8fefefa61ac51519e
52b5b439b27ccefcfcce7cb239b8023dc8dcdcc8c7dcdcebfee2fee91d1e
b32c2abdbf5b6362013a01030104013a6263aa00>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g2 2 def
end
WKFBAA+DejaVuSans /Encoding get
dup 2 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\002) show
Q
q
1 j
n
311.8 508.5 m
297.6 508.5 l
297.6 536.9 l
326.0 536.9 l
326.0 508.5 l
311.8 508.5 l
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
S
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
305.0 516.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\001) show
Q
q
1 j
n
340.2 508.5 m
326.0 508.5 l
326.0 536.9 l
354.3 536.9 l
354.3 508.5 l
340.2 508.5 l
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
S
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
334.6 516.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\002) show
Q
q
1 j
n
198.4 423.5 m
184.3 423.5 l
184.3 451.8 l
212.6 451.8 l
212.6 423.5 l
198.4 423.5 l
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
S
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
191.6 431.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\001) show
Q
q
1 j
n
226.8 423.5 m
212.6 423.5 l
212.6 451.8 l
240.9 451.8 l
240.9 423.5 l
226.8 423.5 l
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
S
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
221.2 431.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\002) show
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
503.1 516.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 436 3 <000200c90000048d05d500080013003a40180195100095098112100a0802
040005190d3f11001c09041410fcec32fcec11173931002ff4ecd4ec3040
0b0f151f153f155f15af1505015d01113332363534262325213204151404
2b0111230193fe8d9a9a8dfe3801c8fb0101fefffbfeca052ffdcf928786
92a6e3dbdde2fda8>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g3 3 def
end
WKFBAA+DejaVuSans /Encoding get
dup 3 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\003) show
512.9 516.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 564 4 <0002007bffe3042d047b000a002500bc4027191f0b17090e00a91706b90e
1120861fba1cb923b8118c170c001703180d09080b1f030814452610fcec
ccd4ec323211393931002fc4e4f4fcf4ec10c6ee10ee1139113912393040
6e301d301e301f3020302130223f27401d401e401f402040214022501d50
1e501f50205021502250277027851d871e871f8720872185229027a027f0
271e301e301f30203021401e401f40204021501e501f50205021601e601f
60206021701e701f70207021801e801f80208021185d015d012206151416
3332363d01371123350e01232226353436332135342623220607353e0133
321602bedfac816f99b9b8b83fbc88accbfdfb0102a79760b65465be5af3
f00233667b6273d9b4294cfd81aa6661c1a2bdc0127f8b2e2eaa2727fc00
>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g4 4 def
end
WKFBAA+DejaVuSans /Encoding get
dup 4 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\004) show
523.7 516.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 864 5 <000100ba0000034a047b001100304014060b0700110b03870eb809bc070a
06080008461210fcc4ec3231002fe4f4ecc4d4cc11123930b450139f1302
015d012e012322061511231133153e0133321617034a1f492c9ca7b9b93a
ba85132e1c03b41211cbbefdb20460ae666305050000>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g5 5 def
end
WKFBAA+DejaVuSans /Encoding get
dup 5 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\005) show
530.6 516.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 976 6 <00020071ffe3047f047b0014001b00704024001501098608880515a90105
b90c01bb18b912b80c8c1c1b1502081508004b02120f451c10fcecf4ecc4
111239310010e4f4ece410ee10ee10f4ee1112393040293f1d701da01dd0
1df01d053f003f013f023f153f1b052c072f082f092c0a6f006f016f026f
156f1b095d71015d0115211e0133323637150e0123200011100033320007
2e0123220607047ffcb20ccdb76ac76263d06bfef4fec70129fce20107b8
02a5889ab90e025e5abec73434ae2a2c0138010a01130143feddc497b4ae
9e00>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g6 6 def
end
WKFBAA+DejaVuSans /Encoding get
dup 6 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\006) show
541.4 516.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 1188 7 <000100ba00000464047b001300364019030900030e0106870e11b80cbc0a
010208004e0d09080b461410fcec32f4ec31002f3ce4f4c4ec1112173930
b46015cf1502015d0111231134262322061511231133153e013332160464
b87c7c95acb9b942b375c1c602a4fd5c029e9f9ebea4fd870460ae6564ef
>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g7 7 def
end
WKFBAA+DejaVuSans /Encoding get
dup 7 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\007) show
552.5 516.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 1308 8 <00010037000002f2059e0013003840190e05080f03a9001101bc08870a0b
08090204000810120e461410fc3cc4fc3cc432393931002fecf43cc4ec32
11393930b2af1501015d01112115211114163b0115232226351123353311
0177017bfe854b73bdbdd5a28787059efec28ffda0894e9a9fd202608f01
3e000000>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g8 8 def
end
WKFBAA+DejaVuSans /Encoding get
dup 8 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\b) show
559.5 516.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 1432 9 <0001006fffe303c7047b002700e7403c0d0c020e0b531f1e080902070a53
1e1f1e420a0b1e1f041500860189041486158918b91104b925b8118c281e
0a0b1f1b0700521b080e07081422452810fcc4ecd4ece411123939393931
0010e4f4ec10fef5ee10f5ee121739304b535807100eed111739070eed11
17395922b2002701015d406d1c0a1c0b1c0c2e092c0a2c0b2c0c3b093b0a
3b0b3b0c0b200020012402280a280b2a132f142f152a16281e281f292029
212427860a860b860c860d12000000010202060a060b030c030d030e030f
03100319031a031b031c041d09272f293f295f297f2980299029a029f029
185d005d7101152e012322061514161f011e0115140623222627351e0133
32363534262f012e01353436333216038b4ea85a898962943fc4a5f7d85a
c36c66c661828c65ab40ab98e0ce66b4043fae282854544049210e2a9989
9cb62323be353559514b50250f2495829eac1e000000>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g9 9 def
end
WKFBAA+DejaVuSans /Encoding get
dup 9 /g9 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\t) show
Q
n
198.4 451.8 m
194.2 464.6 l
202.7 464.6 l
198.4 451.8 l
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
eofill
n
198.4 508.5 m
198.4 462.0 l
S
n
113.4 451.8 m
124.5 459.4 l
126.8 451.2 l
113.4 451.8 l
h
eofill
n
311.8 508.5 m
123.2 454.6 l
S
q
1 j
n
311.8 423.5 m
297.6 423.5 l
297.6 451.8 l
326.0 451.8 l
326.0 423.5 l
311.8 423.5 l
h
S
Q
q
306.2 431.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\002) show
Q
q
1 j
n
340.2 423.5 m
326.0 423.5 l
326.0 451.8 l
354.3 451.8 l
354.3 423.5 l
340.2 423.5 l
h
S
Q
q
333.4 431.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\001) show
Q
q
1 j
n
425.2 423.5 m
411.0 423.5 l
411.0 451.8 l
439.4 451.8 l
439.4 423.5 l
425.2 423.5 l
h
S
Q
q
419.6 431.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\002) show
Q
q
1 j
n
453.5 423.5 m
439.4 423.5 l
439.4 451.8 l
467.7 451.8 l
467.7 423.5 l
453.5 423.5 l
h
S
Q
q
448.0 431.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\002) show
Q
q
1 j
n
85.0 423.5 m
70.9 423.5 l
70.9 451.8 l
99.2 451.8 l
99.2 423.5 l
85.0 423.5 l
h
S
Q
q
78.3 431.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\001) show
Q
q
1 j
n
113.4 423.5 m
99.2 423.5 l
99.2 451.8 l
127.6 451.8 l
127.6 423.5 l
113.4 423.5 l
h
S
Q
q
106.6 431.4 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\001) show
Q
n
85.0 451.8 m
94.5 461.3 l
98.4 453.7 l
85.0 451.8 l
h
eofill
n
198.4 508.5 m
94.2 456.4 l
S
n
226.8 451.8 m
236.3 461.3 l
240.1 453.7 l
226.8 451.8 l
h
eofill
n
340.2 508.5 m
235.9 456.4 l
S
n
311.8 451.8 m
298.8 455.4 l
303.6 462.4 l
311.8 451.8 l
h
eofill
n
226.8 508.5 m
303.3 457.5 l
S
n
340.2 451.8 m
330.7 461.3 l
338.3 465.2 l
340.2 451.8 l
h
eofill
n
311.8 508.5 m
335.6 461.0 l
S
n
425.2 451.8 m
411.8 451.2 l
414.1 459.4 l
425.2 451.8 l
h
eofill
n
226.8 508.5 m
415.4 454.6 l
S
n
453.5 451.8 m
440.2 453.7 l
444.0 461.3 l
453.5 451.8 l
h
eofill
n
340.2 508.5 m
444.4 456.4 l
S
q
495.3 431.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 1784 10 <00020073ffe305d905f0000b00170023401306951200950c91128c180919
0f33031915101810fcecfcec310010e4f4ec10ee30012200111000333200
1110002720001110002120001110000327dcfefd0103dcdc0101feffdc01
3a0178fe88fec6fec5fe870179054cfeb8fee5fee6feb80148011a011b01
48a4fe5bfe9efe9ffe5b01a40162016201a50000>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g10 10 def
end
WKFBAA+DejaVuSans /Encoding get
dup 10 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 18.0 Tf
(\n) show
509.2 431.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 1924 11 <0001002f000002f8061400130059401c0510010c08a906018700970e06bc
0a02130700070905080d0f0b4c1410fc4bb00a5458b9000b004038594bb0
0e5458b9000bffc038593cc4fc3cc4c412393931002fe432fcec10ee3212
39393001b640155015a015035d01152322061d0121152111231123353335
34363302f8b0634d012ffed1b9b0b0aebd0614995068638ffc2f03d18f4e
bbab>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g11 11 def
end
WKFBAA+DejaVuSans /Encoding get
dup 11 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\013\013)
[6.33609 6.33609 ] pdfxs
521.7 431.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\t) show
530.9 431.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 2076 12 <000200bafe5604a4047b0010001c003e401b1ab9000e14b90508b80e8c01
bd03bc1d11120b471704000802461d10fcec3232f4ec310010e4e4e4f4c4
ec10c4ee304009601e801ea01ee01e04015d2511231133153e0133320011
10022322260134262322061514163332360173b9b93ab17bcc00ffffcc7b
b10238a79292a7a79292a7a8fdae060aaa6461febcfef8fef8febc6101eb
cbe7e7cbcbe7e7000000>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g12 12 def
end
WKFBAA+DejaVuSans /Encoding get
dup 12 /g12 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\f) show
542.1 431.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\005) show
549.3 431.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
1 2236 13 <000200c100000179061400030007002b400e06be04b100bc020501080400
460810fc3cec3231002fe4fcec30400b1009400950096009700905015d13
33112311331523c1b8b8b8b80460fba00614e900>WKFBAA+DejaVuSans AddT42Char 
WKFBAA+DejaVuSans /CharStrings get begin
/g13 13 def
end
WKFBAA+DejaVuSans /Encoding get
dup 13 /g13 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\r) show
554.2 431.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\007) show
565.4 431.3 m
%ADOBeginSubsetFont: WKFBAA+DejaVuSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+DejaVuSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\002) show
Q
Q
Q
/WKFBAA+DejaVuSans /Font _pdfUndefineResource
/N9 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
