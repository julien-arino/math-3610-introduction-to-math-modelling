%!PS-Adobe-3.0 EPSF-3.0
%%Title: (SIRS_massaction.pdf)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 09:14:31 02/06/07
%%For: (Julien Arino)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 126 348 450 447
%%HiResBoundingBox: 125.75 348.0 450.0 446.6
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3523 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2007-02-06T09:14:31-06:00</xap:CreateDate>
         <xap:ModifyDate>2007-02-06T09:14:31-06:00</xap:ModifyDate>
         <xap:MetadataDate>2007-02-06T09:14:31-06:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:26CD4D7FA8B5DB11BA14E4F48F8EB94B</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:26CD4D7FA8B5DB11BA14E4F48F8EB94B</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:15b00934-77fd-49c5-97ad-d2eae6c9208e</stRef:instanceID>
            <stRef:documentID>uuid:096d5e95-fc48-4a0d-84c5-d574a656f1d5</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Julien Arino</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
125.75 348.0 324.25 98.6 rectclip
q
125.75 348.0 m
450.0 348.0 l
450.0 446.6 l
125.75 446.6 l
h
W
n
0.0 w
q
n
0.0 -0.1 612.1 792.1 re
eoclip
n
q
1 j
n
190.8 391.2 m
178.9 391.2 169.2 396.1 169.2 402.0 c
169.2 408.0 178.9 412.8 190.8 412.8 c
202.7 412.8 212.4 408.0 212.4 402.0 c
212.4 396.1 202.7 391.2 190.8 391.2 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
S
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
%ADOBeginSubsetFont: PEAAAA+ArialMT Initial
ct_T42Dict begin
0 -0.012 0.707 0.727
 256 array 0 1 255 {1 index exch /.notdef put} for  /PEAAAA+ArialMT
Type42DictBegin
[<00010000000b000b000b000b6376742095dc2eda000000bc000006306670
676d0c627852000006ec0000066e676c7966d01d07be000044c800000624
68656164e370c00e00000d5c000000366868656153fe820700000d940000
0024686d7478bc02561200000db8000000106c6f6361f1017c0400000dc8
0000000a6d617870630a7d0400000dd4000000206e616d6548bdba780000
0df400002bd170726570bab6f7a6000039c800000aff6764697200000000
000000000000000005ba001905ba001a05a70019042600180000ffe70000
ffe80000ffe7fe69ffe805ba0019fe69ffe802ea000000b8000000b80000
000000a800ad016900ad00bf00c201f0001800af00b900b400c800170044
009c007c009400870006005a00c80089005200520005004400940119ffb4
002f00a1000300a100cd00170057007e00ba00160118ffe9007f008503d3
00870085000d002200410050006f008d014cff75005c00df04830037004c
006e00700180ff58ff8eff92ffa400a500b903c8fffd000b001a00630063
00cdffee05d8ffdc002d005c0095009900df019209b500400057008000b9
039d0072009a035d0401ff67fffa00030021007700cd0004004d00cd01c0
022b004c006500e70118017c034305d8ffa3ffb0ffc40003001c005d0068
009a00ba013501470221055cff4dffcd0016002d00780080009900b200b6
00b600b800bd00da010c05f0ffa4fff00019002c0049007f00b400ce01c0
03fefd81fe3f000000050018002900390049006f00be00c700d0012301c1
026f050c05320540057affd4001400310055005700a700b400e601f7027e
027e027f03c60446ff42000e0085009100bf00c200c500e1011a012f014f
01560229026f029e03720008002c00310031006400690089009800c700de
012b01b6020c02cf03a304ab04fb061dfee0ff0e00060026009b009d00c1
010d011801200173018201d601e30243025f029b02e2039404a904d20761
001c005e006d008d00ab00f7011201380151015b0168017c018701910199
01cd01d001e802410254026b02ef0368037103bd04420442045304730483
0586058b06e8fe58fec4fed1fef7ff32ff860051007c008100910095009e
00b400b900cf00d900d900df00e20105010b010e010e012001210155017b
017b017e018d01a201a801a901b401d001d001e201e901f201f501fb0200
02000206021b0221022202220223027202770294029c02cf02cf02d002ec
02f903170322032b0335033c0359036f037103870390039003b503e1041a
04cf04ff053205320596059f05a805ab05c205f0060c0782080008ccfca3
fd2afddefe00fe88fe96feb2feb4ffe100150019001a001c001f003c0051
00610061006a0078009600a500af00d3010c0118011a012a013e014c0151
015f016a0171017801820184019a01a501a801a901ae01bc01cd01d701ef
0200020d021c02210222022e02350242024f024f025e0265027102900292
02b402d602fa0307030b030f0315032a0347035d036503740379039603b0
03cc03dd03e203f603fc03fc03ff040a041f04220426042b0447045f0475
049e04e704e7055c05cb05e5060a066d068606b806f10736073e07500751
075d078f07b607d4086000b600c300b500b7000000000000000000000000
01e00381034503b5008e0233041902ce02ce002d005f0064034d023f0000
02a80188027d01b402240578063b023b014e00f00426029402c6029f02f6
023b034d014b0153006a0231000000000000061404aa0000003c04c300ed
04bc026502ce03b50078060c017e02ef060c00b201000239000001c50330
042b03cb00da03df010704a100db040a011701ed02a70350010b01bd043e
05580021039c00ae0371017d00b5024500000afb088c012b014e01aa0087
0054013201f803ff0003024e00b4003703e30083006b02d800ed00770088
009701640467008e0033017c00e700a6029e0329056e062a061501c90269
048a021301b4000204a9000002390124010305140084015d039a06ef02d9
007500cf040a00de03ac04bc02cf02ae034d04f005520168006d007d0086
0071ff810079055804d2016700030156002504e00094007c033204210094
007f0072005c002f00b6001800ba00b80041034d00720018001f004c016a
01550099009a009a009800b200040078006900140057006e00ce00b40654
02b80067050e016500e7000004cbfe52005affa60099ff67006eff92002d
ffd40087ff7c00b800a800e5008f00a80185fe7b0070001e00d900de014c
054602cf0546ff2d028a02d90253029600b7000000000000000000000000
00000125011800ea00ea00ae0000003e05bb008a04d70053003fff8cffd5
00150028002200990062004a00e4006d00ee00e5004803c00033fe4e02b1
ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a507050061
072b4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a29
2827262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b
0a090807060504030201002c4523466020b02660b004262348482d2c4523
46236120b02661b004262348482d2c45234660b0206120b04660b0042623
48482d2c4523462361b0206020b02661b02061b004262348482d2c452346
60b0406120b06660b004262348482d2c4523462361b0406020b02661b040
61b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51
582320b08d44235920b0ed51582320b04d44235920b09051582320b00d44
235921212d2c20204518684420b001602045b04676688a4560442d2c01b1
0b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0
172370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b0
0325456164b050515845441b2121592d2cb00143632362b0002342b00f2b
2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b
20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb0
172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0
172344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb0
172344b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b04061
8c482d2c4b53205c58b002855958b00185592d2c20b0032545b019234445
b01a23444565234520b00325606a20b009234223688a6a606120b01a8ab0
00527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114
008a5279b31940201945208a54582321b03f1b235961442d2cb110114323
430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b
2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121
592d2c0120b003252349b04060b0206320b000525823b002253823b00225
6538008a63381b212121212159012d2c4bb06451584569b00943608a103a
1b212121592d2c01b005251023208af500b0016023edec2d2c01b0052510
23208af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110
203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743
b006430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b000
5058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
b4000100000015b00826b00826b00826b008260f10161345683ab001162d
2cb4000100000015b00826b00826b00826b008260f1016134568653ab001
162d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b
2121592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb0
134358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b21
21592d2cb012435c580cb00425b00425060c6423646164b807085158b004
25b00425012046b01060482046b0106048590a21211b2121592d2cb01243
5c580cb00425b00425060c6423646164b807085158b00425b00425012046
b8fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b0
3a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515a
b012435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012
435c5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120
b0005458212043b0005558b00325b00325b8ffc038b8ffc038591bb04054
582043b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ff
c038b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a
462320468a608a61b8ff8062232010238ab902c202c28a70456020b00050
58b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851
b1400188535a58b910000020885458b202010243604259b12401885158b9
20000040885458b2020202436042b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b202100243604259b94000020063b80400885458b2024002436042595959
59592d2cb0024354584b53234b515a58381b2121591b21212121592d0000
00010000000300006b59acb95f0f3cf5081b080000000000a2e3272a0000
0000000000000000ffe705ad05d300000009000100000000000000010000
073efe4e0043000000000000000000010000000000000000000000000000
0004060001000556005c023900bf05c700a100000015016a01dc03120000
000100000004003100020000000000020010002f00560000040d0aff0003
000200000046034e000000030000000000fe00000000000300000001000a
00fe0000000300000002000e01080000000300000003005e011600000003
00000004000a017400000003000000050018017e0000000300000006000e
0196000000030000000700c401a400000003000000080026026800000003
00000009008a028e000000030000000a04c20318000000030000000b0062
07da000000030000000c0066083c000000030000000d06b408a200000003
0000000e005c0f560001000000000000007f0fb200010000000000010005
10310001000000000002000710360001000000000003002f103d00010000
000000040005106c0001000000000005000c107100010000000000060007
107d0001000000000007006210840001000000000008001310e600010000
00000009004510f9000100000000000a0261113e000100000000000b0031
139f000100000000000c003313d0000100000000000d035a140300010000
0000000e002e175d0003000104030002000c178b00030001040500020010
17970003000104060002000c17a70003000104070002001017b300030001
04080002001017c3000300010409000000fe17d30003000104090001000a
18d10003000104090002000e18db0003000104090003005e18e900030001
04090004000a19470003000104090005001819510003000104090006000e
1969000300010409000700c41977000300010409000800261a3b00030001
04090009008a1a61000300010409000a04c21aeb000300010409000b0062
1fad000300010409000c0066200f000300010409000d06b4207500030001
0409000e005c272900030001040a0002000c278500030001040b00020010
279100030001040c0002000c27a100030001040e0002000c27ad00030001
04100002000e27b90003000104130002001227c70003000104140002000c
27d90003000104150002001027e50003000104160002000c27f500030001
04190002000e280100030001041b00020010280f00030001041d0002000c
281f00030001041f0002000c282b0003000104240002000e283700030001
042a0002000e284500030001042d00020000285300030001080a0002000c
28530003000108160002000c285f000300010c0a0002000c286b00030001
0c0c0002000c287700540079007000650066006100630065002000a90020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e00200070006c0063002e0020
0044006100740061002000a900200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200070006c0063002f005400790070006500200053006f006c0075
00740069006f006e007300200049006e0063002e00200031003900390030
002d0031003900390032002e00200041006c006c00200052006900670068
007400730020005200650073006500720076006500640041007200690061
006c0052006500670075006c00610072004d006f006e006f007400790070
0065003a0041007200690061006c00200052006500670075006c00610072
003a00560065007200730069006f006e00200033002e0030003000200028
004d006900630072006f0073006f0066007400290041007200690061006c
00560065007200730069006f006e00200033002e00300030004100720069
0061006c004d00540041007200690061006c00ae00200054007200610064
0065006d00610072006b0020006f006600200054006800650020004d006f
006e006f007400790070006500200043006f00720070006f007200610074
0069006f006e00200070006c006300200072006500670069007300740065
00720065006400200069006e002000740068006500200055005300200050
006100740020002600200054004d0020004f00660066002e00200061006e
006400200065006c0073006500770068006500720065002e004d006f006e
006f00740079007000650020005400790070006f00670072006100700068
0079004d006f006e006f0074007900700065002000540079007000650020
00440072006100770069006e00670020004f006600660069006300650020
002d00200052006f00620069006e0020004e006900630068006f006c0061
0073002c0020005000610074007200690063006900610020005300610075
006e0064006500720073002000310039003800320043006f006e00740065
006d0070006f0072006100720079002000730061006e0073002000730065
007200690066002000640065007300690067006e002c0020004100720069
0061006c00200063006f006e007400610069006e00730020006d006f0072
0065002000680075006d0061006e00690073007400200063006800610072
006100630074006500720069007300740069006300730020007400680061
006e0020006d0061006e00790020006f0066002000690074007300200070
00720065006400650063006500730073006f0072007300200061006e0064
002000610073002000730075006300680020006900730020006d006f0072
006500200069006e002000740075006e0065002000770069007400680020
0074006800650020006d006f006f00640020006f00660020007400680065
0020006c006100730074002000640065006300610064006500730020006f
006600200074006800650020007400770065006e00740069006500740068
002000630065006e0074007500720079002e002000200054006800650020
006f0076006500720061006c006c002000740072006500610074006d0065
006e00740020006f00660020006300750072007600650073002000690073
00200073006f006600740065007200200061006e0064002000660075006c
006c006500720020007400680061006e00200069006e0020006d006f0073
007400200069006e0064007500730074007200690061006c002000730074
0079006c0065002000730061006e00730020007300650072006900660020
00660061006300650073002e00200020005400650072006d0069006e0061
006c0020007300740072006f006b00650073002000610072006500200063
007500740020006f006e002000740068006500200064006900610067006f
006e0061006c002000770068006900630068002000680065006c00700073
00200074006f002000670069007600650020007400680065002000660061
00630065002000610020006c0065007300730020006d0065006300680061
006e006900630061006c00200061007000700065006100720061006e0063
0065002e002000200041007200690061006c00200069007300200061006e
002000650078007400720065006d0065006c007900200076006500720073
006100740069006c0065002000660061006d0069006c00790020006f0066
002000740079007000650066006100630065007300200077006800690063
0068002000630061006e0020006200650020007500730065006400200077
00690074006800200065007100750061006c002000730075006300630065
0073007300200066006f0072002000740065007800740020007300650074
00740069006e006700200069006e0020007200650070006f007200740073
002c002000700072006500730065006e0074006100740069006f006e0073
002c0020006d006100670061007a0069006e006500730020006500740063
002c00200061006e006400200066006f007200200064006900730070006c
00610079002000750073006500200069006e0020006e0065007700730070
00610070006500720073002c002000610064007600650072007400690073
0069006e006700200061006e0064002000700072006f006d006f00740069
006f006e0073002e0068007400740070003a002f002f007700770077002e
006d006f006e006f0074007900700065002e0063006f006d002f00680074
006d006c002f006d0074006e0061006d0065002f006d0073005f00610072
00690061006c002e00680074006d006c0068007400740070003a002f002f
007700770077002e006d006f006e006f0074007900700065002e0063006f
006d002f00680074006d006c002f006d0074006e0061006d0065002f006d
0073005f00770065006c0063006f006d0065002e00680074006d006c004e
004f00540049004600490043004100540049004f004e0020004f00460020
004c004900430045004e00530045002000410047005200450045004d0045
004e0054000d000a000d000a005400680069007300200074007900700065
00660061006300650020006900730020007400680065002000700072006f
007000650072007400790020006f00660020004d006f006e006f00740079
007000650020005400790070006f00670072006100700068007900200061
006e00640020006900740073002000750073006500200062007900200079
006f007500200069007300200063006f0076006500720065006400200075
006e00640065007200200074006800650020007400650072006d00730020
006f0066002000610020006c006900630065006e00730065002000610067
007200650065006d0065006e0074002e00200059006f0075002000680061
007600650020006f0062007400610069006e006500640020007400680069
007300200074007900700065006600610063006500200073006f00660074
007700610072006500200065006900740068006500720020006400690072
006500630074006c0079002000660072006f006d0020004d006f006e006f
00740079007000650020006f007200200074006f00670065007400680065
00720020007700690074006800200073006f006600740077006100720065
002000640069007300740072006900620075007400650064002000620079
0020006f006e00650020006f00660020004d006f006e006f007400790070
0065002700730020006c006900630065006e0073006500650073002e000d
000a000d000a005400680069007300200073006f00660074007700610072
006500200069007300200061002000760061006c007500610062006c0065
0020006100730073006500740020006f00660020004d006f006e006f0074
007900700065002e00200055006e006c00650073007300200079006f0075
0020006800610076006500200065006e0074006500720065006400200069
006e0074006f002000610020007300700065006300690066006900630020
006c006900630065006e00730065002000610067007200650065006d0065
006e00740020006700720061006e00740069006e006700200079006f0075
0020006100640064006900740069006f006e0061006c0020007200690067
006800740073002c00200079006f0075007200200075007300650020006f
00660020007400680069007300200073006f006600740077006100720065
0020006900730020006c0069006d006900740065006400200074006f0020
0079006f0075007200200077006f0072006b00730074006100740069006f
006e00200066006f007200200079006f007500720020006f0077006e0020
007000750062006c0069007300680069006e00670020007500730065002e
00200059006f00750020006d006100790020006e006f007400200063006f
007000790020006f00720020006400690073007400720069006200750074
00650020007400680069007300200073006f006600740077006100720065
002e000d000a000d000a0049006600200079006f00750020006800610076
006500200061006e00790020007100750065007300740069006f006e0020
0063006f006e006300650072006e0069006e006700200079006f00750072
002000720069006700680074007300200079006f0075002000730068006f
0075006c0064002000720065007600690065007700200074006800650020
006c006900630065006e00730065002000610067007200650065006d0065
006e007400200079006f0075002000720065006300650069007600650064
00200077006900740068002000740068006500200073006f006600740077
0061007200650020006f007200200063006f006e00740061006300740020
004d006f006e006f007400790070006500200066006f0072002000610020
0063006f007000790020006f006600200074006800650020006c00690063
0065006e00730065002000610067007200650065006d0065006e0074002e
000d000a000d000a004d006f006e006f0074007900700065002000630061
006e00200062006500200063006f006e0074006100630074006500640020
00610074003a000d000a000d000a0055005300410020002d002000280038
0034003700290020003700310038002d0030003400300030000900090055
004b0020002d002000300031003100340034002000300031003700330037
0020003700360035003900350039000d000a0068007400740070003a002f
002f007700770077002e006d006f006e006f0074007900700065002e0063
006f006d0068007400740070003a002f002f007700770077002e006d006f
006e006f0074007900700065002e0063006f006d002f00680074006d006c
002f0074007900700065002f006c006900630065006e00730065002e0068
0074006d006c547970656661636520a920546865204d6f6e6f7479706520
436f72706f726174696f6e20706c632e204461746120a920546865204d6f
6e6f7479706520436f72706f726174696f6e20706c632f5479706520536f
6c7574696f6e7320496e632e20313939302d313939322e20416c6c205269
67687473205265736572766564417269616c526567756c61724d6f6e6f74
7970653a417269616c20526567756c61723a56657273696f6e20332e3030
20284d6963726f736f667429417269616c56657273696f6e20332e303041
7269616c4d54417269616ca82054726164656d61726b206f662054686520
4d6f6e6f7479706520436f72706f726174696f6e20706c63207265676973
746572656420696e2074686520555320506174202620544d204f66662e20
616e6420656c736577686572652e4d6f6e6f74797065205479706f677261
7068794d6f6e6f7479706520547970652044726177696e67204f66666963
65202d20526f62696e204e6963686f6c61732c2050617472696369612053
61756e646572732031393832436f6e74656d706f726172792073616e7320
73657269662064657369676e2c20417269616c20636f6e7461696e73206d
6f72652068756d616e697374206368617261637465726973746963732074
68616e206d616e79206f6620697473207072656465636573736f72732061
6e642061732073756368206973206d6f726520696e2074756e6520776974
6820746865206d6f6f64206f6620746865206c6173742064656361646573
206f6620746865207477656e74696574682063656e747572792e20205468
65206f766572616c6c2074726561746d656e74206f662063757276657320
697320736f6674657220616e642066756c6c6572207468616e20696e206d
6f737420696e647573747269616c207374796c652073616e732073657269
662066616365732e20205465726d696e616c207374726f6b657320617265
20637574206f6e2074686520646961676f6e616c2077686963682068656c
707320746f20676976652074686520666163652061206c657373206d6563
68616e6963616c20617070656172616e63652e2020417269616c20697320
616e2065787472656d656c7920766572736174696c652066616d696c7920
6f66207479706566616365732077686963682063616e2062652075736564
207769746820657175616c207375636365737320666f7220746578742073
657474696e6720696e207265706f7274732c2070726573656e746174696f
6e732c206d6167617a696e6573206574632c20616e6420666f7220646973
706c61792075736520696e206e6577737061706572732c20616476657274
6973696e6720616e642070726f6d6f74696f6e732e687474703a2f2f7777
772e6d6f6e6f747970652e636f6d2f68746d6c2f6d746e616d652f6d735f
617269616c2e68746d6c687474703a2f2f7777772e6d6f6e6f747970652e
636f6d2f68746d6c2f6d746e616d652f6d735f77656c636f6d652e68746d
6c4e4f54494649434154494f4e204f46204c4943454e5345204147524545
4d454e540d0a0d0a54686973207479706566616365206973207468652070
726f7065727479206f66204d6f6e6f74797065205479706f677261706879
20616e64206974732075736520627920796f7520697320636f7665726564
20756e64657220746865207465726d73206f662061206c6963656e736520
61677265656d656e742e20596f752068617665206f627461696e65642074
68697320747970656661636520736f667477617265206569746865722064
69726563746c792066726f6d204d6f6e6f74797065206f7220746f676574
686572207769746820736f66747761726520646973747269627574656420
6279206f6e65206f66204d6f6e6f747970652773206c6963656e73656573
2e0d0a0d0a5468697320736f66747761726520697320612076616c756162
6c65206173736574206f66204d6f6e6f747970652e20556e6c6573732079
6f75206861766520656e746572656420696e746f20612073706563696669
63206c6963656e73652061677265656d656e74206772616e74696e672079
6f75206164646974696f6e616c207269676874732c20796f757220757365
206f66207468697320736f667477617265206973206c696d697465642074
6f20796f757220776f726b73746174696f6e20666f7220796f7572206f77
6e207075626c697368696e67207573652e20596f75206d6179206e6f7420
636f7079206f722064697374726962757465207468697320736f66747761
72652e0d0a0d0a496620796f75206861766520616e79207175657374696f
6e20636f6e6365726e696e6720796f75722072696768747320796f752073
686f756c642072657669657720746865206c6963656e7365206167726565
6d656e7420796f7520726563656976656420776974682074686520736f66
7477617265206f7220636f6e74616374204d6f6e6f7479706520666f7220
6120636f7079206f6620746865206c6963656e73652061677265656d656e
742e0d0a0d0a4d6f6e6f747970652063616e20626520636f6e7461637465
642061743a0d0a0d0a555341202d202838343729203731382d3034303009
09554b202d203031313434203031373337203736353935390d0a68747470
3a2f2f7777772e6d6f6e6f747970652e636f6d687474703a2f2f7777772e
6d6f6e6f747970652e636f6d2f68746d6c2f747970652f6c6963656e7365
2e68746d6c004e006f0072006d0061006c006f00620079010d0065006a00
6e00e9006e006f0072006d0061006c005300740061006e00640061007200
64039a03b103bd03bf03bd03b903ba03ac00540079007000650066006100
630065002000a900200054006800650020004d006f006e006f0074007900
70006500200043006f00720070006f0072006100740069006f006e002000
70006c0063002e00200044006100740061002000a9002000540068006500
20004d006f006e006f007400790070006500200043006f00720070006f00
72006100740069006f006e00200070006c0063002f005400790070006500
200053006f006c007500740069006f006e007300200049006e0063002e00
200031003900390030002d0031003900390032002e00200041006c006c00
200052006900670068007400730020005200650073006500720076006500
640041007200690061006c0052006500670075006c00610072004d006f00
6e006f0074007900700065003a0041007200690061006c00200052006500
670075006c00610072003a00560065007200730069006f006e0020003300
2e0030003000200028004d006900630072006f0073006f00660074002900
41007200690061006c00560065007200730069006f006e00200033002e00
3000300041007200690061006c004d00540041007200690061006c00ae00
2000540072006100640065006d00610072006b0020006f00660020005400
6800650020004d006f006e006f007400790070006500200043006f007200
70006f0072006100740069006f006e00200070006c006300200072006500
67006900730074006500720065006400200069006e002000740068006500
200055005300200050006100740020002600200054004d0020004f006600
66002e00200061006e006400200065006c00730065007700680065007200
65002e004d006f006e006f00740079007000650020005400790070006f00
6700720061007000680079004d006f006e006f0074007900700065002000
54007900700065002000440072006100770069006e00670020004f006600
660069006300650020002d00200052006f00620069006e0020004e006900
630068006f006c00610073002c0020005000610074007200690063006900
610020005300610075006e00640065007200730020003100390038003200
43006f006e00740065006d0070006f007200610072007900200073006100
6e0073002000730065007200690066002000640065007300690067006e00
2c00200041007200690061006c00200063006f006e007400610069006e00
730020006d006f00720065002000680075006d0061006e00690073007400
200063006800610072006100630074006500720069007300740069006300
730020007400680061006e0020006d0061006e00790020006f0066002000
69007400730020007000720065006400650063006500730073006f007200
7300200061006e0064002000610073002000730075006300680020006900
730020006d006f0072006500200069006e002000740075006e0065002000
7700690074006800200074006800650020006d006f006f00640020006f00
6600200074006800650020006c0061007300740020006400650063006100
64006500730020006f006600200074006800650020007400770065006e00
740069006500740068002000630065006e0074007500720079002e002000
200054006800650020006f0076006500720061006c006c00200074007200
6500610074006d0065006e00740020006f00660020006300750072007600
65007300200069007300200073006f006600740065007200200061006e00
64002000660075006c006c006500720020007400680061006e0020006900
6e0020006d006f0073007400200069006e00640075007300740072006900
61006c0020007300740079006c0065002000730061006e00730020007300
65007200690066002000660061006300650073002e002000200054006500
72006d0069006e0061006c0020007300740072006f006b00650073002000
610072006500200063007500740020006f006e0020007400680065002000
64006900610067006f006e0061006c002000770068006900630068002000
680065006c0070007300200074006f002000670069007600650020007400
68006500200066006100630065002000610020006c006500730073002000
6d0065006300680061006e006900630061006c0020006100700070006500
6100720061006e00630065002e002000200041007200690061006c002000
69007300200061006e002000650078007400720065006d0065006c007900
200076006500720073006100740069006c0065002000660061006d006900
6c00790020006f0066002000740079007000650066006100630065007300
2000770068006900630068002000630061006e0020006200650020007500
73006500640020007700690074006800200065007100750061006c002000
7300750063006300650073007300200066006f0072002000740065007800
74002000730065007400740069006e006700200069006e00200072006500
70006f007200740073002c002000700072006500730065006e0074006100
740069006f006e0073002c0020006d006100670061007a0069006e006500
730020006500740063002c00200061006e006400200066006f0072002000
64006900730070006c00610079002000750073006500200069006e002000
6e006500770073007000610070006500720073002c002000610064007600
6500720074006900730069006e006700200061006e006400200070007200
6f006d006f00740069006f006e0073002e0068007400740070003a002f00
2f007700770077002e006d006f006e006f0074007900700065002e006300
6f006d002f00680074006d006c002f006d0074006e0061006d0065002f00
6d0073005f0061007200690061006c002e00680074006d006c0068007400
740070003a002f002f007700770077002e006d006f006e006f0074007900
700065002e0063006f006d002f00680074006d006c002f006d0074006e00
61006d0065002f006d0073005f00770065006c0063006f006d0065002e00
680074006d006c004e004f00540049004600490043004100540049004f00
4e0020004f00460020004c004900430045004e0053004500200041004700
5200450045004d0045004e0054000d000a000d000a005400680069007300
200074007900700065006600610063006500200069007300200074006800
65002000700072006f007000650072007400790020006f00660020004d00
6f006e006f00740079007000650020005400790070006f00670072006100
700068007900200061006e00640020006900740073002000750073006500
200062007900200079006f007500200069007300200063006f0076006500
720065006400200075006e00640065007200200074006800650020007400
650072006d00730020006f0066002000610020006c006900630065006e00
730065002000610067007200650065006d0065006e0074002e0020005900
6f0075002000680061007600650020006f0062007400610069006e006500
640020007400680069007300200074007900700065006600610063006500
200073006f00660074007700610072006500200065006900740068006500
720020006400690072006500630074006c0079002000660072006f006d00
20004d006f006e006f00740079007000650020006f007200200074006f00
67006500740068006500720020007700690074006800200073006f006600
740077006100720065002000640069007300740072006900620075007400
6500640020006200790020006f006e00650020006f00660020004d006f00
6e006f0074007900700065002700730020006c006900630065006e007300
6500650073002e000d000a000d000a005400680069007300200073006f00
660074007700610072006500200069007300200061002000760061006c00
7500610062006c00650020006100730073006500740020006f0066002000
4d006f006e006f0074007900700065002e00200055006e006c0065007300
7300200079006f00750020006800610076006500200065006e0074006500
720065006400200069006e0074006f002000610020007300700065006300
690066006900630020006c006900630065006e0073006500200061006700
7200650065006d0065006e00740020006700720061006e00740069006e00
6700200079006f00750020006100640064006900740069006f006e006100
6c0020007200690067006800740073002c00200079006f00750072002000
75007300650020006f00660020007400680069007300200073006f006600
7400770061007200650020006900730020006c0069006d00690074006500
6400200074006f00200079006f0075007200200077006f0072006b007300
74006100740069006f006e00200066006f007200200079006f0075007200
20006f0077006e0020007000750062006c0069007300680069006e006700
20007500730065002e00200059006f00750020006d006100790020006e00
6f007400200063006f007000790020006f00720020006400690073007400
72006900620075007400650020007400680069007300200073006f006600
740077006100720065002e000d000a000d000a0049006600200079006f00
750020006800610076006500200061006e00790020007100750065007300
740069006f006e00200063006f006e006300650072006e0069006e006700
200079006f00750072002000720069006700680074007300200079006f00
75002000730068006f0075006c0064002000720065007600690065007700
200074006800650020006c006900630065006e0073006500200061006700
7200650065006d0065006e007400200079006f0075002000720065006300
650069007600650064002000770069007400680020007400680065002000
73006f0066007400770061007200650020006f007200200063006f006e00
740061006300740020004d006f006e006f00740079007000650020006600
6f00720020006100200063006f007000790020006f006600200074006800
650020006c006900630065006e0073006500200061006700720065006500
6d0065006e0074002e000d000a000d000a004d006f006e006f0074007900
700065002000630061006e00200062006500200063006f006e0074006100
63007400650064002000610074003a000d000a000d000a00550053004100
20002d0020002800380034003700290020003700310038002d0030003400
300030000900090055004b0020002d002000300031003100340034002000
3000310037003300370020003700360035003900350039000d000a006800
7400740070003a002f002f007700770077002e006d006f006e006f007400
7900700065002e0063006f006d0068007400740070003a002f002f007700
770077002e006d006f006e006f0074007900700065002e0063006f006d00
2f00680074006d006c002f0074007900700065002f006c00690063006500
6e00730065002e00680074006d006c004e006f0072006d0061006c004e00
6f0072006d00610061006c0069004e006f0072006d0061006c004e006f00
72006d00e1006c004e006f0072006d0061006c0065005300740061006e00
640061006100720064004e006f0072006d0061006c004e006f0072006d00
61006c006e0079004e006f0072006d0061006c041e0431044b0447043d04
4b0439004e006f0072006d00e1006c006e0065004e006f0072006d006100
6c004e006f0072006d0061006c004e0061007600610064006e006f007400
6801b001a10300006e0067004e006f0072006d0061006c004e006f007200
6d0061006c004e006f0072006d0061006c004e006f0072006d0061006c00
0000b1540f4122031700ef031700ff03170003001f0317002f0317004f03
17005f0317008f0317009f03170006000f0317005f0317006f0317007f03
1700bf031700f00317000600400317b2923340b80317b28b3340b80317b3
6a6c3240b80317b2613340b80317b35c5d3240b80317b357593240b80317
b34d513240b80317b344493240b80317b23a3340b80317b331343240b803
17b32e423240b80317b3272c3240b80317b312253280b80317b30a0d32c0
4116031600d00316000200700316000102c4000f0101001f00a0031500b0
031500020306000f0101001f00400312b32426329fbf0304000103020301
0064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed0064001f
ffc002edb30e11329f414a02e200af02e200bf02e2000302e202e202e102
e1007f02e00001001002e0003f02e0009f02e000bf02e000cf02e000ef02
e0000602e002e002df02df02de02de000f02dd002f02dd003f02dd005f02
dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001000002dc00
01001002dc003f02dc000202dc02dc001002db000102db02db000f02da00
0102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f25
32b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9291fb802e3b3
202b1fa0413002d400b002d40002000002d4001002d4002002d4005002d4
006002d4007002d40006006002d6007002d6008002d6009002d600a002d6
00b002d60006000002d6001002d6002002ca002002cc002002d6003002d6
004002d6005002d6000802d0b2202b1fb802cfb226421f411602ce02c700
17001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02c902
c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002c700
2f02c5000502c1b324121fff411102bf0001001f02bf002f02bf003f02bf
004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb00ca0800
001f02b200e90800001f02a600a20800406a1f4026434932402043493240
263a3d3240203a3d329f209f26024026969932402096993240268e923240
208e92324026848c324020848c3240267a813240207a813240266c763240
206c76324026646a324020646a3240265a5f3240205a5f3240264f543240
204f5432b8029eb724271f374f6b0120410f027700300277004002770050
0277000402770277027700f90400001f029bb22a2a1fb8029a402b292a1f
80ba0180bc0180520180a201806501807e01808101803c01805e01802b01
801c01801e0180400180bb0138000100800140b40180400180bb01380001
0080013940180180ca0180ad018073018026018025018024018020013740
b80221b2493340b80221b2453340b80221b341423240b80221b33d3e320f
410f0221003f0221007f0221000300bf022100cf022100ff022100030040
0221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e3a32
6f414802c3007f02c3008f02c300df02c30004002f02c3006002c300cf02
c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02c3000600
df02220001008f02220001000f0222002f0222003f0222005f0222007f02
2200ef0222000600bf022100ef02210002006f0221007f022100af022100
03002f0221003f0221004f0221000302c302c30222022202210221401d10
1c102b1048038f1c010f1e014f1eff1e023700161600000012110811b801
0db6f70df8f70d00094109028e028f001d001f0290028f001d001f028fb2
f91d1fb80198b226bb1f41150197001e0401001f013900260125001f0138
00730401001f0135001c0801001f0134001c02ab001f0132b21c561fb801
0fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd7
20b80401b21fd51cb802abb61fd41c891fc92fb80801b21fbc26b80101b2
1fba20b80201b61fb91c381fadcab80401b21f8126b8019ab21f7e26b801
9ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b80401400f1f52
265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f35
1cb80401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231e
b80401b21f5537b80168402c07960758074f07360732072c0721071f071d
071b071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b900010111858d1bb900010128858d5959001816763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b
1db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58b901f201
f04544b901f101f045445958b9033e01f2455258b901f2033e4459594bb8
015653205c58b9002001f14544b9002601f145445958b9081e0020455258
b90020081e4459594bb8019a53205c58b9002501f24544b9002401f24544
5958b909090025455258b9002509094459594bb8040153205c58b1732445
44b1242445445958b917200073455258b9007317204459594bb804015320
5c58b1ca254544b1252545445958b9168000ca455258b900ca1680445959
4bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9001c
011a4459594bb05653205c58b11c1c4544b12f1c45445958b90189001c45
5258b9001c01894459594bb8030153205c58b11c1c4544b11c1c45445958
b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b01b33b59635c456523456023456560234560b08b766818b080622020b1
63594565234520b003266062636820b003266165b059236544b063234420
b13b5c4565234520b003266062636820b003266165b05c236544b03b2344
b1005c455458b15c406544b23b403b4523614459b3475034374565234560
23456560234560b089766818b080622020b134504565234520b003266062
636820b003266165b050236544b034234420b147374565234520b0032660
62636820b003266165b037236544b0472344b10037455458b137406544b2
4740474523614459004b5342014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b0112342002b74757375001845694445694445694473737373747573
74752b2b2b2b74752b2b2b2b2b7373737373737373737373737373737373
73737373737373732b2b2b45b0406144737400004bb02a534bb03f515a58
b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc0604459
004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c515a
58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b75
2b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b5402
b0124b545ab012435c5a58ba009f02220001007359002b7473012b01732b
2b2b2b2b2b2b2b737373732b002b2b2b2b2b2b0045694473456944734569
44737475456944734569444569444569447374456944456944732b2b2b2b
2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b0000>
[1573 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>PEAAAA+ArialMT AddT42Char 
PEAAAA+ArialMT /CharStrings get begin
end
end
%ADOEndSubsetFont
[/N19 (PEAAAA+ArialMT) -1 TZ
184.8 395.9 m
%ADOBeginSubsetFont: PEAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PEAAAA+ArialMT gcheck setglobal} if
1 42 1 <0001005cffe704eb05d30030021540276303630473037404042527350339
1c430349074c1d451f44244627530359075c1d572889130e23b8fff2b410
10025524b8fff2b41010025525b8fff2b41010025526b8fff2b410100255
27b8fff2b41010025523b8fff6b40d10025524b8fff6b40d10025525b8ff
f6b40d10025526b8fff6b40d10025527b8fff640460d100255280d262402
24032725360f34234425452f5a20562355256c0b6a0d6b0e66146518790b
7a0d7a0f7d107524732586038a0b890d8a0f8d1085248325920d960f9615
1eb10602435458402d2126121b261a09262901260000291a120432312600
650002000d2d791b891b021b25160d2d1e27250125051605b8fff4400c0c
0c0655051e2d091e1e1603003fed3fed2b1112395d1112391112395d1112
395d01111217392fed2fed2fed2fed1b402d25240e0d0b05211c1d1e1b08
070604030206012524220e0d0b06051e1b2d1a400c0c02558f1a011aed16
002d01b8ffc040120c0c02551001200150016001700190010601b801b040
132d1e1e1603051e2d091b261a4a092600290129b8ffeab40e0e025529b8
fff4400d0c0c0255291a32212612012612b8ffecb40e0e025512b8fff6b4
0d0d025512b8fff8400f0c0c02551254200001001931635b182b4e10f45d
4de42b2b2bed10ed4e10f62b2b5d4dedf4ed003fed3fed10fd5d2be410fd
5d2bf4111217391117391112393901121739593130005d712b2b2b2b2b2b
2b2b2b2b015d7113371e0233323636353426272624272626353436363332
161617072626232206151417160417161615140606232224265cb70d5fc8
7d6faa53505c3bfe6c5169677ef294a3f98605ba0fada9b0a1393801d958
807a86fb9dc7fef39901d7106e8d5742734445672317612b37a3656fc164
69cc810e8b8e815b4f33336b283bb57675cf7374e900>PEAAAA+ArialMT AddT42Char 
PEAAAA+ArialMT /CharStrings get begin
/g1 1 def
end
PEAAAA+ArialMT /Encoding get
dup 1 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N19 18.0 Tf
(\001) show
Q
q
1 j
n
298.8 391.2 m
286.9 391.2 277.2 396.1 277.2 402.0 c
277.2 408.0 286.9 412.8 298.8 412.8 c
310.7 412.8 320.4 408.0 320.4 402.0 c
320.4 396.1 310.7 391.2 298.8 391.2 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
S
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
296.3 395.9 m
%ADOBeginSubsetFont: PEAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PEAAAA+ArialMT gcheck setglobal} if
1 724 2 <000100bf0000018105ba000300ccb5010200080205b8ffc0b3383d3405b8
ffc0b333343405b8ffc0b32d303405b8ffc0b328293405b8ffc0b3232534
05b8ffc0b31d1e3405b8ffc0b3181a3405b8ffc0402a0d103420059005af
050303200100008f00a000b000042f0040005000df00f000051220008f00
90000305b8ffc0400b0d0d025500181010025500b8ffecb40f0f025500b8
ffeeb40d0d025500b8fff640100c0c025500200b0b065500a204d659182b
10f62b2b2b2b2b2b5d435c58b2800001015d5971723cfd5d2b2b2b2b2b2b
2b2b3c003f3f313033113311bfc205bafa46>PEAAAA+ArialMT AddT42Char 
PEAAAA+ArialMT /CharStrings get begin
/g2 2 def
end
PEAAAA+ArialMT /Encoding get
dup 2 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N19 18.0 Tf
(\002) show
Q
q
1 j
n
406.8 391.2 m
394.9 391.2 385.2 396.1 385.2 402.0 c
385.2 408.0 394.9 412.8 406.8 412.8 c
418.7 412.8 428.4 408.0 428.4 402.0 c
428.4 396.1 418.7 391.2 406.8 391.2 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
S
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
400.3 395.9 m
%ADOBeginSubsetFont: PEAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PEAAAA+ArialMT gcheck setglobal} if
1 952 3 <000200a1000005ad05ba0018002201fc4021120b0e0112361c5a1f66086d
1f0409100d0d065508100d0d065507100d0d065524b8ffc0b40c0c02550d
b8fff4b40c0c02550cb8fff4b40c0c02550bb8fff4b40c0c025512b8ffe2
b3121a3412b8fff0b322273411b8ffe2b31d273410b8ffe2b31d27340fb8
ffe2b31d273412b8ffd8b31d263411b8ffe2b3121a3410b8ffe2b3121a34
0fb8ffe24049121a34250e4a1c4a20530b5c1c6d1c7209780e790f850a88
0f970da90fb80fe80ee70f100e0c0c20110f1411110f110f0c09121b0221
1a160a061211100d0c0518090916171a191e17b8ffc040190b0b06551717
0021221e0201020018180f0f0e081e260e9c06b8ffe8b40f0f025506b8ff
f6b40d0d025506b8ffe040220c0c025506060d0d0655065d202470248024
03242218200120000100201010025500b8fff6b40f0f025500b8fff6b40d
0d025500b8fffa400b0c0c025500060b0b065500b8fff7b40c0c065500b8
fff8400a0d0d0655005d233ba8182b4e10f42b2b2b2b2b2b2b5d3c4dfd3c
105df62b2b2b2b19e418ed003f3c103c103c3f3cfd3c12392f2bfd3c103c
392f12173901111739870e2e2b057d10c43130015d2b2b2b2b2b2b2b2b2b
2b2b2b2b002b2b2b5d435c58400a08400f390f103a11123a2b2b2b590171
435c58b9000effde401a193911221939122219390e401c39102214391022
1f39102215392b2b2b2b2b2b2b5933112132161615140607161716171323
032e02272623231111213236363534262321a1028ac4cc7acad34d28554c
fff4c2556e572d214be101a185964e97a3fe3005ba4fc8799cd61d25244e
75fe710131848c380b07fd750333377947688600>PEAAAA+ArialMT AddT42Char 
PEAAAA+ArialMT /CharStrings get begin
/g3 3 def
end
PEAAAA+ArialMT /Encoding get
dup 3 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N19 18.0 Tf
(\003) show
Q
n
156.4 397.2 m
156.4 405.7 l
169.2 401.5 l
156.4 397.2 l
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
eofill
n
126.0 401.5 m
159.0 401.5 l
S
n
264.4 397.8 m
264.4 406.3 l
277.2 402.0 l
264.4 397.8 l
h
eofill
n
212.4 402.0 m
267.0 402.0 l
S
n
372.4 397.8 m
372.4 406.3 l
385.2 402.0 l
372.4 397.8 l
h
eofill
n
320.4 402.0 m
375.0 402.0 l
S
n
198.6 423.8 m
203.6 416.9 l
190.8 412.8 l
198.6 423.8 l
h
eofill
n
406.8 412.8 m
406.6 413.8 l
406.2 414.7 l
405.4 415.7 l
404.4 416.6 l
401.5 418.2 l
397.5 419.8 l
386.9 422.5 l
373.0 424.8 l
338.5 427.7 l
298.8 428.7 l
259.1 427.7 l
224.6 424.8 l
210.7 422.5 l
200.1 419.8 l
198.2 419.0 l
S
n
186.5 360.8 m
195.1 360.8 l
190.8 348.0 l
186.5 360.8 l
h
eofill
n
190.8 391.2 m
190.8 358.2 l
S
n
294.5 360.8 m
303.1 360.8 l
298.8 348.0 l
294.5 360.8 l
h
eofill
n
298.8 391.2 m
298.8 358.2 l
S
n
402.5 360.8 m
411.1 360.8 l
406.8 348.0 l
402.5 360.8 l
h
eofill
n
406.8 391.2 m
406.8 358.2 l
S
Q
q
n
226.6 402.6 24.7 14.6 re
eoclip
n
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
%ADOBeginSubsetFont: BTBBAA+OpenSymbol Initial
ct_T42Dict begin
0 -0.234 0.844 0.797
 256 array 0 1 255 {1 index exch /.notdef put} for  /BTBBAA+OpenSymbol
Type42DictBegin
[<000100000008000800080008676c7966c6a2747900000400000003406865
61644e233f230000008c000000366868656160ff5707000000c400000024
686d7478cd04bb24000000e8000000246c6f63617e03aa020000010c0000
00146d61787030004d0000000120000000206e616d65b873835a00000140
000002bf67646972000000000000000000000000000100000001e6666823
618f5f0f3cf50003080000000000be65f46900000000000000000000fe19
06c30666000000080002000000000000000100000756ff56000000000000
0000000000010000000000000000000000000000000904000081046a002d
04df002904ba005e06db0033027e0093065c00dd0485008f027e00660000
00140052009600bd00fc01200138017b01a0000100000009002d00020000
000000020000000100010000004000000000000000000015010200000000
00000000003c000000000000000000010014003c0000000000000002000e
005000000000000000030014005e00000000000000040014007200000000
000000050018008600000000000000060014009e0001000000000000001e
00b20001000000000001000a00d00001000000000002000700da00010000
00000003000a00e10001000000000004000a00eb0001000000000005000c
00f50001000000000006000a01010003000104090000003c010b00030001
04090001001401470003000104090002000e015b00030001040900030014
016900030001040900040014017d00030001040900050018019100030001
04090006001401a900280063002900200032003000300035002000530075
006e0020004d006900630072006f00730079007300740065006d00730020
0049006e0063002e004f00700065006e00530079006d0062006f006c0052
006500670075006c00610072004f00700065006e00530079006d0062006f
006c004f00700065006e00530079006d0062006f006c0056006500720073
0069006f006e00200031002e00390020004f00700065006e00530079006d
0062006f006c28632920323030352053756e204d6963726f73797374656d
7320496e632e4f70656e53796d626f6c526567756c61724f70656e53796d
626f6c4f70656e53796d626f6c56657273696f6e20312e39204f70656e53
796d626f6c00280063002900200032003000300035002000530075006e00
20004d006900630072006f00730079007300740065006d00730020004900
6e0063002e004f00700065006e00530079006d0062006f006c0052006500
670075006c00610072004f00700065006e00530079006d0062006f006c00
4f00700065006e00530079006d0062006f006c0056006500720073006900
6f006e00200031002e00390020004f00700065006e00530079006d006200
6f006c0000>
[833 ] AllocGlyphStorage
]def 
76 12 
PrepFor2015
Type42DictEnd
1 0 0 <000200810000038106660003000700003311211125211121810300fd7f02
00fe000666f99a810566>BTBBAA+OpenSymbol AddT42Char 
BTBBAA+OpenSymbol /CharStrings get begin
end
end
%ADOEndSubsetFont
[/N9 (BTBBAA+OpenSymbol) -1 TZ
229.6 406.0 m
%ADOBeginSubsetFont: BTBBAA+OpenSymbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BTBBAA+OpenSymbol gcheck setglobal} if
1 40 1 <0002002dfeb403fa05500010002600001b01122132151405041114070623
222703131633323736353427262337323736353423220706072dec660183
f8fec201179a8dd3546c4662618d7f4c415e58960f9f6160a26e3c1227fe
b4049a0202e1f48546fef4cf796e26fea001e6736c618593524c545c5c9e
b89133bf>BTBBAA+OpenSymbol AddT42Char 
BTBBAA+OpenSymbol /CharStrings get begin
/g1 1 def
end
BTBBAA+OpenSymbol /Encoding get
dup 1 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 12.0 Tf
(\001) show
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
%ADOBeginSubsetFont: YNMBAA+TimesNewRomanPS-ItalicMT Initial
ct_T42Dict begin
-0.031 -0.012 0.625 0.691
 256 array 0 1 255 {1 index exch /.notdef put} for  /YNMBAA+TimesNewRomanPS-ItalicMT
Type42DictBegin
[<00010000000b000b000b000b63767420bfa34222000000bc000007786670
676df2bc5f9700000834000005cd676c7966b51a01e300004d7000000906
6865616493e70f0e00000e04000000366868656162fe800700000e3c0000
0024686d7478e400c61400000e60000000146c6f6361e9067b0400000e74
0000000c6d617870320af30400000e80000000206e616d653ea6080f0000
0ea00000340970726570743d19ba000042ac00000ac36764697200000000
0000000000000000058e0000054c001f054c001c037100180000ffe10000
ffe80000ffe8fe4afffc056b0023fe68ffe2033e00000095000000950000
000000000000002500a8008e010b007d00820045003200a400ca006b0070
005100af003c00f001d700470004002500770029004000fd001601610046
01370029008e0017ffca0025005bffe902e600020099008100f2007500d6
006300c60006009a01330024003800cc003dff67001305d8003600860095
ffdb0007043400a500d8ffdcfffe004800a200d8013c01530380053e0057
007a007c008c0117012a0138017c0026003c007800bd00c0021009b5000c
004d004e00540058006700b4040100020005005000af01d5034300240058
008b013501c0ffac002000250026002d00410136022bffba001e002a0034
003b003f00850094009800d7012e013d033104b900170040006100b9010e
0116012201bfff9c001f001f004d005c0086008c009600aa00cb00cb011f
0154022f036005a9fee8000e006f007c007d008b00d500f1010a01570178
02b803adfe3fff6affb3ffc4001f0037003f0044004a0078007d009700a2
00a700b600c000c100c600d8011d0150019701ee04740532fd81fed1fee0
ff16fff1000f002d00550068006e007f00890095009e00c200da00e400f8
01040108011101c2023002da030e049e0517ff00ff8700000020002f0041
0057007800870088008800b900c200c5012001280133017401d6020e020f
026c027e02ab02ec038903b103e304e7ff43ffa8ffc3ffdcffe900070023
0023002600520077007d0081008f009900ac00ae00b500b800c800ea00f0
00f40135016a018b01b101b501f7021402ad02d504fc05d805f0ff9dfffc
000b00240025002c0030003000330040004700490057006e009a00bd00c9
00cd00dc00fa00fa011b0139017e0187018a018e0195019601df01f60286
02cf02de039603a903b003c804010432046a058b05e006510761fe96fe9a
ff4bff870013002500340038003e004a0065006b0073007a009c00a200b2
00b700bf00f000f700fb0104011301200124013b01520178017c0181018f
01a001d90248026a026f02700301031d032303270388041f04ab04d104da
057a058bfe26fe59ff2e00010002000a003b003b004700580058005f0066
006b007a007a008b009900af00bc00c000c700cc00e900f200f500fb00fb
0102010a010b01150121012701450145015501570158015e01610168017d
01a301ab01da01ee021002180222028f029402a302d202e703710393039b
03b303d303fe04ff050b05320532054b0559058b05ab05f2065506890742
076207a708ccfd2afdc8fddefe0cfe15fe27fe53fe84febbff58ff76ff77
ffa1ffa7ffadffafffc00000000000030094001d001f002000200027002e
0048004b004c005e005f006b0071007c008a00900091009100a700af00b3
00b400c400c600d100d200de00df00df00e600e800ea00eb00f200f500f5
00fc010201180123013101330137015c016201660170017a017a017a0182
01980199019b01b001bf01c001ca01d301d701d801e001e001f601f701f8
02120213022f023702440247024f0252026302650270027f0298029b02a6
02b702ba02c502cf02d602d702e502fe031c031d03450348035d035e0371
0379038103a103b703d403d503d803e103f803fe0404041f042104230425
043a0467048304e00528054b0564056a059f059f05c2060b066a06af06b3
06cb06e8070607280748075007a607b207ff009500af0092009600000000
0000000000000000017e01a80129025b0212020301c302b4019301cd02b2
04ed020e0159017a0300022d042c00c8004d00e602890325013e0378011b
00f1018d00490203007c000e029d02470024000000000052004400330038
005405d3041501a7000002860168005000cf0002004b0024008800ba0025
ffd800110091ff6b00b5011700260065ff9900490080014b01c000f40167
027102ea04fc0310017c01e103d9015501e601ee0434019606cb005c022b
0099003d009f00160039002700de00790120022e005a0099038800940021
0019002a046c05e8000001f203b200aa0296028902b4ffc9020000ec0005
005a0447010004e00000052a001f01eb00ae016800ca02d3028901b50406
01a1014f014b011c0308005e00c70024029d006503750104028002f304d8
00d90239025a032c01f204310303005002e50283005901eb010800ac0196
02f8012100950180004400e501eb02e5007400f301ff02fd038f026801c8
01c70116022b0142033000fe02e101620200002400ee0517010802370066
0006010201e602aa0366019b00d305c203dc044d03b6000401be013702fc
03200244014d0338ffed002506f8030dfed5ff43004402ffff92040bfdef
0155017100d9ffc4032d0461044afbb5fbcf02170192036d0558fff2fe7d
0583023e006605e9073d00790243002500cf00fd00af002a01ef021a0026
001f0025003a000001170490fbfb0251001d02f001f50078018f005f0024
0044005400bf00af006701a8002600050006003f009800fa02ab00c2004d
0375004a00b600c401bf017c006f00130263000c006801520002012e0104
001f001f009a000000f1046900790080005000bd056b00ab0080001e05a5
404154403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a2928272625
24232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807
060504030201002c4523466020b02660b004262348482d2c452346236120
b02661b004262348482d2c45234660b0206120b04660b004262348482d2c
4523462361b0206020b02661b02061b004262348482d2c45234660b04061
20b06660b004262348482d2c4523462361b0406020b02661b04061b00426
2348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b0
8d44235920b0ed51582320b04d44235920b09051582320b00d4423592121
2d2c20204518684420b001602045b04676688a4560442d2c01b10b0a4323
43650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b1
0217453ab10200080d2d2c45b01a234445b01923442d2c2045b003254561
64b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045
b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc0
8a8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344b0
177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0
177ae41b038a45186920b01723448a8a8720b0a05158b0112bb0172344b0
177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c
01182f2d2c20b0032545b019234445b01a23444565234520b00325606a20
b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a4520
8a54582321b03f1b235961441cb114008a5279b31940201945208a545823
21b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c
0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011
432343650b2d2c4b525845441b2121592d2c0120b003252349b04060b020
6320b000525823b002253823b002256538008a63381b212121212159012d
2c4bb06451584569b00943608a103a1b212121592d2c01b005251023208a
f500b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b0
062510f500edec2d2c20b001600110203c003c2d2c20b001610110203c00
3c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c
76b802ee23701020b802ee4520b0005058b00161593a2f182d2c21210c64
23648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59
b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d
2c0c6423648bb84000626023212d2cb4000100000015b00826b00826b008
26b008260f10161345683ab001162d2cb4000100000015b00826b00826b0
0826b008260f1016134568653ab001162d2c4b53234b515a5820458a6044
1b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b21
21592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b
03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b004
25060c6423646164b807085158b00425b00425012046b01060482046b010
6048590a21211b2121592d2cb012435c580cb00425b00425060c64236461
64b807085158b00425b00425012046b8fff060482046b8fff06048590a21
211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58
b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a
034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c46234660
8a8a462320468a608a61b8ff8062232010238ab903b003b08a70456020b0
005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b202020243604259b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b2021002436042595959592d000000000100000002e667ccea7579
5f0f3cf50819080000000000a31fb8bd0000000000000000ffc0ffe10500
058e000200090001000000000000000100000721fe450057000000000000
00000018000700000000000000000000000000050639011c0400000e02aa
ffc004e3ffd104000027000000340134023203470483000100000005003c
00020000000000020010002f0055000004830ac3000300020000005f047a
000000030000000000fe00000000000300000001001e00fe000000030000
0002000c011c0000000300000003007001280000000300000004002c0198
0000000300000005001801c40000000300000006003001dc000000030000
000700d8020c0000000300000008002602e400000003000000090086030a
000000030000000a05560390000000030000000b007208e6000000030000
000c00660958000000030000000d06b409be000000030000000e005c1072
0001000000000000007f10ce0001000000000001000f114d000100000000
00020006115c00010000000000030038116200010000000000040016119a
0001000000000005000c11b00001000000000006001811bc000100000000
0007006c11d4000100000000000800131240000100000000000900431253
000100000000000a02ab1296000100000000000b00391541000100000000
000c0033157a000100000000000d035a15ad000100000000000e002e1907
0003000104030002000e19350003000104030004002e1943000300010405
0002000e19710003000104050004002e197f0003000104060002000c19ad
0003000104060004002c19b90003000104070002000c19e5000300010407
0004002c19f10003000104080002000c1a1d0003000104080004002c1a29
000300010409000000fe1a550003000104090001001e1b53000300010409
0002000c1b71000300010409000300701b7d0003000104090004002c1bed
000300010409000500181c19000300010409000600301c31000300010409
000700d81c61000300010409000800261d39000300010409000900861d5f
000300010409000a05561de5000300010409000b0072233b000300010409
000c006623ad000300010409000d06b42413000300010409000e005c2ac7
00030001040a0002000e2b2300030001040a0004002e2b3100030001040b
000200142b5f00030001040b000400342b7300030001040c000200102ba7
00030001040c000400302bb700030001040e000200082be700030001040e
000400282bef0003000104100002000e2c170003000104100004002e2c25
0003000104130002000e2c530003000104130004002e2c61000300010414
0002000c2c8f0003000104140004002c2c9b0003000104150002000e2cc7
0003000104150004002e2cd50003000104160002000e2d03000300010416
0004002e2d110003000104190002000c2d3f0003000104190004002c2d4b
00030001041b0002000e2d7700030001041b0004002e2d8500030001041d
0002000c2db300030001041d0004002c2dbf00030001041f0002000c2deb
00030001041f0004002c2df70003000104240002000e2e23000300010424
0004002e2e3100030001042a0002000e2e5f00030001042a0004002e2e6d
00030001042d000200002e9b00030001042d000400002e9b00030001080a
0002000e2e9b00030001080a0004002e2ea90003000108160002000e2ed7
0003000108160004002e2ee5000300010c0a0002000e2f13000300010c0a
0004002e2f21000300010c0c000200102f4f000300010c0c000400302f5f
00540079007000650066006100630065002000a900200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e00200070006c0063002e00200044006100740061
002000a900200054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e00200070006c
0063002f005400790070006500200053006f006c007500740069006f006e
007300200049006e0063002e00200031003900390030002d003100390039
0032002e00200041006c006c002000520069006700680074007300200052
006500730065007200760065006400540069006d006500730020004e0065
007700200052006f006d0061006e004900740061006c00690063004d006f
006e006f0074007900700065003a00540069006d006500730020004e0065
007700200052006f006d0061006e0020004900740061006c00690063003a
00560065007200730069006f006e00200032002e0039003000200028004d
006900630072006f0073006f00660074002900540069006d006500730020
004e0065007700200052006f006d0061006e0020004900740061006c0069
006300560065007200730069006f006e00200032002e0039003000540069
006d00650073004e006500770052006f006d0061006e00500053002d0049
00740061006c00690063004d005400540069006d006500730020004e0065
007700200052006f006d0061006e00ae002000540072006100640065006d
00610072006b0020006f006600200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200070006c00630020007200650067006900730074006500720065
006400200069006e00200074006800650020005500530020005000610074
0020002600200054004d0020004f00660066002e00200061006e00640020
0065006c0073006500770068006500720065002e004d006f006e006f0074
0079007000650020005400790070006f006700720061007000680079004d
006f006e006f007400790070006500200054007900700065002000440072
006100770069006e00670020004f006600660069006300650020002d0020
005300740061006e006c006500790020004d006f007200690073006f006e
002c00200056006900630074006f00720020004c0061007200640065006e
0074002000310039003300320054006800690073002000720065006d0061
0072006b00610062006c0065002000740079007000650066006100630065
002000660069007200730074002000610070007000650061007200650064
00200069006e0020003100390033003200200069006e0020005400680065
002000540069006d006500730020006f00660020004c006f006e0064006f
006e0020006e00650077007300700061007000650072002c00200066006f
007200200077006800690063006800200069007400200077006100730020
00640065007300690067006e00650064002e002000200049007400200068
00610073002000730075006200730065007100750065006e0074006c0079
0020006200650063006f006d00650020006f006e00650020006f00660020
00740068006500200077006f0072006c006400730020006d006f00730074
0020007300750063006300650073007300660075006c0020007400790070
00650020006300720065006100740069006f006e0073002e002000200054
006800650020006f0072006900670069006e0061006c0020006400720061
00770069006e00670073002000770065007200650020006d006100640065
00200075006e0064006500720020005300740061006e006c006500790020
004d006f007200690073006f006e00270073002000640069007200650063
00740069006f006e00200062007900200056006900630074006f00720020
004c0061007200640065006e007400200061007400200054006800650020
00540069006d00650073002e00200020004900740020007400680065006e
002000770065006e00740020007400680072006f00750067006800200061
006e00200065007800740065006e00730069007600650020006900740065
007200610074006900760065002000700072006f00630065007300730020
0069006e0076006f006c00760069006e0067002000660075007200740068
0065007200200077006f0072006b00200069006e0020004d006f006e006f
007400790070006500270073002000540079007000650020004400720061
00770069006e00670020004f00660066006900630065002e002000200042
00610073006500640020006f006e0020006500780070006500720069006d
0065006e007400730020004d006f007200690073006f006e002000680061
006400200063006f006e0064007500630074006500640020007500730069
006e006700200050006500720070006500740075006100200061006e0064
00200050006c0061006e00740069006e002c002000690074002000680061
00730020006d0061006e00790020006f006c00640020007300740079006c
006500200063006800610072006100630074006500720069007300740069
006300730020006200750074002000770061007300200061006400610070
00740065006400200074006f002000670069007600650020006500780063
0065006c006c0065006e00740020006c00650067006900620069006c0069
0074007900200063006f00750070006c0065006400200077006900740068
00200067006f006f0064002000650063006f006e006f006d0079002e0020
00200057006900640065006c00790020007500730065006400200069006e
00200062006f006f006b007300200061006e00640020006d006100670061
007a0069006e00650073002c00200066006f00720020007200650070006f
007200740073002c0020006f0066006600690063006500200064006f0063
0075006d0065006e0074007300200061006e006400200061006c0073006f
00200066006f007200200064006900730070006c0061007900200061006e
00640020006100640076006500720074006900730069006e0067002e0068
007400740070003a002f002f007700770077002e006d006f006e006f0074
007900700065002e0063006f006d002f00680074006d006c002f006d0074
006e0061006d0065002f006d0073005f00740069006d00650073006e0065
00770072006f006d0061006e002e00680074006d006c0068007400740070
003a002f002f007700770077002e006d006f006e006f0074007900700065
002e0063006f006d002f00680074006d006c002f006d0074006e0061006d
0065002f006d0073005f00770065006c0063006f006d0065002e00680074
006d006c004e004f00540049004600490043004100540049004f004e0020
004f00460020004c004900430045004e0053004500200041004700520045
0045004d0045004e0054000d000a000d000a005400680069007300200074
007900700065006600610063006500200069007300200074006800650020
00700072006f007000650072007400790020006f00660020004d006f006e
006f00740079007000650020005400790070006f00670072006100700068
007900200061006e00640020006900740073002000750073006500200062
007900200079006f007500200069007300200063006f0076006500720065
006400200075006e00640065007200200074006800650020007400650072
006d00730020006f0066002000610020006c006900630065006e00730065
002000610067007200650065006d0065006e0074002e00200059006f0075
002000680061007600650020006f0062007400610069006e006500640020
007400680069007300200074007900700065006600610063006500200073
006f00660074007700610072006500200065006900740068006500720020
006400690072006500630074006c0079002000660072006f006d0020004d
006f006e006f00740079007000650020006f007200200074006f00670065
00740068006500720020007700690074006800200073006f006600740077
006100720065002000640069007300740072006900620075007400650064
0020006200790020006f006e00650020006f00660020004d006f006e006f
0074007900700065002700730020006c006900630065006e007300650065
0073002e000d000a000d000a005400680069007300200073006f00660074
007700610072006500200069007300200061002000760061006c00750061
0062006c00650020006100730073006500740020006f00660020004d006f
006e006f0074007900700065002e00200055006e006c0065007300730020
0079006f00750020006800610076006500200065006e0074006500720065
006400200069006e0074006f002000610020007300700065006300690066
006900630020006c006900630065006e0073006500200061006700720065
0065006d0065006e00740020006700720061006e00740069006e00670020
0079006f00750020006100640064006900740069006f006e0061006c0020
007200690067006800740073002c00200079006f00750072002000750073
00650020006f00660020007400680069007300200073006f006600740077
0061007200650020006900730020006c0069006d00690074006500640020
0074006f00200079006f0075007200200077006f0072006b007300740061
00740069006f006e00200066006f007200200079006f007500720020006f
0077006e0020007000750062006c0069007300680069006e006700200075
00730065002e00200059006f00750020006d006100790020006e006f0074
00200063006f007000790020006f00720020006400690073007400720069
00620075007400650020007400680069007300200073006f006600740077
006100720065002e000d000a000d000a0049006600200079006f00750020
006800610076006500200061006e00790020007100750065007300740069
006f006e00200063006f006e006300650072006e0069006e006700200079
006f00750072002000720069006700680074007300200079006f00750020
00730068006f0075006c0064002000720065007600690065007700200074
006800650020006c006900630065006e0073006500200061006700720065
0065006d0065006e007400200079006f0075002000720065006300650069
00760065006400200077006900740068002000740068006500200073006f
0066007400770061007200650020006f007200200063006f006e00740061
006300740020004d006f006e006f007400790070006500200066006f0072
0020006100200063006f007000790020006f006600200074006800650020
006c006900630065006e00730065002000610067007200650065006d0065
006e0074002e000d000a000d000a004d006f006e006f0074007900700065
002000630061006e00200062006500200063006f006e0074006100630074
00650064002000610074003a000d000a000d000a0055005300410020002d
0020002800380034003700290020003700310038002d0030003400300030
000900090055004b0020002d002000300031003100340034002000300031
0037003300370020003700360035003900350039000d000a006800740074
0070003a002f002f007700770077002e006d006f006e006f007400790070
0065002e0063006f006d0068007400740070003a002f002f007700770077
002e006d006f006e006f0074007900700065002e0063006f006d002f0068
0074006d006c002f0074007900700065002f006c006900630065006e0073
0065002e00680074006d006c547970656661636520a920546865204d6f6e
6f7479706520436f72706f726174696f6e20706c632e204461746120a920
546865204d6f6e6f7479706520436f72706f726174696f6e20706c632f54
79706520536f6c7574696f6e7320496e632e20313939302d313939322e20
416c6c2052696768747320526573657276656454696d6573204e65772052
6f6d616e4974616c69634d6f6e6f747970653a54696d6573204e65772052
6f6d616e204974616c69633a56657273696f6e20322e393020284d696372
6f736f66742954696d6573204e657720526f6d616e204974616c69635665
7273696f6e20322e393054696d65734e6577526f6d616e50532d4974616c
69634d5454696d6573204e657720526f6d616ea82054726164656d61726b
206f6620546865204d6f6e6f7479706520436f72706f726174696f6e2070
6c63207265676973746572656420696e2074686520555320506174202620
544d204f66662e20616e6420656c736577686572652e4d6f6e6f74797065
205479706f6772617068794d6f6e6f747970652054797065204472617769
6e67204f6666696365202d205374616e6c6579204d6f7269736f6e2c2056
6963746f72204c617264656e742031393332546869732072656d61726b61
626c6520747970656661636520666972737420617070656172656420696e
203139333220696e205468652054696d6573206f66204c6f6e646f6e206e
65777370617065722c20666f722077686963682069742077617320646573
69676e65642e20204974206861732073756273657175656e746c79206265
636f6d65206f6e65206f662074686520776f726c6473206d6f7374207375
636365737366756c2074797065206372656174696f6e732e202054686520
6f726967696e616c2064726177696e67732077657265206d61646520756e
646572205374616e6c6579204d6f7269736f6e277320646972656374696f
6e20627920566963746f72204c617264656e74206174205468652054696d
65732e20204974207468656e2077656e74207468726f75676820616e2065
7874656e73697665206974657261746976652070726f6365737320696e76
6f6c76696e67206675727468657220776f726b20696e204d6f6e6f747970
65277320547970652044726177696e67204f66666963652e202042617365
64206f6e206578706572696d656e7473204d6f7269736f6e206861642063
6f6e647563746564207573696e6720506572706574756120616e6420506c
616e74696e2c20697420686173206d616e79206f6c64207374796c652063
686172616374657269737469637320627574207761732061646170746564
20746f206769766520657863656c6c656e74206c65676962696c69747920
636f75706c6564207769746820676f6f642065636f6e6f6d792e20205769
64656c79207573656420696e20626f6f6b7320616e64206d6167617a696e
65732c20666f72207265706f7274732c206f666669636520646f63756d65
6e747320616e6420616c736f20666f7220646973706c617920616e642061
64766572746973696e672e687474703a2f2f7777772e6d6f6e6f74797065
2e636f6d2f68746d6c2f6d746e616d652f6d735f74696d65736e6577726f
6d616e2e68746d6c687474703a2f2f7777772e6d6f6e6f747970652e636f
6d2f68746d6c2f6d746e616d652f6d735f77656c636f6d652e68746d6c4e
4f54494649434154494f4e204f46204c4943454e53452041475245454d45
4e540d0a0d0a54686973207479706566616365206973207468652070726f
7065727479206f66204d6f6e6f74797065205479706f6772617068792061
6e64206974732075736520627920796f7520697320636f76657265642075
6e64657220746865207465726d73206f662061206c6963656e7365206167
7265656d656e742e20596f752068617665206f627461696e656420746869
7320747970656661636520736f6674776172652065697468657220646972
6563746c792066726f6d204d6f6e6f74797065206f7220746f6765746865
72207769746820736f667477617265206469737472696275746564206279
206f6e65206f66204d6f6e6f747970652773206c6963656e736565732e0d
0a0d0a5468697320736f66747761726520697320612076616c7561626c65
206173736574206f66204d6f6e6f747970652e20556e6c65737320796f75
206861766520656e746572656420696e746f206120737065636966696320
6c6963656e73652061677265656d656e74206772616e74696e6720796f75
206164646974696f6e616c207269676874732c20796f757220757365206f
66207468697320736f667477617265206973206c696d6974656420746f20
796f757220776f726b73746174696f6e20666f7220796f7572206f776e20
7075626c697368696e67207573652e20596f75206d6179206e6f7420636f
7079206f722064697374726962757465207468697320736f667477617265
2e0d0a0d0a496620796f75206861766520616e79207175657374696f6e20
636f6e6365726e696e6720796f75722072696768747320796f752073686f
756c642072657669657720746865206c6963656e73652061677265656d65
6e7420796f7520726563656976656420776974682074686520736f667477
617265206f7220636f6e74616374204d6f6e6f7479706520666f72206120
636f7079206f6620746865206c6963656e73652061677265656d656e742e
0d0a0d0a4d6f6e6f747970652063616e20626520636f6e74616374656420
61743a0d0a0d0a555341202d202838343729203731382d30343030090955
4b202d203031313434203031373337203736353935390d0a687474703a2f
2f7777772e6d6f6e6f747970652e636f6d687474703a2f2f7777772e6d6f
6e6f747970652e636f6d2f68746d6c2f747970652f6c6963656e73652e68
746d6c006300750072007300690076006100540069006d00650073002000
4e0065007700200052006f006d0061006e00200063007500720073006900
760061006b00750072007a00ed0076006100540069006d00650073002000
4e0065007700200052006f006d0061006e0020006b00750072007a00ed00
760061006b0075007200730069007600540069006d006500730020004e00
65007700200052006f006d0061006e0020006b0075007200730069007600
4b0075007200730069007600540069006d006500730020004e0065007700
200052006f006d0061006e0020004b0075007200730069007603a003bb03
ac03b303b903b100540069006d006500730020004e006500770020005200
6f006d0061006e002003a003bb03ac03b303b903b1005400790070006500
66006100630065002000a900200054006800650020004d006f006e006f00
7400790070006500200043006f00720070006f0072006100740069006f00
6e00200070006c0063002e00200044006100740061002000a90020005400
6800650020004d006f006e006f007400790070006500200043006f007200
70006f0072006100740069006f006e00200070006c0063002f0054007900
70006500200053006f006c007500740069006f006e007300200049006e00
63002e00200031003900390030002d0031003900390032002e0020004100
6c006c002000520069006700680074007300200052006500730065007200
760065006400540069006d006500730020004e0065007700200052006f00
6d0061006e004900740061006c00690063004d006f006e006f0074007900
700065003a00540069006d006500730020004e0065007700200052006f00
6d0061006e0020004900740061006c00690063003a005600650072007300
69006f006e00200032002e0039003000200028004d006900630072006f00
73006f00660074002900540069006d006500730020004e00650077002000
52006f006d0061006e0020004900740061006c0069006300560065007200
730069006f006e00200032002e0039003000540069006d00650073004e00
6500770052006f006d0061006e00500053002d004900740061006c006900
63004d005400540069006d006500730020004e0065007700200052006f00
6d0061006e00ae002000540072006100640065006d00610072006b002000
6f006600200054006800650020004d006f006e006f007400790070006500
200043006f00720070006f0072006100740069006f006e00200070006c00
630020007200650067006900730074006500720065006400200069006e00
200074006800650020005500530020005000610074002000260020005400
4d0020004f00660066002e00200061006e006400200065006c0073006500
770068006500720065002e004d006f006e006f0074007900700065002000
5400790070006f006700720061007000680079004d006f006e006f007400
790070006500200054007900700065002000440072006100770069006e00
670020004f006600660069006300650020002d0020005300740061006e00
6c006500790020004d006f007200690073006f006e002c00200056006900
630074006f00720020004c0061007200640065006e007400200031003900
3300320054006800690073002000720065006d00610072006b0061006200
6c0065002000740079007000650066006100630065002000660069007200
73007400200061007000700065006100720065006400200069006e002000
3100390033003200200069006e0020005400680065002000540069006d00
6500730020006f00660020004c006f006e0064006f006e0020006e006500
77007300700061007000650072002c00200066006f007200200077006800
690063006800200069007400200077006100730020006400650073006900
67006e00650064002e002000200049007400200068006100730020007300
75006200730065007100750065006e0074006c0079002000620065006300
6f006d00650020006f006e00650020006f00660020007400680065002000
77006f0072006c006400730020006d006f00730074002000730075006300
6300650073007300660075006c0020007400790070006500200063007200
65006100740069006f006e0073002e002000200054006800650020006f00
72006900670069006e0061006c002000640072006100770069006e006700
73002000770065007200650020006d00610064006500200075006e006400
6500720020005300740061006e006c006500790020004d006f0072006900
73006f006e0027007300200064006900720065006300740069006f006e00
200062007900200056006900630074006f00720020004c00610072006400
65006e00740020006100740020005400680065002000540069006d006500
73002e00200020004900740020007400680065006e002000770065006e00
740020007400680072006f00750067006800200061006e00200065007800
740065006e00730069007600650020006900740065007200610074006900
760065002000700072006f006300650073007300200069006e0076006f00
6c00760069006e0067002000660075007200740068006500720020007700
6f0072006b00200069006e0020004d006f006e006f007400790070006500
27007300200054007900700065002000440072006100770069006e006700
20004f00660066006900630065002e002000200042006100730065006400
20006f006e0020006500780070006500720069006d0065006e0074007300
20004d006f007200690073006f006e002000680061006400200063006f00
6e0064007500630074006500640020007500730069006e00670020005000
6500720070006500740075006100200061006e006400200050006c006100
6e00740069006e002c00200069007400200068006100730020006d006100
6e00790020006f006c00640020007300740079006c006500200063006800
610072006100630074006500720069007300740069006300730020006200
750074002000770061007300200061006400610070007400650064002000
74006f0020006700690076006500200065007800630065006c006c006500
6e00740020006c00650067006900620069006c0069007400790020006300
6f00750070006c006500640020007700690074006800200067006f006f00
64002000650063006f006e006f006d0079002e0020002000570069006400
65006c00790020007500730065006400200069006e00200062006f006f00
6b007300200061006e00640020006d006100670061007a0069006e006500
73002c00200066006f00720020007200650070006f007200740073002c00
20006f0066006600690063006500200064006f00630075006d0065006e00
74007300200061006e006400200061006c0073006f00200066006f007200
200064006900730070006c0061007900200061006e006400200061006400
76006500720074006900730069006e0067002e0068007400740070003a00
2f002f007700770077002e006d006f006e006f0074007900700065002e00
63006f006d002f00680074006d006c002f006d0074006e0061006d006500
2f006d0073005f00740069006d00650073006e006500770072006f006d00
61006e002e00680074006d006c0068007400740070003a002f002f007700
770077002e006d006f006e006f0074007900700065002e0063006f006d00
2f00680074006d006c002f006d0074006e0061006d0065002f006d007300
5f00770065006c0063006f006d0065002e00680074006d006c004e004f00
540049004600490043004100540049004f004e0020004f00460020004c00
4900430045004e00530045002000410047005200450045004d0045004e00
54000d000a000d000a005400680069007300200074007900700065006600
61006300650020006900730020007400680065002000700072006f007000
650072007400790020006f00660020004d006f006e006f00740079007000
650020005400790070006f00670072006100700068007900200061006e00
640020006900740073002000750073006500200062007900200079006f00
7500200069007300200063006f0076006500720065006400200075006e00
640065007200200074006800650020007400650072006d00730020006f00
66002000610020006c006900630065006e00730065002000610067007200
650065006d0065006e0074002e00200059006f0075002000680061007600
650020006f0062007400610069006e006500640020007400680069007300
200074007900700065006600610063006500200073006f00660074007700
610072006500200065006900740068006500720020006400690072006500
630074006c0079002000660072006f006d0020004d006f006e006f007400
79007000650020006f007200200074006f00670065007400680065007200
20007700690074006800200073006f006600740077006100720065002000
640069007300740072006900620075007400650064002000620079002000
6f006e00650020006f00660020004d006f006e006f007400790070006500
2700730020006c006900630065006e0073006500650073002e000d000a00
0d000a005400680069007300200073006f00660074007700610072006500
200069007300200061002000760061006c007500610062006c0065002000
6100730073006500740020006f00660020004d006f006e006f0074007900
700065002e00200055006e006c00650073007300200079006f0075002000
6800610076006500200065006e0074006500720065006400200069006e00
74006f002000610020007300700065006300690066006900630020006c00
6900630065006e00730065002000610067007200650065006d0065006e00
740020006700720061006e00740069006e006700200079006f0075002000
6100640064006900740069006f006e0061006c0020007200690067006800
740073002c00200079006f0075007200200075007300650020006f006600
20007400680069007300200073006f006600740077006100720065002000
6900730020006c0069006d006900740065006400200074006f0020007900
6f0075007200200077006f0072006b00730074006100740069006f006e00
200066006f007200200079006f007500720020006f0077006e0020007000
750062006c0069007300680069006e00670020007500730065002e002000
59006f00750020006d006100790020006e006f007400200063006f007000
790020006f00720020006400690073007400720069006200750074006500
20007400680069007300200073006f006600740077006100720065002e00
0d000a000d000a0049006600200079006f00750020006800610076006500
200061006e00790020007100750065007300740069006f006e0020006300
6f006e006300650072006e0069006e006700200079006f00750072002000
720069006700680074007300200079006f0075002000730068006f007500
6c0064002000720065007600690065007700200074006800650020006c00
6900630065006e00730065002000610067007200650065006d0065006e00
7400200079006f0075002000720065006300650069007600650064002000
77006900740068002000740068006500200073006f006600740077006100
7200650020006f007200200063006f006e00740061006300740020004d00
6f006e006f007400790070006500200066006f0072002000610020006300
6f007000790020006f006600200074006800650020006c00690063006500
6e00730065002000610067007200650065006d0065006e0074002e000d00
0a000d000a004d006f006e006f0074007900700065002000630061006e00
200062006500200063006f006e0074006100630074006500640020006100
74003a000d000a000d000a0055005300410020002d002000280038003400
3700290020003700310038002d0030003400300030000900090055004b00
20002d002000300031003100340034002000300031003700330037002000
3700360035003900350039000d000a0068007400740070003a002f002f00
7700770077002e006d006f006e006f0074007900700065002e0063006f00
6d0068007400740070003a002f002f007700770077002e006d006f006e00
6f0074007900700065002e0063006f006d002f00680074006d006c002f00
74007900700065002f006c006900630065006e00730065002e0068007400
6d006c004300750072007300690076006100540069006d00650073002000
4e0065007700200052006f006d0061006e00200043007500720073006900
760061004b00750072007300690076006f00690074007500540069006d00
6500730020004e0065007700200052006f006d0061006e0020004b007500
72007300690076006f006900740075004900740061006c00690071007500
6500540069006d006500730020004e0065007700200052006f006d006100
6e0020004900740061006c006900710075006500440151006c0074005400
69006d006500730020004e0065007700200052006f006d0061006e002000
440151006c00740043006f0072007300690076006f00540069006d006500
730020004e0065007700200052006f006d0061006e00200043006f007200
7300690076006f004300750072007300690065006600540069006d006500
730020004e0065007700200052006f006d0061006e002000430075007200
73006900650066004b0075007200730069007600540069006d0065007300
20004e0065007700200052006f006d0061006e0020004b00750072007300
690076006b00750072007300790077006100540069006d00650073002000
4e0065007700200052006f006d0061006e0020006b007500720073007900
7700610049007400e1006c00690063006f00540069006d00650073002000
4e0065007700200052006f006d0061006e00200049007400e1006c006900
63006f041a0443044004410438043200540069006d006500730020004e00
65007700200052006f006d0061006e0020041a0443044004410438043200
4b00750072007a00ed0076006100540069006d006500730020004e006500
7700200052006f006d0061006e0020004b00750072007a00ed0076006100
4b0075007200730069007600540069006d006500730020004e0065007700
200052006f006d0061006e0020004b007500720073006900760130007400
61006c0069006b00540069006d006500730020004e006500770020005200
6f006d0061006e0020013000740061006c0069006b0050006f0161006500
76006e006f00540069006d006500730020004e0065007700200052006f00
6d0061006e00200050006f016100650076006e006f006e00670068006900
ea006e006700540069006d006500730020004e0065007700200052006f00
6d0061006e0020006e00670068006900ea006e0067004300750072007300
690076006100540069006d006500730020004e0065007700200052006f00
6d0061006e002000430075007200730069007600610049007400e1006c00
690063006f00540069006d006500730020004e0065007700200052006f00
6d0061006e00200049007400e1006c00690063006f004300750072007300
690076006100540069006d006500730020004e0065007700200052006f00
6d0061006e00200043007500720073006900760061004900740061006c00
6900710075006500540069006d006500730020004e006500770020005200
6f006d0061006e0020004900740061006c0069007100750065000000ba00
54ffc003bbb345453240b803bbb32b2e3240b803bbb2282932b9ffc003bb
b31a263280411303bb009f03bb00af03bb00cf03bb0004000003bb001f03
bb000203bb02af0027001fffc003b9b2161b32b9ffc003b8b2424232b9ff
c003b8b2363832b9ffc003b8b32a2d32df410a03b800ef03b8000203b803
b90028001fffc003b9b3282e32f0410b03b90001000003b7000103b70003
0800001f03b60381b23a1f0f411703b3001003b2002003b2005003b20070
03b200e003b2000600cf03b300df03b300ef03b300ff03b30004001203a8
b2e2891fbe039f016b019a001f039800930801400c1f7f047f05027f027f
03025fbb02b00001ffc00117b2196632b8ffc0b3651a6632b9ff800173b2
196632bd038401170800001fffc002afb2313340b802afb22e3340b802af
b328293240b802afb326273240b802afb321253240b802afb31c203240b8
02afb2233340b802afb21933a0bc02af00b002af00e002afb50340032129
32b8fff2b33a263d32bc038203820382003a0800b51f40255c331eb80381
b25c6432b8ffeeb3252e3314b80381b32b2e3269be03810001008a038100
01000e0381b32b2f3210b80381b3515b320cb80381b34e513222b80381b3
474d320eb80381b246330ab80381400926473212254358320cb80381b232
3310b80381b22a3312b80381b3373d3212bb0381003d0033fff44015253d
331825355b32102526343206252a330c252e33b8fffe4024252d330c3a2f
33329925aa25ba25c92504052536330c25323832193a293a383a03182517
b80381b42825382504bc0381038103810025080040101f0f1f2b2e32691f
781f020b1f303332b8fff1b31f263d32bc038003800380001f080040151f
375f07af07025f06af060222ac2b2e3209ac2f33b8ffdc400aac1f223222
232b52320eb8037fb229330eb8037fb2223314b8037fb21e2032b8ffe7b7
1e2b33321e2b2f32b9ffc0037fb64c4f3232262c33410affee037f003900
33fff8037f002b0033ffea037fb23a3320b8037fb33f46321eb8037fb32f
3a3212b8037fb22e331eb8037fb32a2d320eb8037fb2263304b8037fb349
4a3404b8037fb2463304b8037fb2213318b8037f400c1d33222630323222
26333832b8fff8400a262b2f3209261b21328abe037f0001037f037f037f
00260800402e1f371f062f063f06039f02af02bf02cf02049f03af03bf03
cf03046f037f038f03031f032f033f034f035f03050f413502ed0001005f
02ed009f02ed00df02ed0003002f02ed003f02ed006f02ed000300af02af
0001004f02af009f02af0002002f02af003f02af0002003f02b00001004f
02af005f02af0002002f02af003f02af0002007003b2000103b203b202ed
02ed02b002b002af02af401a370100300140010201010009010200080017
1700000012110840410b027b02230034000d013d0034000d01370034000d
011b401a340d8f340d84340d68340d59340d54340d48340d2c340d28340d
411002350020000d021b0020000d01fc0020000d01c30020000d01500020
000d012c401a200df0200dbe200d94200d79200d6a200d61200d5f200d44
200d410d013e0138000d003d0138000d00300138000d001d0138000d01fd
b40f4d0f0009bf01fd004d000d03b1037f0015001f0215b226341fb80214
b2263f1fb80208b21ebb1f41190206001e0801001f0205001f02ab001f02
04001f02ab001f0203001f0401001f02010031019a001f01fb0023015600
1f01aeb2262a1fb801adb2262a1fb801abb226341f411501a8002602ab00
1f01a5001e0125001f01a400ab02ab001f01a2003102ab001f01a1003102
ab001f019db2236c1fb8019cb2236c1f4109019b00230401001f019a0033
019a001f0176b2262e1fb8016cb231721f4111016b0023019a001f016800
240401001f014500260801001f013f00230401001f0123b21e9e1fbc0121
001e0201001f0100b426791ffd1fb80125b21ffa33b80801b21ff924b802
abb21fe826b80101b21fe51fb8019ab21fe431b80101400b1fe331e41fe2
31891fd226b80201b61fd026cd1fcd25b80401b21fb731b8019ab21fae26
b80801b21fac1eb80401400b1f9e315e1f97269e1f9333b80801b21f8a24
b8019ab21f831fb802ab40131f82236c1f7523e41f7026cd1f6423721f5e
25b80401b21f5d23b802abb21f55e6b80401b21f5324b80201b21f4f33b8
02abb21f4e26b8040140131f4731671f4626ab1f4331cd1f3e235e1f3a1f
b80401b61f3924e41f3723b80801b21f2e23b80401b21f2a1eb80125400b
1f2923ab1f2731ab1f5537bc01c60007018a0007012b402e077f07710769
0766074b074007380736072d07220721071408120810080e080c080a0808
08060804080208000814b8ffe0402b000001001406100000010006040000
01000410000001001002000001000200000001000002010802004a00b013
034b024b5342b0372b4bb807ff52b0382b4bb009505b58b101018e59014b
b0c063004b6220b0f65323b8010a515ab005234201b0124b004b544218b0
382bb00288b801005458b801ffb101018e851bb0124358b900010140858d
1bb900010159858d59590016763f183f123e113946443e113946443e1139
46443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b
182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b
5358b0ff1d594bb04753205c58b9027d027b4544b9027c027b45445958b9
0146027d455258b9027d01464459594bb04753205c58b9001e027c4544b9
0026027c45445958b9017f001e455258b9001e017f4459594bb05e53205c
58b9001f027d4544b90025027d45445958b901a8001f455258b9001f01a8
4459594bb8010153205c58b1ab1f4544b11f1f45445958b9047000ab4552
58b900ab04704459594bb8012553205c58b1e61f4544b11f1f45445958b9
051000e6455258b900e605104459594bb01753205c58b124244544b13124
45445958b12224455258b124224459594bb05153205c58b124244544b123
2445445958b17d24455258b1247d4459594bb06e53205c58b124244544b1
332445445958b1aa24455258b124aa4459592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b45695342014b5058b108004259435c58b1080042591610703eb0
124358b911b53d801bba011c03d9000b2b59b00a2342b00b2342003f3f18
2b103c012f5d060cb0062342b0072342b0124358b93b21187e1bba040001
a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b
2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b0
102342b0112342002b4bb02e5358b8016b45b02a60b8016b234459001845
6944456944184569444569447373737375757573737475757575752b4bb0
26534bb03d515a58b1262645b0196044592b45186944742b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b004bb02a534bb03f515a
58b1070745b04060445973732b2b451869442b2b752b2b4518694475752b
2b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b2b2b451869
442b002b732b2b2b2b2b2b2b2b2b012b2b2b007373732b2b2b01435c58b8
ffdeb31e1c3318b8037fb52b3318262b33b9fff00381b112332b2b2b2b59
0173742b002b73752b2b732b2b2b2b2b73752b2b2b2b2b0000>
[2311 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 0 0 <0002010000000500050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121010004
00fc2003c0fc400500fb002004c0>YNMBAA+TimesNewRomanPS-ItalicMT AddT42Char 
YNMBAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
end
end
%ADOEndSubsetFont
[/N14 (YNMBAA+TimesNewRomanPS-ItalicMT) -1 TZ
238.6 406.0 m
%ADOBeginSubsetFont: YNMBAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YNMBAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 104 1 <0001000effe10456056b003b01554085852c812f025e0d5e0e5e0f6a0d6f
0e6f0f6f107d0d7f0e7f0f7b10802d802e9c0d9d0e9c0f1028002a0d342d
542d6721642d7c087b0e722e8908862a862d9b0c9a0e9a109533a800ad0c
af0eaf0fac10a52ea92fb901be0cbc0ebf10b32eb62ff42e1e162e510b50
0c530d5b2d542f06061417144a0c480e4a10842e060f2d0d2e0407281db8
031e400a28641523ef2121150302bb012e00000039031e40110733343400
09102b120aac203030300230b8031eb5238822208822b80142b51f21e021
0221b8ffc0b2133921b8ffc0b3191b3421b8ffc0401b2227342f213f2180
2103211a3d2bac12402e3512cc0288013b8801b80142b59f00e0000200b8
ffc0b72227340040173500ba0136003c0136b17d182b4e10f42b2b5d4de4
ed10edf42bed4e10f65d2b2b2b5d4de4ed10edf45ded111239003f3c10ed
ec10ed3f3c10ed10edec111217393130005d72015d007101711713330615
141633323635342726272627263534363332171617161716333236373303
233635342623220615141600161514060623222627262322070e702207af
8d83881f2fcc631c2ed4a638321f523a060e111d2a1c26682204a0836882
53012b586dcc793c6872271a3b211f01f7493089aca169443853d1643151
598eca0b06221702031e31fe3e3c25799a7a50467ffee1a15b67c16a162b
0f50>YNMBAA+TimesNewRomanPS-ItalicMT AddT42Char 
1 616 2 <0001ffc000000348054c001e0193b401220f3916b8ffde40400f133e001f
0f200255179913b31b038020010209031d020912011218131d120119001d
01110a101d111819191e090a1409090a121102020108091f280a091018bc
021300190301000a02134011120f091f092f097f098f09050980183909b8
ffc0b22b3509b8ffc0b73335094026273409b8ffc0401728358009c009d0
09e009f009050940113909400f113e09b80173b61f090917091f0aba0173
011300182b2b103c2b2b4e10f42b2b5d2b2b2b2b2b71435c584015094012
0b3f0940140c3f0940160d3f0940170e3f09b8ffc040091c113f09401e12
3f09b8ffc0b320133f09b8ff80b326173f09b8ff80b328183f09b8ffc0b3
0f1e3f09b8ffc0b2273909b8ffc0400915233f09800f193f09b8ffc0b30b
123f09b8ffc0b30b123e09b8ffc0b323123f09b8ff8040092d173f094028
143f09b8ffc0b114392b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5901
4de4fde42b103c2b10c0003f3c3f3c870e2e2b0e7d10c4180010ed0110c0
0010ed0110c00010ed0110c05d0010ed0110c03130015d5d712b2b250721
3736373637363713363534262623372107260706060703061514161601f9
0bfdd20e541b2c152123ec1e1a354d0c020c0b401f2d2f25eb2019372525
25020c111e2f79033266341a24132525010f144a7ffcce711f192313>YNMBAA+TimesNewRomanPS-ItalicMT AddT42Char 
YNMBAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g1 1 def
/g2 2 def
end
YNMBAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 1 /g1 put
dup 2 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 12.0 Tf
(\001\002)
[6.0 3.99591 ] pdfxs
Q
Q
q
n
335.8 403.0 19.5 14.9 re
eoclip
n
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
338.9 406.6 m
%ADOBeginSubsetFont: BTBBAA+OpenSymbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BTBBAA+OpenSymbol gcheck setglobal} if
1 164 2 <00020029fe190485038b001f002900002526270226073732131613003534
2733161514030601161514070623222635342504151433323736353401b4
102539908d85f664331f01731dd104e10efed0045866ae446e0175fedb56
66393231bbb4010a6a0279fefe85feb201a2cd392d1c0f6cfee712fea444
33b9879d5441ac98b376566e5a6f3100>BTBBAA+OpenSymbol AddT42Char 
BTBBAA+OpenSymbol /CharStrings get begin
/g2 2 def
end
BTBBAA+OpenSymbol /Encoding get
dup 2 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 12.0 Tf
(\002) show
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
348.6 406.6 m
%ADOBeginSubsetFont: YNMBAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YNMBAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 12.0 Tf
(\002) show
Q
Q
q
n
285.4 431.8 22.2 14.8 re
eoclip
n
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
288.4 435.4 m
%ADOBeginSubsetFont: BTBBAA+OpenSymbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BTBBAA+OpenSymbol gcheck setglobal} if
1 300 3 <0001005efffa044803930015000005342726272623370411363736353427
33161514030101ac19182346b477016fa53e8339c413fafeae0677e6e64e
9a6e14fd2dc158be81523d2b2d5efebdfe60>BTBBAA+OpenSymbol AddT42Char 
BTBBAA+OpenSymbol /CharStrings get begin
/g3 3 def
end
BTBBAA+OpenSymbol /Encoding get
dup 3 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 12.0 Tf
(\003) show
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
297.4 435.4 m
%ADOBeginSubsetFont: YNMBAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YNMBAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 1124 3 <0002ffd1000004a2054c00260031018a407d081609273c2a48004c2a4a2b
5a006a007b00771f792d96069a2daa2ab917bf2abf2e11a606b40702061c
161c892d0303273131040c130d1d0c0b040a1d0b1a14191d1a2622251d26
3104041e1314141313142122221e0001140000012101292f2e1a292e0101
001a02260c0c0b0b000822210100042c1332281413102cba037f001effc0
b3282d341eb8ffc0b31c1e341eb8ffc0b31318341eb80117b67033013331
d404ba030100140213b51340120b3f13b8ff80b326173f13b8ff80400928
183f13400f193e13b8ffc0b30b123e13b8ff80b72d173f1341183913b8ff
c0b612391340113913b8ffc0b3282d3413b8ffc0b31c1e3413b8ffc0b613
183480130113b80173b63209131713320ab80173b1c4182b2b103c2b2b4e
10f45d2b2b2b2b2b2b2b2b2b2b2b2b014de4fde44e105df62b2b2b4de92b
103c2b10c001121739003f3c103c103c3f12392fed10ed111239870e2e2b
0e7d10c4870e2e182b057d10c4180010ed0110c00010ed0110c00010ed01
10c00010ed0110c087103c7dc43130005d015d5d21030627030615141716
170721373637363736371336353426073721321615140607131616170701
163332363534262322070353d94c5075171d166209fdf30b4a1a29132023
ed184b460c01badec4c9af8430606b0bfd584032acc87d7d202c02930110
fe6650372a1812082525030c111d2f770333522d2e400125a88983d91dfe
739258062502db09bf8e6f760800>YNMBAA+TimesNewRomanPS-ItalicMT AddT42Char 
YNMBAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g3 3 def
end
YNMBAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 3 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 12.0 Tf
(\003) show
Q
Q
q
n
133.7 401.8 16.4 14.8 re
eoclip
n
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
136.7 405.4 m
%ADOBeginSubsetFont: BTBBAA+OpenSymbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BTBBAA+OpenSymbol gcheck setglobal} if
1 378 4 <00010033000206c305730024000001030615141716170721373e01371336
3534273721070e010703061514170721373e01371302acd5103d0a500afd
df0a655e12b3109a0d057b0b6a5415b410990cfddf0d645c13d50527fbcd
5231230a020739390f4e5c0389543331023c3c0c4668fc7752312f073939
0f4c60043100>BTBBAA+OpenSymbol AddT42Char 
BTBBAA+OpenSymbol /CharStrings get begin
/g4 4 def
end
BTBBAA+OpenSymbol /Encoding get
dup 4 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 12.0 Tf
(\004) show
Q
Q
q
n
194.3 369.5 18.2 13.8 re
eoclip
n
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
197.3 372.8 m
%ADOBeginSubsetFont: YNMBAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YNMBAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 1678 4 <00020027ffe80454058e002f003b01c2409e071e011422190f3f0b401935
0a4019350b40363c340a40363c340b183435340b403233340a403235341b
0a1a0b690a690bdf0ade0b063f154f155f155533040b4019350a4019350b
40223a343635491e493b552e873596019b149a15a600b601b80ab51db434
b3350e540001260101f335010c18223a340a40223a340b40223a343d4025
353d402324343d401c3514141523242626136c0a010a0b2ffe26b801f340
26282e302f4d2314333930261b3a36231403130000280003002f031f1326
141313263324200739b8ffdab21e3939b8032e400b18180e0b133c282613
1000b80303b326af130bb8ffc0400a36350b40329e340b8a0ab8ffc0b736
350a40439e340ab80143400a03e42f95001310130213b8ff80b2533513ba
029500360381400e1b8053351b4025351b401d24341bb8ffc0b228351bb8
ffc040112e3434ef1b011b193c1317133c0a32a7182b2b103c2b10f65d2b
2b2b2b2be9f42b71e4fdf62b2bed2b2b10f4ed2b103c2b10c0003f3c10ed
2b3fed870e2e2b087d10c42b183f011112393912391112390011123939f5
ed2bfc01f510c95d870e103c3c087dc43130012b2b2b2b2b2b715d5d5d00
2b2b2b7201722b2b2b2b2b2b2b2b005d0101061514163332373637170606
232226353437370607062322263534123736333216171336373635342726
232207350334262322001514163332000454fea81c11090d122250224893
40222c1e279177524b4c71be9c7b67364e26620b070c0f152117351b4a39
7efeef422e68013a058efb64601e0a120d186015647c302c39607ce0563b
87749501526a552c33015c2516281a150e110725fd73404efe60be4b4f01
c200>YNMBAA+TimesNewRomanPS-ItalicMT AddT42Char 
YNMBAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g4 4 def
end
YNMBAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 4 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 12.0 Tf
(\004\001)
[6.0 6.0 ] pdfxs
Q
Q
q
n
406.8 369.5 19.5 13.8 re
eoclip
n
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
409.8 372.8 m
%ADOBeginSubsetFont: YNMBAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YNMBAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 12.0 Tf
(\004\003)
[6.0 7.32001 ] pdfxs
Q
Q
q
n
298.8 368.4 44.6 14.9 re
eoclip
n
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
301.8 372.0 m
%ADOBeginSubsetFont: BTBBAA+OpenSymbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BTBBAA+OpenSymbol gcheck setglobal} if
1 504 5 <00010093fe58021906420010000001260302111013123715060306101712
170219c3685b5d6abf8c4b3a3a4b8cfe58a4012b01060121011a010d013b
923281febffefdfcfefeba7d>BTBBAA+OpenSymbol AddT42Char 
BTBBAA+OpenSymbol /CharStrings get begin
/g5 5 def
end
BTBBAA+OpenSymbol /Encoding get
dup 5 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 12.0 Tf
(\005) show
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
306.3 372.0 m
%ADOBeginSubsetFont: YNMBAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YNMBAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 12.0 Tf
(\004) show
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
313.8 372.0 m
%ADOBeginSubsetFont: BTBBAA+OpenSymbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BTBBAA+OpenSymbol gcheck setglobal} if
1 576 6 <000100dd0000057f04a0000b000021112135211133112115211102fefddf
022162021ffde1021f62021ffde162fde100>BTBBAA+OpenSymbol AddT42Char 
BTBBAA+OpenSymbol /CharStrings get begin
/g6 6 def
end
BTBBAA+OpenSymbol /Encoding get
dup 6 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 12.0 Tf
(\006) show
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
323.5 372.0 m
%ADOBeginSubsetFont: BTBBAA+OpenSymbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BTBBAA+OpenSymbol gcheck setglobal} if
1 624 7 <0002008fffee043105460020002c00000107262322151417161716151407
062322272635343736332627263534373633320114333237363534232207
0604316083bd7d759841758b90e38f5d5e8f8ee768214e73567998fda7b1
995a48b89c5642050079714c1b789c58a081e5969b5e5e8fe88f8f652b60
4e6a3629fbc2e5be98aee5be9400>BTBBAA+OpenSymbol AddT42Char 
BTBBAA+OpenSymbol /CharStrings get begin
/g7 7 def
end
BTBBAA+OpenSymbol /Encoding get
dup 7 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 12.0 Tf
(\007) show
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
331.1 372.0 m
%ADOBeginSubsetFont: BTBBAA+OpenSymbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BTBBAA+OpenSymbol gcheck setglobal} if
1 758 8 <00010066fe5801e906420011000013361336351027022735161312111003
02076688493e364594bf6a5a586ac1fe8b7b0133f8f2011cfa014e893288
febdfef1fee6fee1fef6fec49100>BTBBAA+OpenSymbol AddT42Char 
BTBBAA+OpenSymbol /CharStrings get begin
/g8 8 def
end
BTBBAA+OpenSymbol /Encoding get
dup 8 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 12.0 Tf
(\b) show
Q
q
[/DeviceRGB] cs 0.0 0.0 0.0 sc
336.3 372.0 m
%ADOBeginSubsetFont: YNMBAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YNMBAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 12.0 Tf
(\002) show
Q
Q
Q
/BTBBAA+OpenSymbol /Font _pdfUndefineResource
/N9 /Font _pdfUndefineResource
/PEAAAA+ArialMT /Font _pdfUndefineResource
/N19 /Font _pdfUndefineResource
/YNMBAA+TimesNewRomanPS-ItalicMT /Font _pdfUndefineResource
/N14 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
