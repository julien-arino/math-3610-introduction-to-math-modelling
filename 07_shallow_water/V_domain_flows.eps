%!PS-Adobe-3.0 EPSF-3.0
%%Title: (V_domain_flows.pdf)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 09:18:51 03/23/07
%%For: (Julien Arino)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 99 239 539 544
%%HiResBoundingBox: 99.2 239.2 538.6 544.2
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3523 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2007-03-23T09:18:51-05:00</xap:CreateDate>
         <xap:ModifyDate>2007-03-23T09:18:51-05:00</xap:ModifyDate>
         <xap:MetadataDate>2007-03-23T09:18:51-05:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:ED5FD26C49D9DB11B55C9196236B016A</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:ED5FD26C49D9DB11B55C9196236B016A</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:a13e71a8-12fa-4a2a-8cb2-3331a772916c</stRef:instanceID>
            <stRef:documentID>uuid:eefa6438-a78c-4ae0-94ee-d16a84edf43c</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Julien Arino</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
99.2 239.2 439.4 305.0 rectclip
%ADOFlattenerSettings: Flattener used: Transparency:, Level: 75 ex: 300.00 in: 150.00 tx ST CC PO
n
99.198 239.202 m
538.596 239.202 l
538.596 544.203 l
99.198 544.203 l
99.198 239.202 l
q
W
n
0.0 -0.099 m
612.099 -0.099 l
612.099 792.0 l
0.0 792.0 l
0.0 -0.099 l
q
eoclip
n
133.704 369.099 m
214.2 369.099 l
214.2 401.301 l
133.704 401.301 l
133.704 369.099 l
q
W
n
194.004 401.301 m
194.004 401.301 l
194.004 393.3 l
133.704 393.3 l
133.704 377.199 l
194.004 377.199 l
194.004 369.198 l
198.396 372.678 l
198.396 397.8 l
194.004 401.301 l
198.396 397.8 m
198.396 372.678 l
198.9 373.077 l
198.9 397.398 l
198.396 397.8 l
[/DeviceRGB] cs 0.875986 0.875986 0.875986 sc
f
Q
n
240.9 536.9 m
245.2 524.1 l
236.7 524.1 l
240.9 536.9 l
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
eofill
n
240.903 380.997 m
240.903 526.698 l
240.903 380.997 l
f
n
99.2 239.2 m
105.2 251.3 l
111.2 245.3 l
99.2 239.2 l
h
eofill
n
240.903 380.997 m
106.398 246.501 l
240.903 380.997 l
f
n
538.6 381.0 m
525.8 376.7 l
525.8 385.2 l
538.6 381.0 l
h
eofill
n
240.903 380.997 m
528.399 380.997 l
240.903 380.997 l
f
Q
n
512.397 366.696 m
524.502 366.696 l
524.502 380.502 l
512.397 380.502 l
512.397 366.696 l
q
eoclip
[/DeviceRGB] cs 0.0 0.0 0.0 sc
q
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT Initial
ct_T42Dict begin
-0.078 -0.215 0.625 0.625
 256 array 0 1 255 {1 index exch /.notdef put} for  /XKLAAA+TimesNewRomanPS-ItalicMT
Type42DictBegin
[<00010000000b000b000b000b63767420bfa34222000000bc000007786670
676df2bc5f9700000834000005cd676c796638de4abe00004d78000007be
686561646ae5af0e00000e04000000366868656163fe800700000e3c0000
0024686d747839fea91300000e60000000186c6f63615e06ef0600000e78
0000000e6d6178703d0af40400000e88000000206e616d653ea6080f0000
0ea80000340970726570743d19ba000042b400000ac36764697200000000
0000000000000000058e0000054c001f054c001c037100180000ffe10000
ffe80000ffe8fe4afffc056b0023fe68ffe2033e00000095000000950000
000000000000002500a8008e010b007d00820045003200a400ca006b0070
005100af003c00f001d700470004002500770029004000fd001601610046
01370029008e0017ffca0025005bffe902e600020099008100f2007500d6
006300c60006009a01330024003800cc003dff67001305d8003600860095
ffdb0007043400a500d8ffdcfffe004800a200d8013c01530380053e0057
007a007c008c0117012a0138017c0026003c007800bd00c0021009b5000c
004d004e00540058006700b4040100020005005000af01d5034300240058
008b013501c0ffac002000250026002d00410136022bffba001e002a0034
003b003f00850094009800d7012e013d033104b900170040006100b9010e
0116012201bfff9c001f001f004d005c0086008c009600aa00cb00cb011f
0154022f036005a9fee8000e006f007c007d008b00d500f1010a01570178
02b803adfe3fff6affb3ffc4001f0037003f0044004a0078007d009700a2
00a700b600c000c100c600d8011d0150019701ee04740532fd81fed1fee0
ff16fff1000f002d00550068006e007f00890095009e00c200da00e400f8
01040108011101c2023002da030e049e0517ff00ff8700000020002f0041
0057007800870088008800b900c200c5012001280133017401d6020e020f
026c027e02ab02ec038903b103e304e7ff43ffa8ffc3ffdcffe900070023
0023002600520077007d0081008f009900ac00ae00b500b800c800ea00f0
00f40135016a018b01b101b501f7021402ad02d504fc05d805f0ff9dfffc
000b00240025002c0030003000330040004700490057006e009a00bd00c9
00cd00dc00fa00fa011b0139017e0187018a018e0195019601df01f60286
02cf02de039603a903b003c804010432046a058b05e006510761fe96fe9a
ff4bff870013002500340038003e004a0065006b0073007a009c00a200b2
00b700bf00f000f700fb0104011301200124013b01520178017c0181018f
01a001d90248026a026f02700301031d032303270388041f04ab04d104da
057a058bfe26fe59ff2e00010002000a003b003b004700580058005f0066
006b007a007a008b009900af00bc00c000c700cc00e900f200f500fb00fb
0102010a010b01150121012701450145015501570158015e01610168017d
01a301ab01da01ee021002180222028f029402a302d202e703710393039b
03b303d303fe04ff050b05320532054b0559058b05ab05f2065506890742
076207a708ccfd2afdc8fddefe0cfe15fe27fe53fe84febbff58ff76ff77
ffa1ffa7ffadffafffc00000000000030094001d001f002000200027002e
0048004b004c005e005f006b0071007c008a00900091009100a700af00b3
00b400c400c600d100d200de00df00df00e600e800ea00eb00f200f500f5
00fc010201180123013101330137015c016201660170017a017a017a0182
01980199019b01b001bf01c001ca01d301d701d801e001e001f601f701f8
02120213022f023702440247024f0252026302650270027f0298029b02a6
02b702ba02c502cf02d602d702e502fe031c031d03450348035d035e0371
0379038103a103b703d403d503d803e103f803fe0404041f042104230425
043a0467048304e00528054b0564056a059f059f05c2060b066a06af06b3
06cb06e8070607280748075007a607b207ff009500af0092009600000000
0000000000000000017e01a80129025b0212020301c302b4019301cd02b2
04ed020e0159017a0300022d042c00c8004d00e602890325013e0378011b
00f1018d00490203007c000e029d02470024000000000052004400330038
005405d3041501a7000002860168005000cf0002004b0024008800ba0025
ffd800110091ff6b00b5011700260065ff9900490080014b01c000f40167
027102ea04fc0310017c01e103d9015501e601ee0434019606cb005c022b
0099003d009f00160039002700de00790120022e005a0099038800940021
0019002a046c05e8000001f203b200aa0296028902b4ffc9020000ec0005
005a0447010004e00000052a001f01eb00ae016800ca02d3028901b50406
01a1014f014b011c0308005e00c70024029d006503750104028002f304d8
00d90239025a032c01f204310303005002e50283005901eb010800ac0196
02f8012100950180004400e501eb02e5007400f301ff02fd038f026801c8
01c70116022b0142033000fe02e101620200002400ee0517010802370066
0006010201e602aa0366019b00d305c203dc044d03b6000401be013702fc
03200244014d0338ffed002506f8030dfed5ff43004402ffff92040bfdef
0155017100d9ffc4032d0461044afbb5fbcf02170192036d0558fff2fe7d
0583023e006605e9073d00790243002500cf00fd00af002a01ef021a0026
001f0025003a000001170490fbfb0251001d02f001f50078018f005f0024
0044005400bf00af006701a8002600050006003f009800fa02ab00c2004d
0375004a00b600c401bf017c006f00130263000c006801520002012e0104
001f001f009a000000f1046900790080005000bd056b00ab0080001e05a5
404154403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a2928272625
24232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807
060504030201002c4523466020b02660b004262348482d2c452346236120
b02661b004262348482d2c45234660b0206120b04660b004262348482d2c
4523462361b0206020b02661b02061b004262348482d2c45234660b04061
20b06660b004262348482d2c4523462361b0406020b02661b04061b00426
2348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b0
8d44235920b0ed51582320b04d44235920b09051582320b00d4423592121
2d2c20204518684420b001602045b04676688a4560442d2c01b10b0a4323
43650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b1
0217453ab10200080d2d2c45b01a234445b01923442d2c2045b003254561
64b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045
b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc0
8a8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344b0
177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0
177ae41b038a45186920b01723448a8a8720b0a05158b0112bb0172344b0
177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c
01182f2d2c20b0032545b019234445b01a23444565234520b00325606a20
b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a4520
8a54582321b03f1b235961441cb114008a5279b31940201945208a545823
21b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c
0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011
432343650b2d2c4b525845441b2121592d2c0120b003252349b04060b020
6320b000525823b002253823b002256538008a63381b212121212159012d
2c4bb06451584569b00943608a103a1b212121592d2c01b005251023208a
f500b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b0
062510f500edec2d2c20b001600110203c003c2d2c20b001610110203c00
3c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c
76b802ee23701020b802ee4520b0005058b00161593a2f182d2c21210c64
23648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59
b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d
2c0c6423648bb84000626023212d2cb4000100000015b00826b00826b008
26b008260f10161345683ab001162d2cb4000100000015b00826b00826b0
0826b008260f1016134568653ab001162d2c4b53234b515a5820458a6044
1b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b21
21592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b
03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b004
25060c6423646164b807085158b00425b00425012046b01060482046b010
6048590a21211b2121592d2cb012435c580cb00425b00425060c64236461
64b807085158b00425b00425012046b8fff060482046b8fff06048590a21
211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58
b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a
034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c46234660
8a8a462320468a608a61b8ff8062232010238ab903b003b08a70456020b0
005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b202020243604259b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b2021002436042595959592d000000000100000002e66716f17668
5f0f3cf50819080000000000a31fb8bd0000000000000000ff60fe460500
0500000200090001000000000000000100000721fe450057000000000000
00000018000700000000000000000000000000060639011c038dffb8038d
ff5c031dffc70200ffeb02390054000000340121020102ef032903df0000
000100000006004700020000000000020010002f0055000004830ac30003
00020000005f047a000000030000000000fe00000000000300000001001e
00fe0000000300000002000c011c00000003000000030070012800000003
00000004002c01980000000300000005001801c400000003000000060030
01dc000000030000000700d8020c0000000300000008002602e400000003
000000090086030a000000030000000a05560390000000030000000b0072
08e6000000030000000c00660958000000030000000d06b409be00000003
0000000e005c10720001000000000000007f10ce0001000000000001000f
114d00010000000000020006115c00010000000000030038116200010000
000000040016119a0001000000000005000c11b000010000000000060018
11bc0001000000000007006c11d400010000000000080013124000010000
0000000900431253000100000000000a02ab1296000100000000000b0039
1541000100000000000c0033157a000100000000000d035a15ad00010000
0000000e002e19070003000104030002000e19350003000104030004002e
19430003000104050002000e19710003000104050004002e197f00030001
04060002000c19ad0003000104060004002c19b90003000104070002000c
19e50003000104070004002c19f10003000104080002000c1a1d00030001
04080004002c1a29000300010409000000fe1a550003000104090001001e
1b530003000104090002000c1b71000300010409000300701b7d00030001
04090004002c1bed000300010409000500181c1900030001040900060030
1c31000300010409000700d81c61000300010409000800261d3900030001
0409000900861d5f000300010409000a05561de5000300010409000b0072
233b000300010409000c006623ad000300010409000d06b4241300030001
0409000e005c2ac700030001040a0002000e2b2300030001040a0004002e
2b3100030001040b000200142b5f00030001040b000400342b7300030001
040c000200102ba700030001040c000400302bb700030001040e00020008
2be700030001040e000400282bef0003000104100002000e2c1700030001
04100004002e2c250003000104130002000e2c530003000104130004002e
2c610003000104140002000c2c8f0003000104140004002c2c9b00030001
04150002000e2cc70003000104150004002e2cd50003000104160002000e
2d030003000104160004002e2d110003000104190002000c2d3f00030001
04190004002c2d4b00030001041b0002000e2d7700030001041b0004002e
2d8500030001041d0002000c2db300030001041d0004002c2dbf00030001
041f0002000c2deb00030001041f0004002c2df70003000104240002000e
2e230003000104240004002e2e3100030001042a0002000e2e5f00030001
042a0004002e2e6d00030001042d000200002e9b00030001042d00040000
2e9b00030001080a0002000e2e9b00030001080a0004002e2ea900030001
08160002000e2ed70003000108160004002e2ee5000300010c0a0002000e
2f13000300010c0a0004002e2f21000300010c0c000200102f4f00030001
0c0c000400302f5f00540079007000650066006100630065002000a90020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e00200070006c0063002e0020
0044006100740061002000a900200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200070006c0063002f005400790070006500200053006f006c0075
00740069006f006e007300200049006e0063002e00200031003900390030
002d0031003900390032002e00200041006c006c00200052006900670068
0074007300200052006500730065007200760065006400540069006d0065
00730020004e0065007700200052006f006d0061006e004900740061006c
00690063004d006f006e006f0074007900700065003a00540069006d0065
00730020004e0065007700200052006f006d0061006e0020004900740061
006c00690063003a00560065007200730069006f006e00200032002e0039
003000200028004d006900630072006f0073006f00660074002900540069
006d006500730020004e0065007700200052006f006d0061006e00200049
00740061006c0069006300560065007200730069006f006e00200032002e
0039003000540069006d00650073004e006500770052006f006d0061006e
00500053002d004900740061006c00690063004d005400540069006d0065
00730020004e0065007700200052006f006d0061006e00ae002000540072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e00200070006c0063002000720065006700690073
0074006500720065006400200069006e0020007400680065002000550053
00200050006100740020002600200054004d0020004f00660066002e0020
0061006e006400200065006c0073006500770068006500720065002e004d
006f006e006f00740079007000650020005400790070006f006700720061
007000680079004d006f006e006f00740079007000650020005400790070
0065002000440072006100770069006e00670020004f0066006600690063
00650020002d0020005300740061006e006c006500790020004d006f0072
00690073006f006e002c00200056006900630074006f00720020004c0061
007200640065006e00740020003100390033003200540068006900730020
00720065006d00610072006b00610062006c006500200074007900700065
006600610063006500200066006900720073007400200061007000700065
006100720065006400200069006e0020003100390033003200200069006e
0020005400680065002000540069006d006500730020006f00660020004c
006f006e0064006f006e0020006e00650077007300700061007000650072
002c00200066006f00720020007700680069006300680020006900740020
007700610073002000640065007300690067006e00650064002e00200020
004900740020006800610073002000730075006200730065007100750065
006e0074006c00790020006200650063006f006d00650020006f006e0065
0020006f0066002000740068006500200077006f0072006c006400730020
006d006f007300740020007300750063006300650073007300660075006c
002000740079007000650020006300720065006100740069006f006e0073
002e002000200054006800650020006f0072006900670069006e0061006c
002000640072006100770069006e00670073002000770065007200650020
006d00610064006500200075006e0064006500720020005300740061006e
006c006500790020004d006f007200690073006f006e0027007300200064
006900720065006300740069006f006e0020006200790020005600690063
0074006f00720020004c0061007200640065006e00740020006100740020
005400680065002000540069006d00650073002e00200020004900740020
007400680065006e002000770065006e00740020007400680072006f0075
0067006800200061006e00200065007800740065006e0073006900760065
0020006900740065007200610074006900760065002000700072006f0063
00650073007300200069006e0076006f006c00760069006e006700200066
00750072007400680065007200200077006f0072006b00200069006e0020
004d006f006e006f00740079007000650027007300200054007900700065
002000440072006100770069006e00670020004f00660066006900630065
002e00200020004200610073006500640020006f006e0020006500780070
006500720069006d0065006e007400730020004d006f007200690073006f
006e002000680061006400200063006f006e006400750063007400650064
0020007500730069006e0067002000500065007200700065007400750061
00200061006e006400200050006c0061006e00740069006e002c00200069
007400200068006100730020006d0061006e00790020006f006c00640020
007300740079006c00650020006300680061007200610063007400650072
006900730074006900630073002000620075007400200077006100730020
006100640061007000740065006400200074006f00200067006900760065
00200065007800630065006c006c0065006e00740020006c006500670069
00620069006c00690074007900200063006f00750070006c006500640020
007700690074006800200067006f006f0064002000650063006f006e006f
006d0079002e002000200057006900640065006c00790020007500730065
006400200069006e00200062006f006f006b007300200061006e00640020
006d006100670061007a0069006e00650073002c00200066006f00720020
007200650070006f007200740073002c0020006f00660066006900630065
00200064006f00630075006d0065006e0074007300200061006e00640020
0061006c0073006f00200066006f007200200064006900730070006c0061
007900200061006e00640020006100640076006500720074006900730069
006e0067002e0068007400740070003a002f002f007700770077002e006d
006f006e006f0074007900700065002e0063006f006d002f00680074006d
006c002f006d0074006e0061006d0065002f006d0073005f00740069006d
00650073006e006500770072006f006d0061006e002e00680074006d006c
0068007400740070003a002f002f007700770077002e006d006f006e006f
0074007900700065002e0063006f006d002f00680074006d006c002f006d
0074006e0061006d0065002f006d0073005f00770065006c0063006f006d
0065002e00680074006d006c004e004f0054004900460049004300410054
0049004f004e0020004f00460020004c004900430045004e005300450020
00410047005200450045004d0045004e0054000d000a000d000a00540068
006900730020007400790070006500660061006300650020006900730020
007400680065002000700072006f007000650072007400790020006f0066
0020004d006f006e006f00740079007000650020005400790070006f0067
0072006100700068007900200061006e0064002000690074007300200075
0073006500200062007900200079006f007500200069007300200063006f
0076006500720065006400200075006e0064006500720020007400680065
0020007400650072006d00730020006f0066002000610020006c00690063
0065006e00730065002000610067007200650065006d0065006e0074002e
00200059006f0075002000680061007600650020006f0062007400610069
006e00650064002000740068006900730020007400790070006500660061
0063006500200073006f0066007400770061007200650020006500690074
0068006500720020006400690072006500630074006c0079002000660072
006f006d0020004d006f006e006f00740079007000650020006f00720020
0074006f0067006500740068006500720020007700690074006800200073
006f00660074007700610072006500200064006900730074007200690062
00750074006500640020006200790020006f006e00650020006f00660020
004d006f006e006f0074007900700065002700730020006c006900630065
006e0073006500650073002e000d000a000d000a00540068006900730020
0073006f0066007400770061007200650020006900730020006100200076
0061006c007500610062006c00650020006100730073006500740020006f
00660020004d006f006e006f0074007900700065002e00200055006e006c
00650073007300200079006f00750020006800610076006500200065006e
0074006500720065006400200069006e0074006f00200061002000730070
0065006300690066006900630020006c006900630065006e007300650020
00610067007200650065006d0065006e00740020006700720061006e0074
0069006e006700200079006f00750020006100640064006900740069006f
006e0061006c0020007200690067006800740073002c00200079006f0075
007200200075007300650020006f00660020007400680069007300200073
006f0066007400770061007200650020006900730020006c0069006d0069
00740065006400200074006f00200079006f0075007200200077006f0072
006b00730074006100740069006f006e00200066006f007200200079006f
007500720020006f0077006e0020007000750062006c0069007300680069
006e00670020007500730065002e00200059006f00750020006d00610079
0020006e006f007400200063006f007000790020006f0072002000640069
007300740072006900620075007400650020007400680069007300200073
006f006600740077006100720065002e000d000a000d000a004900660020
0079006f00750020006800610076006500200061006e0079002000710075
0065007300740069006f006e00200063006f006e006300650072006e0069
006e006700200079006f0075007200200072006900670068007400730020
0079006f0075002000730068006f0075006c006400200072006500760069
0065007700200074006800650020006c006900630065006e007300650020
00610067007200650065006d0065006e007400200079006f007500200072
006500630065006900760065006400200077006900740068002000740068
006500200073006f0066007400770061007200650020006f007200200063
006f006e00740061006300740020004d006f006e006f0074007900700065
00200066006f00720020006100200063006f007000790020006f00660020
0074006800650020006c006900630065006e007300650020006100670072
00650065006d0065006e0074002e000d000a000d000a004d006f006e006f
0074007900700065002000630061006e00200062006500200063006f006e
007400610063007400650064002000610074003a000d000a000d000a0055
005300410020002d0020002800380034003700290020003700310038002d
0030003400300030000900090055004b0020002d00200030003100310034
00340020003000310037003300370020003700360035003900350039000d
000a0068007400740070003a002f002f007700770077002e006d006f006e
006f0074007900700065002e0063006f006d0068007400740070003a002f
002f007700770077002e006d006f006e006f0074007900700065002e0063
006f006d002f00680074006d006c002f0074007900700065002f006c0069
00630065006e00730065002e00680074006d006c547970656661636520a9
20546865204d6f6e6f7479706520436f72706f726174696f6e20706c632e
204461746120a920546865204d6f6e6f7479706520436f72706f72617469
6f6e20706c632f5479706520536f6c7574696f6e7320496e632e20313939
302d313939322e20416c6c2052696768747320526573657276656454696d
6573204e657720526f6d616e4974616c69634d6f6e6f747970653a54696d
6573204e657720526f6d616e204974616c69633a56657273696f6e20322e
393020284d6963726f736f66742954696d6573204e657720526f6d616e20
4974616c696356657273696f6e20322e393054696d65734e6577526f6d61
6e50532d4974616c69634d5454696d6573204e657720526f6d616ea82054
726164656d61726b206f6620546865204d6f6e6f7479706520436f72706f
726174696f6e20706c63207265676973746572656420696e207468652055
5320506174202620544d204f66662e20616e6420656c736577686572652e
4d6f6e6f74797065205479706f6772617068794d6f6e6f74797065205479
70652044726177696e67204f6666696365202d205374616e6c6579204d6f
7269736f6e2c20566963746f72204c617264656e74203139333254686973
2072656d61726b61626c6520747970656661636520666972737420617070
656172656420696e203139333220696e205468652054696d6573206f6620
4c6f6e646f6e206e65777370617065722c20666f72207768696368206974
207761732064657369676e65642e20204974206861732073756273657175
656e746c79206265636f6d65206f6e65206f662074686520776f726c6473
206d6f7374207375636365737366756c2074797065206372656174696f6e
732e2020546865206f726967696e616c2064726177696e67732077657265
206d61646520756e646572205374616e6c6579204d6f7269736f6e277320
646972656374696f6e20627920566963746f72204c617264656e74206174
205468652054696d65732e20204974207468656e2077656e74207468726f
75676820616e20657874656e73697665206974657261746976652070726f
6365737320696e766f6c76696e67206675727468657220776f726b20696e
204d6f6e6f74797065277320547970652044726177696e67204f66666963
652e20204261736564206f6e206578706572696d656e7473204d6f726973
6f6e2068616420636f6e647563746564207573696e672050657270657475
6120616e6420506c616e74696e2c20697420686173206d616e79206f6c64
207374796c65206368617261637465726973746963732062757420776173
206164617074656420746f206769766520657863656c6c656e74206c6567
6962696c69747920636f75706c6564207769746820676f6f642065636f6e
6f6d792e2020576964656c79207573656420696e20626f6f6b7320616e64
206d6167617a696e65732c20666f72207265706f7274732c206f66666963
6520646f63756d656e747320616e6420616c736f20666f7220646973706c
617920616e64206164766572746973696e672e687474703a2f2f7777772e
6d6f6e6f747970652e636f6d2f68746d6c2f6d746e616d652f6d735f7469
6d65736e6577726f6d616e2e68746d6c687474703a2f2f7777772e6d6f6e
6f747970652e636f6d2f68746d6c2f6d746e616d652f6d735f77656c636f
6d652e68746d6c4e4f54494649434154494f4e204f46204c4943454e5345
2041475245454d454e540d0a0d0a54686973207479706566616365206973
207468652070726f7065727479206f66204d6f6e6f74797065205479706f
67726170687920616e64206974732075736520627920796f752069732063
6f766572656420756e64657220746865207465726d73206f662061206c69
63656e73652061677265656d656e742e20596f752068617665206f627461
696e6564207468697320747970656661636520736f667477617265206569
74686572206469726563746c792066726f6d204d6f6e6f74797065206f72
20746f676574686572207769746820736f66747761726520646973747269
6275746564206279206f6e65206f66204d6f6e6f747970652773206c6963
656e736565732e0d0a0d0a5468697320736f667477617265206973206120
76616c7561626c65206173736574206f66204d6f6e6f747970652e20556e
6c65737320796f75206861766520656e746572656420696e746f20612073
70656369666963206c6963656e73652061677265656d656e74206772616e
74696e6720796f75206164646974696f6e616c207269676874732c20796f
757220757365206f66207468697320736f667477617265206973206c696d
6974656420746f20796f757220776f726b73746174696f6e20666f722079
6f7572206f776e207075626c697368696e67207573652e20596f75206d61
79206e6f7420636f7079206f722064697374726962757465207468697320
736f6674776172652e0d0a0d0a496620796f75206861766520616e792071
75657374696f6e20636f6e6365726e696e6720796f757220726967687473
20796f752073686f756c642072657669657720746865206c6963656e7365
2061677265656d656e7420796f7520726563656976656420776974682074
686520736f667477617265206f7220636f6e74616374204d6f6e6f747970
6520666f72206120636f7079206f6620746865206c6963656e7365206167
7265656d656e742e0d0a0d0a4d6f6e6f747970652063616e20626520636f
6e7461637465642061743a0d0a0d0a555341202d20283834372920373138
2d303430300909554b202d20303131343420303137333720373635393539
0d0a687474703a2f2f7777772e6d6f6e6f747970652e636f6d687474703a
2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f747970652f6c
6963656e73652e68746d6c00630075007200730069007600610054006900
6d006500730020004e0065007700200052006f006d0061006e0020006300
7500720073006900760061006b00750072007a00ed007600610054006900
6d006500730020004e0065007700200052006f006d0061006e0020006b00
750072007a00ed00760061006b0075007200730069007600540069006d00
6500730020004e0065007700200052006f006d0061006e0020006b007500
72007300690076004b0075007200730069007600540069006d0065007300
20004e0065007700200052006f006d0061006e0020004b00750072007300
69007603a003bb03ac03b303b903b100540069006d006500730020004e00
65007700200052006f006d0061006e002003a003bb03ac03b303b903b100
540079007000650066006100630065002000a90020005400680065002000
4d006f006e006f007400790070006500200043006f00720070006f007200
6100740069006f006e00200070006c0063002e0020004400610074006100
2000a900200054006800650020004d006f006e006f007400790070006500
200043006f00720070006f0072006100740069006f006e00200070006c00
63002f005400790070006500200053006f006c007500740069006f006e00
7300200049006e0063002e00200031003900390030002d00310039003900
32002e00200041006c006c00200052006900670068007400730020005200
6500730065007200760065006400540069006d006500730020004e006500
7700200052006f006d0061006e004900740061006c00690063004d006f00
6e006f0074007900700065003a00540069006d006500730020004e006500
7700200052006f006d0061006e0020004900740061006c00690063003a00
560065007200730069006f006e00200032002e0039003000200028004d00
6900630072006f0073006f00660074002900540069006d00650073002000
4e0065007700200052006f006d0061006e0020004900740061006c006900
6300560065007200730069006f006e00200032002e003900300054006900
6d00650073004e006500770052006f006d0061006e00500053002d004900
740061006c00690063004d005400540069006d006500730020004e006500
7700200052006f006d0061006e00ae002000540072006100640065006d00
610072006b0020006f006600200054006800650020004d006f006e006f00
7400790070006500200043006f00720070006f0072006100740069006f00
6e00200070006c0063002000720065006700690073007400650072006500
6400200069006e0020007400680065002000550053002000500061007400
20002600200054004d0020004f00660066002e00200061006e0064002000
65006c0073006500770068006500720065002e004d006f006e006f007400
79007000650020005400790070006f006700720061007000680079004d00
6f006e006f00740079007000650020005400790070006500200044007200
6100770069006e00670020004f006600660069006300650020002d002000
5300740061006e006c006500790020004d006f007200690073006f006e00
2c00200056006900630074006f00720020004c0061007200640065006e00
74002000310039003300320054006800690073002000720065006d006100
72006b00610062006c006500200074007900700065006600610063006500
200066006900720073007400200061007000700065006100720065006400
200069006e0020003100390033003200200069006e002000540068006500
2000540069006d006500730020006f00660020004c006f006e0064006f00
6e0020006e00650077007300700061007000650072002c00200066006f00
720020007700680069006300680020006900740020007700610073002000
640065007300690067006e00650064002e00200020004900740020006800
610073002000730075006200730065007100750065006e0074006c007900
20006200650063006f006d00650020006f006e00650020006f0066002000
740068006500200077006f0072006c006400730020006d006f0073007400
20007300750063006300650073007300660075006c002000740079007000
650020006300720065006100740069006f006e0073002e00200020005400
6800650020006f0072006900670069006e0061006c002000640072006100
770069006e00670073002000770065007200650020006d00610064006500
200075006e0064006500720020005300740061006e006c00650079002000
4d006f007200690073006f006e0027007300200064006900720065006300
740069006f006e00200062007900200056006900630074006f0072002000
4c0061007200640065006e00740020006100740020005400680065002000
540069006d00650073002e00200020004900740020007400680065006e00
2000770065006e00740020007400680072006f0075006700680020006100
6e00200065007800740065006e0073006900760065002000690074006500
7200610074006900760065002000700072006f0063006500730073002000
69006e0076006f006c00760069006e006700200066007500720074006800
65007200200077006f0072006b00200069006e0020004d006f006e006f00
740079007000650027007300200054007900700065002000440072006100
770069006e00670020004f00660066006900630065002e00200020004200
610073006500640020006f006e0020006500780070006500720069006d00
65006e007400730020004d006f007200690073006f006e00200068006100
6400200063006f006e006400750063007400650064002000750073006900
6e006700200050006500720070006500740075006100200061006e006400
200050006c0061006e00740069006e002c00200069007400200068006100
730020006d0061006e00790020006f006c00640020007300740079006c00
650020006300680061007200610063007400650072006900730074006900
630073002000620075007400200077006100730020006100640061007000
740065006400200074006f00200067006900760065002000650078006300
65006c006c0065006e00740020006c00650067006900620069006c006900
74007900200063006f00750070006c006500640020007700690074006800
200067006f006f0064002000650063006f006e006f006d0079002e002000
200057006900640065006c00790020007500730065006400200069006e00
200062006f006f006b007300200061006e00640020006d00610067006100
7a0069006e00650073002c00200066006f00720020007200650070006f00
7200740073002c0020006f0066006600690063006500200064006f006300
75006d0065006e0074007300200061006e006400200061006c0073006f00
200066006f007200200064006900730070006c0061007900200061006e00
640020006100640076006500720074006900730069006e0067002e006800
7400740070003a002f002f007700770077002e006d006f006e006f007400
7900700065002e0063006f006d002f00680074006d006c002f006d007400
6e0061006d0065002f006d0073005f00740069006d00650073006e006500
770072006f006d0061006e002e00680074006d006c006800740074007000
3a002f002f007700770077002e006d006f006e006f007400790070006500
2e0063006f006d002f00680074006d006c002f006d0074006e0061006d00
65002f006d0073005f00770065006c0063006f006d0065002e0068007400
6d006c004e004f00540049004600490043004100540049004f004e002000
4f00460020004c004900430045004e005300450020004100470052004500
45004d0045004e0054000d000a000d000a00540068006900730020007400
790070006500660061006300650020006900730020007400680065002000
700072006f007000650072007400790020006f00660020004d006f006e00
6f00740079007000650020005400790070006f0067007200610070006800
7900200061006e0064002000690074007300200075007300650020006200
7900200079006f007500200069007300200063006f007600650072006500
6400200075006e0064006500720020007400680065002000740065007200
6d00730020006f0066002000610020006c006900630065006e0073006500
2000610067007200650065006d0065006e0074002e00200059006f007500
2000680061007600650020006f0062007400610069006e00650064002000
740068006900730020007400790070006500660061006300650020007300
6f0066007400770061007200650020006500690074006800650072002000
6400690072006500630074006c0079002000660072006f006d0020004d00
6f006e006f00740079007000650020006f007200200074006f0067006500
740068006500720020007700690074006800200073006f00660074007700
610072006500200064006900730074007200690062007500740065006400
20006200790020006f006e00650020006f00660020004d006f006e006f00
74007900700065002700730020006c006900630065006e00730065006500
73002e000d000a000d000a005400680069007300200073006f0066007400
7700610072006500200069007300200061002000760061006c0075006100
62006c00650020006100730073006500740020006f00660020004d006f00
6e006f0074007900700065002e00200055006e006c006500730073002000
79006f00750020006800610076006500200065006e007400650072006500
6400200069006e0074006f00200061002000730070006500630069006600
6900630020006c006900630065006e007300650020006100670072006500
65006d0065006e00740020006700720061006e00740069006e0067002000
79006f00750020006100640064006900740069006f006e0061006c002000
7200690067006800740073002c00200079006f0075007200200075007300
650020006f00660020007400680069007300200073006f00660074007700
61007200650020006900730020006c0069006d0069007400650064002000
74006f00200079006f0075007200200077006f0072006b00730074006100
740069006f006e00200066006f007200200079006f007500720020006f00
77006e0020007000750062006c0069007300680069006e00670020007500
730065002e00200059006f00750020006d006100790020006e006f007400
200063006f007000790020006f0072002000640069007300740072006900
620075007400650020007400680069007300200073006f00660074007700
6100720065002e000d000a000d000a0049006600200079006f0075002000
6800610076006500200061006e0079002000710075006500730074006900
6f006e00200063006f006e006300650072006e0069006e00670020007900
6f00750072002000720069006700680074007300200079006f0075002000
730068006f0075006c006400200072006500760069006500770020007400
6800650020006c006900630065006e007300650020006100670072006500
65006d0065006e007400200079006f007500200072006500630065006900
760065006400200077006900740068002000740068006500200073006f00
66007400770061007200650020006f007200200063006f006e0074006100
6300740020004d006f006e006f007400790070006500200066006f007200
20006100200063006f007000790020006f00660020007400680065002000
6c006900630065006e00730065002000610067007200650065006d006500
6e0074002e000d000a000d000a004d006f006e006f007400790070006500
2000630061006e00200062006500200063006f006e007400610063007400
650064002000610074003a000d000a000d000a0055005300410020002d00
20002800380034003700290020003700310038002d003000340030003000
0900090055004b0020002d00200030003100310034003400200030003100
37003300370020003700360035003900350039000d000a00680074007400
70003a002f002f007700770077002e006d006f006e006f00740079007000
65002e0063006f006d0068007400740070003a002f002f00770077007700
2e006d006f006e006f0074007900700065002e0063006f006d002f006800
74006d006c002f0074007900700065002f006c006900630065006e007300
65002e00680074006d006c00430075007200730069007600610054006900
6d006500730020004e0065007700200052006f006d0061006e0020004300
7500720073006900760061004b00750072007300690076006f0069007400
7500540069006d006500730020004e0065007700200052006f006d006100
6e0020004b00750072007300690076006f00690074007500490074006100
6c006900710075006500540069006d006500730020004e00650077002000
52006f006d0061006e0020004900740061006c0069007100750065004401
51006c007400540069006d006500730020004e0065007700200052006f00
6d0061006e002000440151006c00740043006f0072007300690076006f00
540069006d006500730020004e0065007700200052006f006d0061006e00
200043006f0072007300690076006f004300750072007300690065006600
540069006d006500730020004e0065007700200052006f006d0061006e00
200043007500720073006900650066004b00750072007300690076005400
69006d006500730020004e0065007700200052006f006d0061006e002000
4b00750072007300690076006b0075007200730079007700610054006900
6d006500730020004e0065007700200052006f006d0061006e0020006b00
75007200730079007700610049007400e1006c00690063006f0054006900
6d006500730020004e0065007700200052006f006d0061006e0020004900
7400e1006c00690063006f041a0443044004410438043200540069006d00
6500730020004e0065007700200052006f006d0061006e0020041a044304
40044104380432004b00750072007a00ed0076006100540069006d006500
730020004e0065007700200052006f006d0061006e0020004b0075007200
7a00ed00760061004b0075007200730069007600540069006d0065007300
20004e0065007700200052006f006d0061006e0020004b00750072007300
690076013000740061006c0069006b00540069006d006500730020004e00
65007700200052006f006d0061006e0020013000740061006c0069006b00
50006f016100650076006e006f00540069006d006500730020004e006500
7700200052006f006d0061006e00200050006f016100650076006e006f00
6e00670068006900ea006e006700540069006d006500730020004e006500
7700200052006f006d0061006e0020006e00670068006900ea006e006700
4300750072007300690076006100540069006d006500730020004e006500
7700200052006f006d0061006e0020004300750072007300690076006100
49007400e1006c00690063006f00540069006d006500730020004e006500
7700200052006f006d0061006e00200049007400e1006c00690063006f00
4300750072007300690076006100540069006d006500730020004e006500
7700200052006f006d0061006e0020004300750072007300690076006100
4900740061006c006900710075006500540069006d006500730020004e00
65007700200052006f006d0061006e0020004900740061006c0069007100
750065000000ba0054ffc003bbb345453240b803bbb32b2e3240b803bbb2
282932b9ffc003bbb31a263280411303bb009f03bb00af03bb00cf03bb00
04000003bb001f03bb000203bb02af0027001fffc003b9b2161b32b9ffc0
03b8b2424232b9ffc003b8b2363832b9ffc003b8b32a2d32df410a03b800
ef03b8000203b803b90028001fffc003b9b3282e32f0410b03b900010000
03b7000103b700030800001f03b60381b23a1f0f411703b3001003b20020
03b2005003b2007003b200e003b2000600cf03b300df03b300ef03b300ff
03b30004001203a8b2e2891fbe039f016b019a001f039800930801400c1f
7f047f05027f027f03025fbb02b00001ffc00117b2196632b8ffc0b3651a
6632b9ff800173b2196632bd038401170800001fffc002afb2313340b802
afb22e3340b802afb328293240b802afb326273240b802afb321253240b8
02afb31c203240b802afb2233340b802afb21933a0bc02af00b002af00e0
02afb5034003212932b8fff2b33a263d32bc038203820382003a0800b51f
40255c331eb80381b25c6432b8ffeeb3252e3314b80381b32b2e3269be03
810001008a03810001000e0381b32b2f3210b80381b3515b320cb80381b3
4e513222b80381b3474d320eb80381b246330ab803814009264732122543
58320cb80381b2323310b80381b22a3312b80381b3373d3212bb0381003d
0033fff44015253d331825355b32102526343206252a330c252e33b8fffe
4024252d330c3a2f33329925aa25ba25c92504052536330c25323832193a
293a383a03182517b80381b42825382504bc038103810381002508004010
1f0f1f2b2e32691f781f020b1f303332b8fff1b31f263d32bc0380038003
80001f080040151f375f07af07025f06af060222ac2b2e3209ac2f33b8ff
dc400aac1f223222232b52320eb8037fb229330eb8037fb2223314b8037f
b21e2032b8ffe7b71e2b33321e2b2f32b9ffc0037fb64c4f3232262c3341
0affee037f00390033fff8037f002b0033ffea037fb23a3320b8037fb33f
46321eb8037fb32f3a3212b8037fb22e331eb8037fb32a2d320eb8037fb2
263304b8037fb3494a3404b8037fb2463304b8037fb2213318b8037f400c
1d3322263032322226333832b8fff8400a262b2f3209261b21328abe037f
0001037f037f037f00260800402e1f371f062f063f06039f02af02bf02cf
02049f03af03bf03cf03046f037f038f03031f032f033f034f035f03050f
413502ed0001005f02ed009f02ed00df02ed0003002f02ed003f02ed006f
02ed000300af02af0001004f02af009f02af0002002f02af003f02af0002
003f02b00001004f02af005f02af0002002f02af003f02af0002007003b2
000103b203b202ed02ed02b002b002af02af401a37010030014001020101
00090102000800171700000012110840410b027b02230034000d013d0034
000d01370034000d011b401a340d8f340d84340d68340d59340d54340d48
340d2c340d28340d411002350020000d021b0020000d01fc0020000d01c3
0020000d01500020000d012c401a200df0200dbe200d94200d79200d6a20
0d61200d5f200d44200d410d013e0138000d003d0138000d00300138000d
001d0138000d01fdb40f4d0f0009bf01fd004d000d03b1037f0015001f02
15b226341fb80214b2263f1fb80208b21ebb1f41190206001e0801001f02
05001f02ab001f0204001f02ab001f0203001f0401001f02010031019a00
1f01fb00230156001f01aeb2262a1fb801adb2262a1fb801abb226341f41
1501a8002602ab001f01a5001e0125001f01a400ab02ab001f01a2003102
ab001f01a1003102ab001f019db2236c1fb8019cb2236c1f4109019b0023
0401001f019a0033019a001f0176b2262e1fb8016cb231721f4111016b00
23019a001f016800240401001f014500260801001f013f00230401001f01
23b21e9e1fbc0121001e0201001f0100b426791ffd1fb80125b21ffa33b8
0801b21ff924b802abb21fe826b80101b21fe51fb8019ab21fe431b80101
400b1fe331e41fe231891fd226b80201b61fd026cd1fcd25b80401b21fb7
31b8019ab21fae26b80801b21fac1eb80401400b1f9e315e1f97269e1f93
33b80801b21f8a24b8019ab21f831fb802ab40131f82236c1f7523e41f70
26cd1f6423721f5e25b80401b21f5d23b802abb21f55e6b80401b21f5324
b80201b21f4f33b802abb21f4e26b8040140131f4731671f4626ab1f4331
cd1f3e235e1f3a1fb80401b61f3924e41f3723b80801b21f2e23b80401b2
1f2a1eb80125400b1f2923ab1f2731ab1f5537bc01c60007018a0007012b
402e077f077107690766074b074007380736072d07220721071408120810
080e080c080a080808060804080208000814b8ffe0402b00000100140610
000001000604000001000410000001001002000001000200000001000002
010802004a00b013034b024b5342b0372b4bb807ff52b0382b4bb009505b
58b101018e59014bb0c063004b6220b0f65323b8010a515ab005234201b0
124b004b544218b0382bb00288b801005458b801ffb101018e851bb01243
58b900010140858d1bb900010159858d59590016763f183f123e11394644
3e113946443e113946443e113946443e11394660443e11394660442b2b2b
2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b53
58b0aa1d59b0324b5358b0ff1d594bb04753205c58b9027d027b4544b902
7c027b45445958b90146027d455258b9027d01464459594bb04753205c58
b9001e027c4544b90026027c45445958b9017f001e455258b9001e017f44
59594bb05e53205c58b9001f027d4544b90025027d45445958b901a8001f
455258b9001f01a84459594bb8010153205c58b1ab1f4544b11f1f454459
58b9047000ab455258b900ab04704459594bb8012553205c58b1e61f4544
b11f1f45445958b9051000e6455258b900e605104459594bb01753205c58
b124244544b1312445445958b12224455258b124224459594bb05153205c
58b124244544b1232445445958b17d24455258b1247d4459594bb06e5320
5c58b124244544b1332445445958b1aa24455258b124aa4459592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b45695342014b5058b108004259435c58b108
0042591610703eb0124358b911b53d801bba011c03d9000b2b59b00a2342
b00b2342003f3f182b103c012f5d060cb0062342b0072342b0124358b93b
21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d41
1bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01
a80400000b2b59b0102342b0112342002b4bb02e5358b8016b45b02a60b8
016b23445900184569444569441845694445694473737373757575737374
75757575752b4bb026534bb03d515a58b1262645b0196044592b45186944
742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b004b
b02a534bb03f515a58b1070745b04060445973732b2b451869442b2b752b
2b4518694475752b2b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7475
2b2b2b2b2b451869442b002b732b2b2b2b2b2b2b2b2b012b2b2b00737373
2b2b2b01435c58b8ffdeb31e1c3318b8037fb52b3318262b33b9fff00381
b112332b2b2b2b590173742b002b73752b2b732b2b2b2b2b73752b2b2b2b
2b0000>
[1983 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 0 0 <0002010000000500050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121010004
00fc2003c0fc400500fb002004c0>XKLAAA+TimesNewRomanPS-ItalicMT AddT42Char 
XKLAAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
end
end
%ADOEndSubsetFont
[/N31 (XKLAAA+TimesNewRomanPS-ItalicMT) -1 TZ
516.2 370.0 m
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XKLAAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 104 1 <0001ffbcffe8038403890046010840630d40120b3f0700072a003d013e14
001601240023014a1b56018919a301a919aa2aa83daf3f10484010351017
63217321c919cb210509230c2a52230304191a1a022a2a2b3e403e3c4028
2122021a1a1f2840142828403e2a1904041135428a46c60011b80395401f
153a0a0a000735c639272e2e260b042a193e218a9f22cf220222c90d02e4
45ba014700400124b21a8228b8019f401d19e43e403b4b343e401d353e3e
47200d400d8f0daf0d040d1a48321947b80114b1de182b4e10e410e65d12
392f2b2b4dedf4edf4e6ed10f45ded11123939003f3c10fde43f3c10fde4
10f4ed11121739870e2e2b0e7d10c40110c90708103c083c870e10c4c431
30005d5d012b5d2b01161716173736363736333216151407062322272623
220706071316163332373637170607062322272603020706232227263534
363332171633323736363726272626232207350167311912295823642618
1d2b330f1c2415182f1018213e5652131a0d151c3727233f613726382115
429c5e3d392821182c2020241a0e0c132fa2193e05174a48171e03893434
2499843057100a2e21260e1909101c3495fea84f1f172e4a12764e2c3f27
0129fef14e321d1625212c20171026fc38f30e4136022400>XKLAAA+TimesNewRomanPS-ItalicMT AddT42Char 
XKLAAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g1 1 def
end
XKLAAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 1 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N31 [12.1 0.0 0.0 12.0 0.0 0.0] Tf
(\001) show
Q
Q
n
226.8 508.401 m
239.4 508.401 l
239.4 522.198 l
226.8 522.198 l
226.8 508.401 l
q
eoclip
[/DeviceRGB] cs 0.0 0.0 0.0 sc
q
231.3 511.7 m
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XKLAAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 578 2 <0001ff60fe460386038900380113405b9b310131183a3509191a1929193d
19a602b402ba1ab428b832c603c604ca19ca1a0d491b591b691b03043130
2f2f051d2b1e1a311a1104302f2e2d2b281c1b08213105060708090a0b0c
081704358a38c614000724c92b271e0f21b801c040373111400b12340f11
1f110211280c751740170e3f9017a0170250178017b01703201730174017
0317493a3849bf37013f374f375f370337b80323400d04e531401c113f31
401e123f31b8ffc040172529349031a031ef310350318031022031303140
310331b8021cb33932de182b10f65d5d5d2b2b2bedf65d5de410f45d5d5d
2bfde45d2b10e4003ffdec3f3cf4ed011112173911121739111239001239
111239870e7d10c404c43c3130015d5d2b01720116161713363736373637
3635342e0235343633321615140600070606232226353436333217161617
163332373637363703262623220727014b221a0d2c3c723751310b060e3b
2730242c3e6cfeccdb9792341f2f4126140d0813080507060f3749602e38
0e384215360903893a6594fe14489c4c83502010110b0e13332129324940
4fcbfe5cf8ab592f1f274009052f08050a224a623e027a9d44062500>XKLAAA+TimesNewRomanPS-ItalicMT AddT42Char 
XKLAAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g2 2 def
end
XKLAAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 2 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N31 12.0 Tf
(\002) show
Q
Q
n
101.997 253.8 m
113.499 253.8 l
113.499 267.597 l
101.997 267.597 l
101.997 253.8 l
q
eoclip
[/DeviceRGB] cs 0.0 0.0 0.0 sc
q
105.8 257.1 m
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XKLAAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 1026 3 <0001ffc30000032303710014018eb1120db8ffe24012223a340c40120b3f
031e223a340d06213503b8ffec402a21353602cb01cf02cb03da03fa0306
2c033b03490d580c580d69026603780276039d0c9d0da502a1030db10602
435458400d091416150c200917340c030b02b8ffe04017091734020d0003
0b0ac00dd00d02d00d01e00d010d0006003fcd5d71723fcd1112392b1112
392b01111239391b401609fe0404ec08300914450e0eec1330140d120e1f
0002b801194009010100060412031f0cb80119b30a0b0a0db80123400e09
b80201491614950340120b3f03b80123400c0c0b401b20343f0b010b9315
b80114b1b5182b10fd5d2b3ced2be410f43ce4ed003f3ce6fd435c58b900
03ffc0b323123f03b8ffc0b3140c3f03b8ffc0b3120b3f03b8ffc0b72814
3f034011143e2b2b2b2b2b593c3f3c10e610fd435c5840150e4023123f0e
40140c3f0e40120b3f0e4028143f0eb8ffc0b211143e2b2b2b2b2b593c01
2eedec0010f5012eedec0010f559313001715d2b2b2b2b2b435c58401203
400f3903401d233e034015233e034014392b2b2b2b591321150121323636
37330321350121220706060723a8027bfd4c012568382f1d2557fd7502b4
fee05b131c371d26037119fd30103444fef01d02d00506333b00>XKLAAA+TimesNewRomanPS-ItalicMT AddT42Char 
XKLAAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g3 3 def
end
XKLAAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 3 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N31 [12.2142 0.0 0.0 12.0 0.0 0.0] Tf
(\003) show
Q
Q
n
0.0 -0.099 m
612.099 -0.099 l
612.099 792.0 l
0.0 792.0 l
0.0 -0.099 l
q
eoclip
n
283.5 352.602 m
198.396 267.597 l
283.5 352.602 l
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
425.196 352.602 m
340.2 267.597 l
425.196 352.602 l
f
n
198.4 267.6 m
340.2 267.6 l
198.4 267.6 l
f
n
283.5 352.602 m
425.196 352.602 l
283.5 352.602 l
f
n
283.5 352.602 m
284.517 353.619 l
283.5 352.602 l
285.534 354.645 m
286.56 355.671 l
285.534 354.645 l
287.577 356.688 m
288.594 357.714 l
287.577 356.688 l
289.611 358.731 m
290.628 359.757 l
289.611 358.731 l
291.654 360.783 m
292.671 361.8 l
291.654 360.783 l
293.688 362.826 m
294.705 363.843 l
293.688 362.826 l
295.722 364.869 m
296.748 365.895 l
295.722 364.869 l
297.765 366.912 m
298.782 367.938 l
297.765 366.912 l
299.799 368.955 m
300.816 369.981 l
299.799 368.955 l
301.842 371.007 m
302.859 372.024 l
301.842 371.007 l
303.876 373.05 m
304.893 374.067 l
303.876 373.05 l
305.91 375.093 m
306.936 376.11 l
305.91 375.093 l
307.953 377.136 m
308.97 378.162 l
307.953 377.136 l
309.987 379.179 m
311.004 380.205 l
309.987 379.179 l
f
n
425.196 352.602 m
426.222 353.619 l
425.196 352.602 l
427.239 354.645 m
428.256 355.671 l
427.239 354.645 l
429.273 356.688 m
430.29 357.714 l
429.273 356.688 l
431.316 358.731 m
432.333 359.757 l
431.316 358.731 l
433.35 360.783 m
434.367 361.8 l
433.35 360.783 l
435.384 362.826 m
436.41 363.843 l
435.384 362.826 l
437.427 364.869 m
438.444 365.895 l
437.427 364.869 l
439.461 366.912 m
440.478 367.938 l
439.461 366.912 l
441.504 368.955 m
442.521 369.981 l
441.504 368.955 l
443.538 371.007 m
444.555 372.024 l
443.538 371.007 l
445.572 373.05 m
446.598 374.067 l
445.572 373.05 l
447.615 375.093 m
448.632 376.11 l
447.615 375.093 l
449.649 377.136 m
450.666 378.162 l
449.649 377.136 l
451.692 379.179 m
452.709 380.205 l
451.692 379.179 l
f
n
283.5 352.602 m
282.06 352.602 l
283.5 352.602 l
280.611 352.602 m
279.171 352.602 l
280.611 352.602 l
277.731 352.602 m
276.282 352.602 l
277.731 352.602 l
274.842 352.602 m
273.393 352.602 l
274.842 352.602 l
271.953 352.602 m
270.513 352.602 l
271.953 352.602 l
269.064 352.602 m
267.624 352.602 l
269.064 352.602 l
266.184 352.602 m
264.735 352.602 l
266.184 352.602 l
263.295 352.602 m
261.855 352.602 l
263.295 352.602 l
260.406 352.602 m
258.966 352.602 l
260.406 352.602 l
257.517 352.602 m
256.077 352.602 l
257.517 352.602 l
254.637 352.602 m
253.188 352.602 l
254.637 352.602 l
251.748 352.602 m
250.308 352.602 l
251.748 352.602 l
248.859 352.602 m
247.419 352.602 l
248.859 352.602 l
245.97 352.602 m
244.53 352.602 l
245.97 352.602 l
243.09 352.602 m
241.641 352.602 l
243.09 352.602 l
240.201 352.602 m
238.761 352.602 l
240.201 352.602 l
237.312 352.602 m
235.872 352.602 l
237.312 352.602 l
234.432 352.602 m
232.983 352.602 l
234.432 352.602 l
231.543 352.602 m
230.094 352.602 l
231.543 352.602 l
228.654 352.602 m
227.214 352.602 l
228.654 352.602 l
225.765 352.602 m
224.325 352.602 l
225.765 352.602 l
222.885 352.602 m
221.436 352.602 l
222.885 352.602 l
219.996 352.602 m
218.556 352.602 l
219.996 352.602 l
217.107 352.602 m
215.667 352.602 l
217.107 352.602 l
214.218 352.602 m
212.778 352.602 l
214.218 352.602 l
f
n
198.4 267.6 m
196.957 267.6 l
198.4 267.6 l
h
195.513 267.6 m
194.07 267.6 l
195.513 267.6 l
h
192.627 267.6 m
191.183 267.6 l
192.627 267.6 l
h
189.74 267.6 m
188.297 267.6 l
189.74 267.6 l
h
186.854 267.6 m
185.41 267.6 l
186.854 267.6 l
h
183.967 267.6 m
182.524 267.6 l
183.967 267.6 l
h
181.08 267.6 m
179.637 267.6 l
181.08 267.6 l
h
178.194 267.6 m
176.75 267.6 l
178.194 267.6 l
h
175.307 267.6 m
173.864 267.6 l
175.307 267.6 l
h
172.421 267.6 m
170.977 267.6 l
172.421 267.6 l
h
169.534 267.6 m
168.091 267.6 l
169.534 267.6 l
h
166.647 267.6 m
165.204 267.6 l
166.647 267.6 l
h
163.761 267.6 m
162.317 267.6 l
163.761 267.6 l
h
160.874 267.6 m
159.431 267.6 l
160.874 267.6 l
h
157.988 267.6 m
156.544 267.6 l
157.988 267.6 l
h
155.101 267.6 m
153.658 267.6 l
155.101 267.6 l
h
152.214 267.6 m
150.771 267.6 l
152.214 267.6 l
h
149.328 267.6 m
147.885 267.6 l
149.328 267.6 l
h
146.441 267.6 m
144.998 267.6 l
146.441 267.6 l
h
143.555 267.6 m
142.111 267.6 l
143.555 267.6 l
h
140.668 267.6 m
139.225 267.6 l
140.668 267.6 l
h
137.781 267.6 m
136.338 267.6 l
137.781 267.6 l
h
134.895 267.6 m
133.452 267.6 l
134.895 267.6 l
h
132.008 267.6 m
130.565 267.6 l
132.008 267.6 l
h
129.122 267.6 m
127.678 267.6 l
129.122 267.6 l
h
f
n
198.396 267.597 m
198.396 409.302 l
198.396 267.597 l
f
n
283.5 352.602 m
283.5 494.397 l
283.5 352.602 l
f
n
340.2 267.597 m
340.2 423.504 l
340.2 267.597 l
f
n
425.196 352.602 m
425.196 508.5 l
425.196 352.602 l
f
n
198.396 409.302 m
217.728 420.885 233.892 425.097 247.176 425.097 c
282.627 425.097 297.603 395.1 297.603 395.1 c
304.002 388.719 308.97 386.172 312.975 386.172 c
326.718 386.172 329.202 416.142 340.2 423.504 c
329.202 416.142 326.718 386.172 312.975 386.172 c
308.97 386.172 304.002 388.719 297.603 395.1 c
297.603 395.1 282.627 425.097 247.176 425.097 c
233.892 425.097 217.728 420.885 198.396 409.302 c
f
n
283.203 494.199 m
302.157 505.584 318.105 509.751 331.281 509.751 c
367.317 509.751 382.698 478.602 382.698 478.602 c
388.98 472.32 393.849 469.818 397.782 469.818 c
411.579 469.818 413.847 500.706 424.899 508.104 c
413.847 500.706 411.579 469.818 397.782 469.818 c
393.849 469.818 388.98 472.32 382.698 478.602 c
382.698 478.602 367.317 509.751 331.281 509.751 c
318.105 509.751 302.157 505.584 283.203 494.199 c
f
n
198.396 409.302 m
284.202 494.703 l
198.396 409.302 l
f
n
340.2 423.504 m
425.601 509.202 l
340.2 423.504 l
f
n
240.903 423.504 m
325.998 508.5 l
240.903 423.504 l
f
n
297.6 395.1 m
382.7 480.2 l
297.6 395.1 l
f
n
276.903 416.403 m
361.998 501.498 l
276.903 416.403 l
f
n
314.703 386.001 m
315.72 387.018 l
314.703 386.001 l
316.746 388.044 m
317.763 389.061 l
316.746 388.044 l
318.789 390.078 m
319.806 391.104 l
318.789 390.078 l
320.823 392.121 m
321.849 393.138 l
320.823 392.121 l
322.866 394.164 m
323.892 395.181 l
322.866 394.164 l
324.909 396.198 m
325.935 397.224 l
324.909 396.198 l
326.952 398.241 m
327.978 399.258 l
326.952 398.241 l
328.995 400.275 m
330.021 401.301 l
328.995 400.275 l
331.038 402.318 m
332.064 403.335 l
331.038 402.318 l
333.081 404.361 m
334.098 405.378 l
333.081 404.361 l
335.124 406.395 m
336.141 407.421 l
335.124 406.395 l
337.167 408.438 m
338.184 409.455 l
337.167 408.438 l
339.21 410.481 m
340.227 411.498 l
339.21 410.481 l
341.253 412.515 m
342.27 413.541 l
341.253 412.515 l
343.296 414.558 m
344.313 415.575 l
343.296 414.558 l
345.339 416.601 m
346.356 417.618 l
345.339 416.601 l
347.382 418.635 m
348.399 419.661 l
347.382 418.635 l
349.416 420.678 m
350.442 421.695 l
349.416 420.678 l
351.459 422.721 m
352.485 423.738 l
351.459 422.721 l
353.502 424.755 m
354.528 425.781 l
353.502 424.755 l
355.545 426.798 m
356.571 427.815 l
355.545 426.798 l
357.588 428.841 m
358.614 429.858 l
357.588 428.841 l
359.631 430.875 m
360.657 431.901 l
359.631 430.875 l
361.674 432.918 m
362.691 433.935 l
361.674 432.918 l
363.717 434.961 m
364.734 435.978 l
363.717 434.961 l
365.76 436.995 m
366.777 438.021 l
365.76 436.995 l
367.803 439.038 m
368.82 440.055 l
367.803 439.038 l
369.846 441.081 m
370.863 442.098 l
369.846 441.081 l
371.889 443.115 m
372.906 444.141 l
371.889 443.115 l
373.932 445.158 m
374.949 446.175 l
373.932 445.158 l
375.975 447.201 m
376.992 448.218 l
375.975 447.201 l
378.009 449.235 m
379.035 450.261 l
378.009 449.235 l
380.052 451.278 m
381.078 452.295 l
380.052 451.278 l
382.095 453.321 m
383.121 454.338 l
382.095 453.321 l
384.138 455.355 m
385.164 456.381 l
384.138 455.355 l
386.181 457.398 m
387.207 458.415 l
386.181 457.398 l
388.224 459.441 m
389.25 460.458 l
388.224 459.441 l
390.267 461.475 m
391.284 462.501 l
390.267 461.475 l
392.31 463.518 m
393.327 464.535 l
392.31 463.518 l
394.353 465.561 m
395.37 466.578 l
394.353 465.561 l
396.396 467.595 m
397.413 468.621 l
396.396 467.595 l
398.439 469.638 m
398.7 469.899 l
398.439 469.638 l
f
n
314.7 386.0 m
325.0 396.3 l
314.7 386.0 l
f
Q
n
199.296 351.099 m
214.902 351.099 l
214.902 366.498 l
199.296 366.498 l
199.296 351.099 l
q
eoclip
[/DeviceRGB] cs 0.0 0.0 0.0 sc
q
203.1 356.0 m
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XKLAAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N31 [12.1568 0.0 0.0 12.0 0.0 0.0] Tf
(\003) show
Q
q
%ADOBeginSubsetFont: TPDAAA+TimesNewRomanPSMT Initial
ct_T42Dict begin
0 0 0.637 0.676
 256 array 0 1 255 {1 index exch /.notdef put} for  /TPDAAA+TimesNewRomanPSMT
Type42DictBegin
[<00010000000b000b000b000b63767420a7d52f12000000bc000007c66670
676d74209d560000088400000631676c7966682c146500004cd40000032a
6865616428672d0e00000eb8000000366868656148fe790700000ef00000
0024686d74780c01650a00000f140000000a6c6f6361d001ad0000000f20
000000086d6178706510390500000f28000000206e616d654ac205c10000
0f4800002e7570726570a89b370200003dc000000f136764697200000000
0000000000000000058e0000054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000
000000250096009f002400f0013100c200c0004a00a60041005000940047
00cf00af000e007901cb00040023004400a80025011f0002004600170105
009900d9005c007200e500e00028004b00de011200240045007000160039
ffe90016004b0088ffb900d9000a004300ae00ba016c0153002f00430048
022c012b0025008fffc000170028ffcdffd80025009d00e50124ffb10048
009d00e600110027007f00910012006a00cafffc00000024006200a7017c
01e900210060008b0434048aff6b003b00b500d5014bff6b004d007905d8
09b5006c009100a3011701c0ffdfffe700be04010065007f008200880099
00b200c0022e034305a000200026003d004e00610065007b00d901130131
0340ff27ff42ff99004e00a700f2022b02c603070011002b0049005f008d
00a100af00d600e400f5010b0135019d01ab01ab01d101ee05d80000004b
0075007a0080009d00a600a700ac00b90131013102170217000200170029
00550080008f00a500b200b300d0014b015901c001c103a50530fe3fff14
ff15ffe7ffff002a00580099009f00c100e400f40130015901ab01ab0322
0374041e04740532fd81004d0064009c00d000d100d600de00e500f500f8
012a012a01e1027e027fff57ffa8ffe500000008001f00380051005a006f
0076007700a200c000c200c400f101fb0209027e02cf04c5057a05f0ff92
001200260042004b004f005100530064008b00ae00b200b800b800d600f5
0111012001310138014e01520167018f019601b801d901d9020602210271
02ea03b003cb03dc04360505ff3a00120016001e001f002300570068006c
007e0088009200a500a800c500c901150126012d013001d601d901f6023b
0244024402a302cf02de0385038f04fc0586fee0feebfefbff8a00070044
00470058007500aa00e400ef011601200129016a017301e3027e029002b4
030e0310032303350341035403590388039403c803ce047204ab04da0549
056105ab0761fe6efed1ff4bff84000000010006001e0027002c00340037
00620066006a006b006c007000700072007c0081008a008e0091009200a0
00ab00b800bf00c900d500dd00ec00f40100012101300169016a016d017c
0185018e018e019901ac01c101c501c901e101f601f601f6022202220228
0236023f02430246026702850285029402d002d602e8031c0363037f0380
0380039e03b603d90400040404ff053205320548058b05a706cb07280748
076208ccfcedfd2afd59fddefe00fe1afe5bfe96fec1fee7ff56ff790001
0025002d002e007c00870091009900a100a500a500aa00af00b600c600cc
00d700dd00ec00f201020105011701180123012a012c0131013f01470149
0149014d01510151015501550157015a015a0161016201680168017f0180
018201830184018d0195019501950198019901a501a901b601b601b701ba
01ba01d501df01e601ea01f2020002000203021702250227022f02390243
02430247024f025202520267026f026f027002720276027e02a702b302b9
02d603130325032d03610371039903ae03c203d403f90402042c042f043c
04560467048304cf04d104d804fb051f05450568059e05c2061b06340655
066a069806af06e806fc070607500762077c07d407ff082500ad00c700aa
00b5000000000000000000000000002f06cf01730514047802df009c0018
037005870155002500060254036c038e03d2056601f0032001da018a0369
036bffa3034602f8036f015602bf0122031f053a0366008c00ff01ab02e1
02f402e70415015402e90128049101b7026f034302060000000005d30415
048305e8000002d7003a027d01c002c503830383ffbd003a059e01df059e
02d1002004e0021300df01c001870297000000ce0269028b0058043405fb
0069015a01a905780182013e0288012a03d4049e00e5032302f301f00196
007a00cd014a0424025e023901ab00cf00fd011e00ed0171007001950040
01bb01dd01b8000101a803a7014c020c018d01b0020d0137010000cd0321
01d4030a00590000000001260215015002f0025503bc06d00335010100d0
00d2007a01030130007c000000000000000000fe006e006600940227002b
0045004d00d3013200180097004100f4febcffe9001605d8058b009100a1
032c00520030005d02cb003a009200e500e500580086003200ba00990088
00300298007cff8001640028004d0065000200b8016a002f010b00110017
0100007f00040016022200a6005f000000f8000a00ca0043004b01ee0077
012000f401c00028045f0000008c044500c20060007b008b008b0064005d
00c2009c009206b505d3004f011700000420fe9e00cc00dc005e004600e3
0032001a003c0091005a00a1042c0041002000490071009c009cfe480040
0040008600cb0102007d003a003e006a0050044800290096ff6a00970069
00e0004c001b00c90069ff970043ffbd0052ff83ff8b005fffa1ff5c0067
0053ffa8002a0076ffb20036008705590256052b043400de00c901c40048
00db018b00b3004800da01160125011800ea00ea00ae0000003e05bb008a
04d70053003fff8cffd500150028002200990062004a00e4006d00ee00e5
004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a0068ff6c
004f00bc00a5070500ab0080001e05a50025000040425554403f3e3d3c3b
3a393837363534333231302f2e2d2c2b2a292827262524232221201f1e1d
1c1b1a1918171614131211100f0e0d0c0b0a090807060504030201002c45
23466020b02660b004262348482d2c452346236120b02661b00426234848
2d2c45234660b0206120b04660b004262348482d2c4523462361b0206020
b02661b02061b004262348482d2c45234660b0406120b06660b004262348
482d2c4523462361b0406020b02661b04061b004262348482d2c0110203c
003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed5158
2320b04d44235920b09051582320b00d44235921212d2c20204518684420
b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b
4323430b2d2c00b0172370b101173e01b0172370b10217453ab10200080d
2d2c45b01a234445b01923442d2c2045b00325456164b050515845441b21
21592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b0
0643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c
642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b011
2bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a451869
20b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4
5959182d2cb0022546608a46b040618c482d2c4b53205c58b002855958b0
0185592d2c20b0032545b019234445b01a23444565234520b00325606a20
b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a4520
8a54582321b03f1b235961441cb114008a5279b31940201945208a545823
21b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c
0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011
432343650b2d2c4b525845441b2121592d2c0120b003252349b04060b020
6320b000525823b002253823b002256538008a63381b212121212159012d
2c4bb06451584569b00943608a103a1b212110592d2c01b005251023208a
f500b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b0
062510f500edec2d2c20b001600110203c003c2d2c20b001610110203c00
3c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c
76b802b023701020b802b04520b0005058b00161593a2f182d2c21210c64
23648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59
b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d
2c0c6423648bb84000626023212d2cb4000100000015b00826b00826b008
26b008260f10161345683ab001162d2cb4000100000015b00826b00826b0
0826b008260f1016134568653ab001162d2c4b53234b515a5820458a6044
1b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b21
21592d2c4b5458381b2121592d2c014b53234b515ab00225b00425b00625
4923451869525a58b00225b00225b00525462345696048592121212d2cb0
134358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b21
21592d2cb012435c580cb00425b00425060c6423646164b807085158b004
25b00425012046b01060482046b0106048590a21211b2121592d2cb01243
5c580cb00425b00425060c6423646164b807085158b00425b00425012046
b8fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b0
3a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515a
b012435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012
435c5a58381b2121592d2c462346608a8a462320468a608a61b8ff806223
2010238ab9035803588a70456020b0005058b00161b8ffba8b1bb0468c59
b0106068013a2d2cb1020042b123018851b1400188535a58b91000002088
5458b202010243604259b12401885158b920000040885458b20202024360
42b12401885458b2022002436042004b014b5258b2020802436042591bb9
40000080885458b202040243604259b94000008063b80100885458b20208
0243604259b94000010063b80200885458b202100243604259b940000200
63b80400885458b202400243604259595959592d2cb0024354584b53234b
515a58381b2121591b21212121592d00000000010000000300006e9aef01
5f0f3cf50819080000000000a2e31dc2000000000000000000000000051c
0568000000090001000000000000000100000721fe450057000000000000
00000001000000000000000000000000000000020639011c040000f0002c
00000000003b00ad0195000100000003001f00020000000000020010002f
0056000005ca0f130003000200000047035a000000030000000000fe0000
0000000300000001001e00fe0000000300000002000e011c000000030000
00030072012a0000000300000004001e019c0000000300000005001801ba
0000000300000006002201d2000000030000000700d801f4000000030000
0008002602cc0000000300000009008602f2000000030000000a05560378
000000030000000b007208ce000000030000000c00660940000000030000
000d06b409a6000000030000000e005c105a0001000000000000007f10b6
0001000000000001000f1135000100000000000200071144000100000000
00030039114b0001000000000004000f11840001000000000005000c1193
00010000000000060011119f0001000000000007006c11b0000100000000
00080013121c00010000000000090043122f000100000000000a02ab1272
000100000000000b0039151d000100000000000c00331556000100000000
000d035a1589000100000000000e002e18e30003000104030002000c1911
00030001040500020010191d0003000104060002000c192d000300010407
000200101939000300010408000200101949000300010409000000fe1959
0003000104090001001e1a570003000104090002000e1a75000300010409
000300721a830003000104090004001e1af5000300010409000500181b13
000300010409000600221b2b000300010409000700d81b4d000300010409
000800261c25000300010409000900861c4b000300010409000a05561cd1
000300010409000b00722227000300010409000c00662299000300010409
000d06b422ff000300010409000e005c29b300030001040a0002000c2a0f
00030001040b000200102a1b00030001040c0002000c2a2b00030001040e
0002000c2a370003000104100002000e2a43000300010413000200122a51
0003000104140002000c2a63000300010415000200102a6f000300010416
0002000c2a7f0003000104190002000e2a8b00030001041b000200102a99
00030001041d0002000c2aa900030001041f0002000c2ab5000300010424
0002000e2ac100030001042a0002000e2acf00030001042d0002000e2add
00030001080a0002000c2aeb0003000108160002000c2af7000300010c0a
0002000c2b03000300010c0c0002000c2b0f000300010f00000700002b1b
00540079007000650066006100630065002000a900200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e00200070006c0063002e00200044006100740061
002000a900200054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e00200070006c
0063002f005400790070006500200053006f006c007500740069006f006e
007300200049006e0063002e00200031003900390030002d003100390039
0032002e00200041006c006c002000520069006700680074007300200052
006500730065007200760065006400540069006d006500730020004e0065
007700200052006f006d0061006e0052006500670075006c00610072004d
006f006e006f0074007900700065003a00540069006d006500730020004e
0065007700200052006f006d0061006e00200052006500670075006c0061
0072003a00560065007200730069006f006e00200033002e003000300020
0028004d006900630072006f0073006f00660074002900540069006d0065
00730020004e0065007700200052006f006d0061006e0056006500720073
0069006f006e00200033002e0030003000540069006d00650073004e0065
00770052006f006d0061006e00500053004d005400540069006d00650073
0020004e0065007700200052006f006d0061006e00ae0020005400720061
00640065006d00610072006b0020006f006600200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c00630020007200650067006900730074
006500720065006400200069006e00200074006800650020005500530020
0050006100740020002600200054004d0020004f00660066002e00200061
006e006400200065006c0073006500770068006500720065002e004d006f
006e006f00740079007000650020005400790070006f0067007200610070
00680079004d006f006e006f007400790070006500200054007900700065
002000440072006100770069006e00670020004f00660066006900630065
0020002d0020005300740061006e006c006500790020004d006f00720069
0073006f006e002c00200056006900630074006f00720020004c00610072
00640065006e007400200031003900330032005400680069007300200072
0065006d00610072006b00610062006c0065002000740079007000650066
006100630065002000660069007200730074002000610070007000650061
00720065006400200069006e0020003100390033003200200069006e0020
005400680065002000540069006d006500730020006f00660020004c006f
006e0064006f006e0020006e00650077007300700061007000650072002c
00200066006f007200200077006800690063006800200069007400200077
00610073002000640065007300690067006e00650064002e002000200049
00740020006800610073002000730075006200730065007100750065006e
0074006c00790020006200650063006f006d00650020006f006e00650020
006f0066002000740068006500200077006f0072006c006400730020006d
006f007300740020007300750063006300650073007300660075006c0020
00740079007000650020006300720065006100740069006f006e0073002e
002000200054006800650020006f0072006900670069006e0061006c0020
00640072006100770069006e00670073002000770065007200650020006d
00610064006500200075006e0064006500720020005300740061006e006c
006500790020004d006f007200690073006f006e00270073002000640069
00720065006300740069006f006e00200062007900200056006900630074
006f00720020004c0061007200640065006e007400200061007400200054
00680065002000540069006d00650073002e002000200049007400200074
00680065006e002000770065006e00740020007400680072006f00750067
006800200061006e00200065007800740065006e00730069007600650020
006900740065007200610074006900760065002000700072006f00630065
0073007300200069006e0076006f006c00760069006e0067002000660075
0072007400680065007200200077006f0072006b00200069006e0020004d
006f006e006f007400790070006500270073002000540079007000650020
00440072006100770069006e00670020004f00660066006900630065002e
00200020004200610073006500640020006f006e00200065007800700065
00720069006d0065006e007400730020004d006f007200690073006f006e
002000680061006400200063006f006e0064007500630074006500640020
007500730069006e00670020005000650072007000650074007500610020
0061006e006400200050006c0061006e00740069006e002c002000690074
00200068006100730020006d0061006e00790020006f006c006400200073
00740079006c006500200063006800610072006100630074006500720069
007300740069006300730020006200750074002000770061007300200061
00640061007000740065006400200074006f002000670069007600650020
0065007800630065006c006c0065006e00740020006c0065006700690062
0069006c00690074007900200063006f00750070006c0065006400200077
00690074006800200067006f006f0064002000650063006f006e006f006d
0079002e002000200057006900640065006c007900200075007300650064
00200069006e00200062006f006f006b007300200061006e00640020006d
006100670061007a0069006e00650073002c00200066006f007200200072
00650070006f007200740073002c0020006f006600660069006300650020
0064006f00630075006d0065006e0074007300200061006e006400200061
006c0073006f00200066006f007200200064006900730070006c00610079
00200061006e00640020006100640076006500720074006900730069006e
0067002e0068007400740070003a002f002f007700770077002e006d006f
006e006f0074007900700065002e0063006f006d002f00680074006d006c
002f006d0074006e0061006d0065002f006d0073005f00740069006d0065
0073006e006500770072006f006d0061006e002e00680074006d006c0068
007400740070003a002f002f007700770077002e006d006f006e006f0074
007900700065002e0063006f006d002f00680074006d006c002f006d0074
006e0061006d0065002f006d0073005f00770065006c0063006f006d0065
002e00680074006d006c004e004f00540049004600490043004100540049
004f004e0020004f00460020004c004900430045004e0053004500200041
0047005200450045004d0045004e0054000d000a000d000a005400680069
007300200074007900700065006600610063006500200069007300200074
00680065002000700072006f007000650072007400790020006f00660020
004d006f006e006f00740079007000650020005400790070006f00670072
006100700068007900200061006e00640020006900740073002000750073
006500200062007900200079006f007500200069007300200063006f0076
006500720065006400200075006e00640065007200200074006800650020
007400650072006d00730020006f0066002000610020006c006900630065
006e00730065002000610067007200650065006d0065006e0074002e0020
0059006f0075002000680061007600650020006f0062007400610069006e
006500640020007400680069007300200074007900700065006600610063
006500200073006f00660074007700610072006500200065006900740068
006500720020006400690072006500630074006c0079002000660072006f
006d0020004d006f006e006f00740079007000650020006f007200200074
006f0067006500740068006500720020007700690074006800200073006f
006600740077006100720065002000640069007300740072006900620075
0074006500640020006200790020006f006e00650020006f00660020004d
006f006e006f0074007900700065002700730020006c006900630065006e
0073006500650073002e000d000a000d000a005400680069007300200073
006f00660074007700610072006500200069007300200061002000760061
006c007500610062006c00650020006100730073006500740020006f0066
0020004d006f006e006f0074007900700065002e00200055006e006c0065
0073007300200079006f00750020006800610076006500200065006e0074
006500720065006400200069006e0074006f002000610020007300700065
006300690066006900630020006c006900630065006e0073006500200061
0067007200650065006d0065006e00740020006700720061006e00740069
006e006700200079006f00750020006100640064006900740069006f006e
0061006c0020007200690067006800740073002c00200079006f00750072
00200075007300650020006f00660020007400680069007300200073006f
0066007400770061007200650020006900730020006c0069006d00690074
0065006400200074006f00200079006f0075007200200077006f0072006b
00730074006100740069006f006e00200066006f007200200079006f0075
00720020006f0077006e0020007000750062006c0069007300680069006e
00670020007500730065002e00200059006f00750020006d006100790020
006e006f007400200063006f007000790020006f00720020006400690073
00740072006900620075007400650020007400680069007300200073006f
006600740077006100720065002e000d000a000d000a0049006600200079
006f00750020006800610076006500200061006e00790020007100750065
007300740069006f006e00200063006f006e006300650072006e0069006e
006700200079006f00750072002000720069006700680074007300200079
006f0075002000730068006f0075006c0064002000720065007600690065
007700200074006800650020006c006900630065006e0073006500200061
0067007200650065006d0065006e007400200079006f0075002000720065
006300650069007600650064002000770069007400680020007400680065
00200073006f0066007400770061007200650020006f007200200063006f
006e00740061006300740020004d006f006e006f00740079007000650020
0066006f00720020006100200063006f007000790020006f006600200074
006800650020006c006900630065006e0073006500200061006700720065
0065006d0065006e0074002e000d000a000d000a004d006f006e006f0074
007900700065002000630061006e00200062006500200063006f006e0074
00610063007400650064002000610074003a000d000a000d000a00550053
00410020002d0020002800380034003700290020003700310038002d0030
003400300030000900090055004b0020002d002000300031003100340034
0020003000310037003300370020003700360035003900350039000d000a
0068007400740070003a002f002f007700770077002e006d006f006e006f
0074007900700065002e0063006f006d0068007400740070003a002f002f
007700770077002e006d006f006e006f0074007900700065002e0063006f
006d002f00680074006d006c002f0074007900700065002f006c00690063
0065006e00730065002e00680074006d006c547970656661636520a92054
6865204d6f6e6f7479706520436f72706f726174696f6e20706c632e2044
61746120a920546865204d6f6e6f7479706520436f72706f726174696f6e
20706c632f5479706520536f6c7574696f6e7320496e632e20313939302d
313939322e20416c6c2052696768747320526573657276656454696d6573
204e657720526f6d616e526567756c61724d6f6e6f747970653a54696d65
73204e657720526f6d616e20526567756c61723a56657273696f6e20332e
303020284d6963726f736f66742954696d6573204e657720526f6d616e56
657273696f6e20332e303054696d65734e6577526f6d616e50534d545469
6d6573204e657720526f6d616ea82054726164656d61726b206f66205468
65204d6f6e6f7479706520436f72706f726174696f6e20706c6320726567
6973746572656420696e2074686520555320506174202620544d204f6666
2e20616e6420656c736577686572652e4d6f6e6f74797065205479706f67
72617068794d6f6e6f7479706520547970652044726177696e67204f6666
696365202d205374616e6c6579204d6f7269736f6e2c20566963746f7220
4c617264656e742031393332546869732072656d61726b61626c65207479
70656661636520666972737420617070656172656420696e203139333220
696e205468652054696d6573206f66204c6f6e646f6e206e657773706170
65722c20666f72207768696368206974207761732064657369676e65642e
20204974206861732073756273657175656e746c79206265636f6d65206f
6e65206f662074686520776f726c6473206d6f7374207375636365737366
756c2074797065206372656174696f6e732e2020546865206f726967696e
616c2064726177696e67732077657265206d61646520756e646572205374
616e6c6579204d6f7269736f6e277320646972656374696f6e2062792056
6963746f72204c617264656e74206174205468652054696d65732e202049
74207468656e2077656e74207468726f75676820616e20657874656e7369
7665206974657261746976652070726f6365737320696e766f6c76696e67
206675727468657220776f726b20696e204d6f6e6f747970652773205479
70652044726177696e67204f66666963652e20204261736564206f6e2065
78706572696d656e7473204d6f7269736f6e2068616420636f6e64756374
6564207573696e6720506572706574756120616e6420506c616e74696e2c
20697420686173206d616e79206f6c64207374796c652063686172616374
65726973746963732062757420776173206164617074656420746f206769
766520657863656c6c656e74206c65676962696c69747920636f75706c65
64207769746820676f6f642065636f6e6f6d792e2020576964656c792075
73656420696e20626f6f6b7320616e64206d6167617a696e65732c20666f
72207265706f7274732c206f666669636520646f63756d656e747320616e
6420616c736f20666f7220646973706c617920616e642061647665727469
73696e672e687474703a2f2f7777772e6d6f6e6f747970652e636f6d2f68
746d6c2f6d746e616d652f6d735f74696d65736e6577726f6d616e2e6874
6d6c687474703a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c
2f6d746e616d652f6d735f77656c636f6d652e68746d6c4e4f5449464943
4154494f4e204f46204c4943454e53452041475245454d454e540d0a0d0a
54686973207479706566616365206973207468652070726f706572747920
6f66204d6f6e6f74797065205479706f67726170687920616e6420697473
2075736520627920796f7520697320636f766572656420756e6465722074
6865207465726d73206f662061206c6963656e73652061677265656d656e
742e20596f752068617665206f627461696e656420746869732074797065
6661636520736f66747761726520656974686572206469726563746c7920
66726f6d204d6f6e6f74797065206f7220746f6765746865722077697468
20736f667477617265206469737472696275746564206279206f6e65206f
66204d6f6e6f747970652773206c6963656e736565732e0d0a0d0a546869
7320736f66747761726520697320612076616c7561626c65206173736574
206f66204d6f6e6f747970652e20556e6c65737320796f75206861766520
656e746572656420696e746f2061207370656369666963206c6963656e73
652061677265656d656e74206772616e74696e6720796f75206164646974
696f6e616c207269676874732c20796f757220757365206f662074686973
20736f667477617265206973206c696d6974656420746f20796f75722077
6f726b73746174696f6e20666f7220796f7572206f776e207075626c6973
68696e67207573652e20596f75206d6179206e6f7420636f7079206f7220
64697374726962757465207468697320736f6674776172652e0d0a0d0a49
6620796f75206861766520616e79207175657374696f6e20636f6e636572
6e696e6720796f75722072696768747320796f752073686f756c64207265
7669657720746865206c6963656e73652061677265656d656e7420796f75
20726563656976656420776974682074686520736f667477617265206f72
20636f6e74616374204d6f6e6f7479706520666f72206120636f7079206f
6620746865206c6963656e73652061677265656d656e742e0d0a0d0a4d6f
6e6f747970652063616e20626520636f6e7461637465642061743a0d0a0d
0a555341202d202838343729203731382d303430300909554b202d203031
313434203031373337203736353935390d0a687474703a2f2f7777772e6d
6f6e6f747970652e636f6d687474703a2f2f7777772e6d6f6e6f74797065
2e636f6d2f68746d6c2f747970652f6c6963656e73652e68746d6c004e00
6f0072006d0061006c006f00620079010d0065006a006e00e9006e006f00
72006d0061006c005300740061006e0064006100720064039a03b103bd03
bf03bd03b903ba03ac00540079007000650066006100630065002000a900
200054006800650020004d006f006e006f00740079007000650020004300
6f00720070006f0072006100740069006f006e00200070006c0063002e00
200044006100740061002000a900200054006800650020004d006f006e00
6f007400790070006500200043006f00720070006f007200610074006900
6f006e00200070006c0063002f005400790070006500200053006f006c00
7500740069006f006e007300200049006e0063002e002000310039003900
30002d0031003900390032002e00200041006c006c002000520069006700
680074007300200052006500730065007200760065006400540069006d00
6500730020004e0065007700200052006f006d0061006e00520065006700
75006c00610072004d006f006e006f0074007900700065003a0054006900
6d006500730020004e0065007700200052006f006d0061006e0020005200
6500670075006c00610072003a00560065007200730069006f006e002000
33002e0030003000200028004d006900630072006f0073006f0066007400
2900540069006d006500730020004e0065007700200052006f006d006100
6e00560065007200730069006f006e00200033002e003000300054006900
6d00650073004e006500770052006f006d0061006e00500053004d005400
540069006d006500730020004e0065007700200052006f006d0061006e00
ae002000540072006100640065006d00610072006b0020006f0066002000
54006800650020004d006f006e006f007400790070006500200043006f00
720070006f0072006100740069006f006e00200070006c00630020007200
650067006900730074006500720065006400200069006e00200074006800
6500200055005300200050006100740020002600200054004d0020004f00
660066002e00200061006e006400200065006c0073006500770068006500
720065002e004d006f006e006f0074007900700065002000540079007000
6f006700720061007000680079004d006f006e006f007400790070006500
200054007900700065002000440072006100770069006e00670020004f00
6600660069006300650020002d0020005300740061006e006c0065007900
20004d006f007200690073006f006e002c00200056006900630074006f00
720020004c0061007200640065006e007400200031003900330032005400
6800690073002000720065006d00610072006b00610062006c0065002000
740079007000650066006100630065002000660069007200730074002000
61007000700065006100720065006400200069006e002000310039003300
3200200069006e0020005400680065002000540069006d00650073002000
6f00660020004c006f006e0064006f006e0020006e006500770073007000
61007000650072002c00200066006f007200200077006800690063006800
20006900740020007700610073002000640065007300690067006e006500
64002e002000200049007400200068006100730020007300750062007300
65007100750065006e0074006c00790020006200650063006f006d006500
20006f006e00650020006f0066002000740068006500200077006f007200
6c006400730020006d006f00730074002000730075006300630065007300
7300660075006c0020007400790070006500200063007200650061007400
69006f006e0073002e002000200054006800650020006f00720069006700
69006e0061006c002000640072006100770069006e006700730020007700
65007200650020006d00610064006500200075006e006400650072002000
5300740061006e006c006500790020004d006f007200690073006f006e00
27007300200064006900720065006300740069006f006e00200062007900
200056006900630074006f00720020004c0061007200640065006e007400
20006100740020005400680065002000540069006d00650073002e002000
20004900740020007400680065006e002000770065006e00740020007400
680072006f00750067006800200061006e00200065007800740065006e00
730069007600650020006900740065007200610074006900760065002000
700072006f006300650073007300200069006e0076006f006c0076006900
6e00670020006600750072007400680065007200200077006f0072006b00
200069006e0020004d006f006e006f007400790070006500270073002000
54007900700065002000440072006100770069006e00670020004f006600
66006900630065002e00200020004200610073006500640020006f006e00
20006500780070006500720069006d0065006e007400730020004d006f00
7200690073006f006e002000680061006400200063006f006e0064007500
630074006500640020007500730069006e00670020005000650072007000
6500740075006100200061006e006400200050006c0061006e0074006900
6e002c00200069007400200068006100730020006d0061006e0079002000
6f006c00640020007300740079006c006500200063006800610072006100
630074006500720069007300740069006300730020006200750074002000
77006100730020006100640061007000740065006400200074006f002000
6700690076006500200065007800630065006c006c0065006e0074002000
6c00650067006900620069006c00690074007900200063006f0075007000
6c006500640020007700690074006800200067006f006f00640020006500
63006f006e006f006d0079002e002000200057006900640065006c007900
20007500730065006400200069006e00200062006f006f006b0073002000
61006e00640020006d006100670061007a0069006e00650073002c002000
66006f00720020007200650070006f007200740073002c0020006f006600
6600690063006500200064006f00630075006d0065006e00740073002000
61006e006400200061006c0073006f00200066006f007200200064006900
730070006c0061007900200061006e006400200061006400760065007200
74006900730069006e0067002e0068007400740070003a002f002f007700
770077002e006d006f006e006f0074007900700065002e0063006f006d00
2f00680074006d006c002f006d0074006e0061006d0065002f006d007300
5f00740069006d00650073006e006500770072006f006d0061006e002e00
680074006d006c0068007400740070003a002f002f007700770077002e00
6d006f006e006f0074007900700065002e0063006f006d002f0068007400
6d006c002f006d0074006e0061006d0065002f006d0073005f0077006500
6c0063006f006d0065002e00680074006d006c004e004f00540049004600
490043004100540049004f004e0020004f00460020004c00490043004500
4e00530045002000410047005200450045004d0045004e0054000d000a00
0d000a005400680069007300200074007900700065006600610063006500
20006900730020007400680065002000700072006f007000650072007400
790020006f00660020004d006f006e006f00740079007000650020005400
790070006f00670072006100700068007900200061006e00640020006900
740073002000750073006500200062007900200079006f00750020006900
7300200063006f0076006500720065006400200075006e00640065007200
200074006800650020007400650072006d00730020006f00660020006100
20006c006900630065006e00730065002000610067007200650065006d00
65006e0074002e00200059006f0075002000680061007600650020006f00
62007400610069006e006500640020007400680069007300200074007900
700065006600610063006500200073006f00660074007700610072006500
200065006900740068006500720020006400690072006500630074006c00
79002000660072006f006d0020004d006f006e006f007400790070006500
20006f007200200074006f00670065007400680065007200200077006900
74006800200073006f006600740077006100720065002000640069007300
7400720069006200750074006500640020006200790020006f006e006500
20006f00660020004d006f006e006f007400790070006500270073002000
6c006900630065006e0073006500650073002e000d000a000d000a005400
680069007300200073006f00660074007700610072006500200069007300
200061002000760061006c007500610062006c0065002000610073007300
6500740020006f00660020004d006f006e006f0074007900700065002e00
200055006e006c00650073007300200079006f0075002000680061007600
6500200065006e0074006500720065006400200069006e0074006f002000
610020007300700065006300690066006900630020006c00690063006500
6e00730065002000610067007200650065006d0065006e00740020006700
720061006e00740069006e006700200079006f0075002000610064006400
6900740069006f006e0061006c0020007200690067006800740073002c00
200079006f0075007200200075007300650020006f006600200074006800
69007300200073006f006600740077006100720065002000690073002000
6c0069006d006900740065006400200074006f00200079006f0075007200
200077006f0072006b00730074006100740069006f006e00200066006f00
7200200079006f007500720020006f0077006e0020007000750062006c00
69007300680069006e00670020007500730065002e00200059006f007500
20006d006100790020006e006f007400200063006f007000790020006f00
720020006400690073007400720069006200750074006500200074006800
69007300200073006f006600740077006100720065002e000d000a000d00
0a0049006600200079006f00750020006800610076006500200061006e00
790020007100750065007300740069006f006e00200063006f006e006300
650072006e0069006e006700200079006f00750072002000720069006700
680074007300200079006f0075002000730068006f0075006c0064002000
720065007600690065007700200074006800650020006c00690063006500
6e00730065002000610067007200650065006d0065006e00740020007900
6f0075002000720065006300650069007600650064002000770069007400
68002000740068006500200073006f006600740077006100720065002000
6f007200200063006f006e00740061006300740020004d006f006e006f00
7400790070006500200066006f00720020006100200063006f0070007900
20006f006600200074006800650020006c006900630065006e0073006500
2000610067007200650065006d0065006e0074002e000d000a000d000a00
4d006f006e006f0074007900700065002000630061006e00200062006500
200063006f006e007400610063007400650064002000610074003a000d00
0a000d000a0055005300410020002d002000280038003400370029002000
3700310038002d0030003400300030000900090055004b0020002d002000
300031003100340034002000300031003700330037002000370036003500
3900350039000d000a0068007400740070003a002f002f00770077007700
2e006d006f006e006f0074007900700065002e0063006f006d0068007400
740070003a002f002f007700770077002e006d006f006e006f0074007900
700065002e0063006f006d002f00680074006d006c002f00740079007000
65002f006c006900630065006e00730065002e00680074006d006c004e00
6f0072006d0061006c004e006f0072006d00610061006c0069004e006f00
72006d0061006c004e006f0072006d00e1006c004e006f0072006d006100
6c0065005300740061006e00640061006100720064004e006f0072006d00
61006c004e006f0072006d0061006c006e0079004e006f0072006d006100
6c041e0431044b0447043d044b0439004e006f0072006d00e1006c006e00
65004e006f0072006d0061006c004e006f0072006d0061006c004e006100
7600610064006e006f0074006801b001a10300006e006700410072007200
75006e00740061004e006f0072006d0061006c004e006f0072006d006100
6c004e006f0072006d0061006c004e006f0072006d0061006c000000ba00
54ffc003e1b345453240b803e1b32b2e3240b803e1b2282932b9ffc003e1
b21a1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003deb2424232
b9ffc003deb2363832b9ffc003deb32a2d32df410a03de00ef03de000203
de03df0028001fffc003dfb3282e32f0410d03df0001037e000f0101001f
00a003dd00b003dd0002004003dab32426329fbf03cc000103ca03c90064
001fffc003c9b20d1132410a03c703b70012001f03b603b50064001fffc0
03b5b30e1132004173038d000100c0038d00d0038d00e0038d00f0038d00
04006f03a7007f03a7008f03a700af03a70004000f03a7001f03a7002f03
a7004f03a7000403ab03ab00ef03a50001000f03a5002f03a5006f03a500
8f03a50004005403aa0001006b03aa000103a8036a0022001f038c039400
15001f038b03930015001f03a40393001a001f03a20394001e001f03a103
93001e001f039f0394001e001f039b0394001a001f039a0393001e001f03
9903940016001f039803940016001f03970393001b001f03960394001b00
1f03950393001b001f03760375001a001f03740375001a001f03a00373b2
1e1f10411e03930020039300300393000300200394003003940040039400
030000039400010383036c001e001f03b1036c0032001f036d036c003200
1fffc0037db2212332b9ffc0037db3171932a0410a037d00b0037d00c003
7d00d0037d0004ffc0037cb2212332b9ffc0037cb3171932a0412d037c00
b0037c00c0037c00d0037c00040030037300400373000200000373001003
7300200373000300e0037300f00373000200b0037300c0037300d0037300
03008403730090037300a0037300030377036a0029001f0389036ab2281f
40b80367b33940323fbb0366000100400366b3191d328fbb036600010040
0366b3090a3240b80366b3090e3240b80366b3090f323fbb036500010040
0365b3090c3240b80365b31a1d3240b80365b3090e326b410e0363007b03
6300020014036300240363003403630044036300040363b2242f1fba034e
006d0800400e1f7f027f037f047f050430440112bf033200500800001f00
12032d003c080040291f5f3c013760097009800903100920093009400950
09056f037f038f03031f032f033f034f035f0305b8ffc0b2073a33b8ffc0
4047063a33900ba00bb00bc00bd00b05b006c006d006e006f00605200630
06400650066006700680069006a006099006900702600b700b800b03100b
200b300b400b500b051f0701a04185036200010000036200100362007003
6200900362000400f0035f00010020035e0020035f0030035f0040035e00
040000035e0000035f0010035f00d0035e00e0035f00050010030f002003
0f0030030f00d0030f00e0030f00050000030f0010030f0050030f006003
0f0070030f00d0030f00060000030f0010030f0020030f0030030f00e003
0f00f0030f0006030f00270000030e0030030e000200e0030e00f0030e00
02030e004a00e0030d00f0030d0002030d002700d002fc0001001002fc00
2002fc005002fc000300d002fc00e002fc0002000002fc001002fc002002
fc003002fc005002fc006002fc000600e002fc00f002fc0002002002fc00
3002fc004002fc000302fc406127c02901b02901a02901902901403c3f41
3240223f41321212125f235f255f285fa5046f236f256f286fa5044f234f
254f284fa5043f233f253f283fa5042f232f252f282fa5041f231f251f28
1fa5048f4caf4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8ff
c0b3b2222532b8ffc0b5b2191a32370f413b02af0001005f02af009f02af
00df02af0003001f02af002f02af003f02af006f02af000402af02af001f
02ad002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f02ad
001f02ad003f02ad005f02ad009f02ad0005005f02ad00df02ad0002000f
02ad001f02ad003f02ad0003004002acb23a334f414a02ac005f02ac009f
02ac0003002f02ac003f02ac0002000f02ac003f02ac00af02ac000300b0
02ac00e002ac0002004f02ac005f02ac00a002ac0003001f02ac002f02ac
003f02ac0003000f035a0001000f035a001f035a003f035a005f035a0070
035a000500cf035700df03570002000f0357001f03570070035700af0357
0004035a035a0357035702ad02ad02ac02ac032c400d31151f0016160000
00121108104110020c004a000d01a8004a000d0198004a000d0189004a00
0d013f004a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe02280041
000d01940041000d0121400b410db4410d4f410d29410d41100217002100
0d02150021000d02060021000d01eb0021000d014e0021000d012c401421
0df9210df3210df1210d9d210d71210d3d210d4110021c001f000d021400
1f000d020b001f000d0196001f000d014a001f000d0126400b1f0dc61f0d
571f0d371f0d410d019e0141000d00420141000d001e0141000d001b0141
000d01f2b40f440f0009bb01f20044000d0201b23c291fb80200b23c291f
b801ffb23c411fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc01
f9010f0101001f01f6b224e41f411501f401490401001f01f30149040100
1f01f1014900ab001f01f001490067001f01a6003c0125001f01a4b23c81
1f411501a3010f019a001f01a200220801001f01a100500401001f019f01
49019a001f019d01490067001f019cb22c621fb8019bb22c791fbc019a00
2c0101001f0197b22ce41fb80193b22c891fb80192b22c6c1fb8018fb225
9e1fb8016ab23c2a1f4111016700240201001f0163002502ab001f014c01
0f019a001f01480149006c001f0147b22c891fb80145b22c9e1fb80144b2
2c791fb80143b223311fb80127b23c811fbc012300500101001f011fb223
e41f4115011d0023019a001f011c00230801001f011b00250801001f010e
010f0401001f010d00220401001f0108b223811fb80106b425e41ff73cbb
0125001f00f5010fb29e1fe3bc01490156001f00e20149b2ab1fd1b90149
0401b21fcf2cb80125b61fce23bb1fc524b80156b21fc02cb80801b21fbf
2cb80201b51fb124e41fb0b901490201b61faf2c671fad23b80801b21fa5
23b80201400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f00
6d010f0156400b1f592c3e1f4c3cab1f4625b80101b21f403cb80125400a
1f3a23721f393cab1f38b80149b3ab1f3124b80401b21f3025b802abb61f
2a24e41f2623b80156b21f5537ba023500070175402c0774076207560751
073b0733072d0720071d071c071408120810080e080c080a080808060804
080208000814b8ffe0402b00000100140610000001000604000001000410
000001001002000001000200000001000002010802004a00b013034b024b
534201b0124b004b5442b0372b4bb807ff52b0382b4bb008505b58b10101
8e59b0382bb00288b801005458b801ffb101018e851bb0124358b9000101
2f858d1bb90001017c858d5959014bb0c063004b6220b0f65323b8010a51
5ab0052342180016763f183f123e113946443e113946443e113946443e11
3946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b
2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d59
4bb04753205c58b90271026f4544b90270026f45445958b9017a02714552
58b90271017a4459594bb04753205c58b9002202704544b9003c02704544
5958b901b30022455258b9002201b34459594bb04c53205c58b901490022
4544b1222245445958b901c20149455258b9014901c24459594bb0675320
5c58b9002402714544b90050027145445958b9021e0024455258b9002402
1e4459594bb8020153205c58b9010f00224544b1222245445958b90c0001
0f455258b9010f0c004459594bb01c53205c58b125254544b12c25454459
58b13725455258b125374459594bb0ab53205c58b125254544b123254544
5958b901590025455258b9002501594459594bb8010153205c58b1252545
44b1282545445958b902080025455258b9002502084459592b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361dc
6463456523456023456560234560b08b766818b080622020b164dc456523
4520b003266062636820b003266165b0dc236544b064234420b161634565
234520b003266062636820b003266165b063236544b0612344b100634554
58b163406544b26140614523614459b3a67f434b45652345602345656023
4560b089766818b080622020b1437f4565234520b003266062636820b003
266165b07f236544b043234420b1a64b4565234520b003266062636820b0
03266165b04b236544b0a62344b1004b455458b14b406544b2a640a64523
6144594b5242014b5058b108004259435c58b108004259b3020b0a124358
601b2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c
2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b0
0f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342
002b0018456944456944456944456944737373747373737475752b737374
7475184569447373742b4bb021534bb046515a58b03cb03c45b040604459
012b2b2b2b757575757575757543584010bf3ccf3c026f3c7f3c8f3c9f3c
af3c0575755943584012bf22cf22025f226f227f228f229f22af22067575
59435c58b6403c9f22ef220375592b2b0174747474454473737474757545
4473454473744544737475737373737300757575737575752b2b75757575
2b752b435841220063032d00010003032d0013032d0023032d0033032d00
53032d000500c3032d00d3032d00e3032d00f3032d00040083032d009303
2d00a3032d00b3032d0004032d032d4518694474747575592b4358b90018
0332b330353238b80332b361663238b80332b3535a3238b80332b3454e32
38b80332b33c413218b80332b23f330a410f0332000100ba033200ca0332
00da033200ea033200fa03320005033203324518694474752b2b2b2b2b2b
597300732b012b7575002b2b2b74002b2b2b732b74012b002b2b01737373
7474732b2b00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b2b
2b2b2b2b2b2b00017375007373004569440073730173742b2b2b2b2b732b
00732b752b2b732b2b2b2b2b2b2b2b2b2b0000>
[811 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>TPDAAA+TimesNewRomanPSMT AddT42Char 
TPDAAA+TimesNewRomanPSMT /CharStrings get begin
end
end
%ADOEndSubsetFont
[/N26 (TPDAAA+TimesNewRomanPSMT) -1 TZ
208.4 353.0 m
%ADOBeginSubsetFont: TPDAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TPDAAA+TimesNewRomanPSMT gcheck setglobal} if
1 118 1 <000100f000000306056800160097401440186018a018e018040018401802
76008600020e411301690141000901a00022000301690141000801a00023
000001f8000f016900160141000001f2400e010f0f020902010509080c02
0300ba01f70003014940120e0e0f401135300f7f0f900fa00f040f1917ba
022401e400182b4e10f45d2b3c4d10ede4103c003f3c3f3c111239011139
00f5edfc01f52b2b3130005d01715d13253311141616171521353e023511
34272626232207f0014a21133c5cfe026038160a07251a254204c7a1fb87
72381e022525021d317a02dc942a201e1f00>TPDAAA+TimesNewRomanPSMT AddT42Char 
TPDAAA+TimesNewRomanPSMT /CharStrings get begin
/g1 1 def
end
TPDAAA+TimesNewRomanPSMT /Encoding get
dup 1 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N26 [7.2941 0.0 0.0 7.2 0.0 0.0] Tf
(\001) show
Q
Q
n
108.0 263.601 m
123.498 263.601 l
123.498 279.0 l
108.0 279.0 l
108.0 263.601 l
q
eoclip
[/DeviceRGB] cs 0.0 0.0 0.0 sc
q
111.7 268.5 m
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XKLAAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N31 [11.923 0.0 0.0 12.0 0.0 0.0] Tf
(\003) show
Q
q
117.0 265.5 m
%ADOBeginSubsetFont: TPDAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TPDAAA+TimesNewRomanPSMT gcheck setglobal} if
1 346 2 <0001002c000003ab0568001e0168408207180b3917181c3d3418401c3d34
19401c3d340f1e161629073c074907a9070640205b045a085b175a186b08
741174129c0b9d0e9911ac0bac0ec905c917c818d917d918e020f904f917
1515011d0419051b15191619171d180709170b180b1d3419471989178f20
0718190202171a190c19060d031902050618171615140713040db8016840
090940140c3f80090109b80333400c10051a8f19019f19af190219ba0333
0003018db301020c1eb8018d400d0006e24f135f136f137f130413b80107
4013400001001a002040208020036020a020022019bb01f90003000d0140
40145f026f027f028f02bf02cf02df02ef020802191fba018e010100182b
4e10f45d4de43ced4e105d71f65d4df45ded10ed003f3cedfd5d713c3ffd
71b10602435458b78f0901bf09cf0902005d71592be41112173911123901
111239390210b10602435458b47d198d1902005d590e3c8710057dc40ec4
31300171725d005d012b2b2b002b01032135000035342623220607233636
33321615140706070207213236363703ab5ffce0016101209e6e649f2625
19cf9ba5dd304aa6f93e01626c57461a0105fefb2501420198a981a67571
b9c6d4906767a2b5fef03810312d>TPDAAA+TimesNewRomanPSMT AddT42Char 
TPDAAA+TimesNewRomanPSMT /CharStrings get begin
/g2 2 def
end
TPDAAA+TimesNewRomanPSMT /Encoding get
dup 2 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N26 [7.15378 0.0 0.0 7.2 0.0 0.0] Tf
(\002) show
Q
Q
n
309.6 366.804 m
325.701 366.804 l
325.701 382.302 l
309.6 382.302 l
309.6 366.804 l
q
eoclip
[/DeviceRGB] cs 0.0 0.0 0.0 sc
q
313.4 371.8 m
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XKLAAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N31 [12.075 0.0 0.0 12.0 0.0 0.0] Tf
(\001) show
Q
q
319.4 368.8 m
%ADOBeginSubsetFont: TPDAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TPDAAA+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N26 [7.245 0.0 0.0 7.2 0.0 0.0] Tf
(\001) show
Q
Q
n
452.601 381.501 m
468.999 381.501 l
468.999 396.999 l
452.601 396.999 l
452.601 381.501 l
q
eoclip
[/DeviceRGB] cs 0.0 0.0 0.0 sc
q
456.4 386.5 m
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XKLAAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N31 [12.1481 0.0 0.0 12.0 0.0 0.0] Tf
(\001) show
Q
q
462.5 383.5 m
%ADOBeginSubsetFont: TPDAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TPDAAA+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N26 [7.28885 0.0 0.0 7.2 0.0 0.0] Tf
(\002) show
Q
Q
n
0.0 -0.099 m
612.099 -0.099 l
612.099 792.0 l
0.0 792.0 l
0.0 -0.099 l
q
eoclip
n
345.7 510.0 m
351.7 522.0 l
357.7 516.0 l
345.7 510.0 l
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
eofill
n
370.1 534.4 m
352.9 517.2 l
370.1 534.4 l
f
Q
n
372.204 530.496 m
411.498 530.496 l
411.498 544.203 l
372.204 544.203 l
372.204 530.496 l
q
eoclip
[/DeviceRGB] cs 0.0 0.0 0.0 sc
q
%ADOBeginSubsetFont: WKFBAA+OpenSymbol Initial
ct_T42Dict begin
0 -0.207 0.496 0.797
 256 array 0 1 255 {1 index exch /.notdef put} for  /WKFBAA+OpenSymbol
Type42DictBegin
[<00010000000900090009000963767420620000000000009c00000004676c
7966e1f19741000002f400000114686561640c737b22000000a000000036
6868656183fd5707000000d800000024686d74789d01670a000000fc0000
000e6c6f63617900c9000000010c0000000a6d6178701e00480000000118
000000206e616d654c744e5500000138000001b967646972000000000000
0000000000000000006200010000000119996f4a75e65f0f3cf5000b0800
00000000c06411b700000000000000000000fe5803f80666000000080002
000000000000000100000756fd7f00000000000000000000000100000000
0000000000000000000000030400008104830089027e0093006600000000
0014003f0065008a0000000100000004001b000200000000000200000001
0001000000400000000000000000000e00ae0001000000000000001e0000
0001000000000001000a001e000100000000000200070028000100000000
0003000a002f0001000000000004000a00390001000000000005000c0043
0001000000000006000a004f0003000104090000003c0059000300010409
0001001400950003000104090002000e00a90003000104090003001400b7
0003000104090004001400cb0003000104090005001800df000300010409
0006001400f728632920323030352053756e204d6963726f73797374656d
7320496e632e4f70656e53796d626f6c526567756c61724f70656e53796d
626f6c4f70656e53796d626f6c56657273696f6e20312e31304f70656e53
796d626f6c00280063002900200032003000300035002000530075006e00
20004d006900630072006f00730079007300740065006d00730020004900
6e0063002e004f00700065006e00530079006d0062006f006c0052006500
670075006c00610072004f00700065006e00530079006d0062006f006c00
4f00700065006e00530079006d0062006f006c0056006500720073006900
6f006e00200031002e00310030004f00700065006e00530079006d006200
6f006c00000000>
[277 ] AllocGlyphStorage
]def 
92 28 
PrepFor2015
Type42DictEnd
1 0 0 <000200810000038106660003000700003311211125211121810300fd7f02
00fe000666f99a810566>WKFBAA+OpenSymbol AddT42Char 
WKFBAA+OpenSymbol /CharStrings get begin
end
end
%ADOEndSubsetFont
[/N21 (WKFBAA+OpenSymbol) -1 TZ
375.2 533.7 m
%ADOBeginSubsetFont: WKFBAA+OpenSymbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+OpenSymbol gcheck setglobal} if
1 40 1 <00010089feb403f803a4001a000033133635342733161736333217161514
07032313363534232207038956335ac13b0da0c0613a3c0abba8bf08738d
a2810164da8f6b573973c13d3c62273afc4c03b62d236fa2fd79>WKFBAA+OpenSymbol AddT42Char 
WKFBAA+OpenSymbol /CharStrings get begin
/g1 1 def
end
WKFBAA+OpenSymbol /Encoding get
dup 1 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N21 12.0 Tf
(\001) show
Q
q
382.7 533.7 m
%ADOBeginSubsetFont: WKFBAA+OpenSymbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+OpenSymbol gcheck setglobal} if
1 126 2 <00010093fe58021906420011000001260302111013123715060306111017
12170219c3685b5d6bbe8c4b3a3a4b8cfe58a4012b01050122011a010d01
3c913282fec0fbfefbfefdfdfebc7f00>WKFBAA+OpenSymbol AddT42Char 
WKFBAA+OpenSymbol /CharStrings get begin
/g2 2 def
end
WKFBAA+OpenSymbol /Encoding get
dup 2 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N21 12.0 Tf
(\002) show
Q
q
387.9 533.7 m
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XKLAAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N31 12.0 Tf
(\001) show
Q
q
395.4 533.7 m
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XKLAAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 1502 4 <0001ffebfeff011000b40014002f400c001414ef3f0e017f0e010e11ba01
74000402b5b7003e0b19156df5182b4e10f44dece4ed002f5d71ed10c931
30073637363534272626272635343633321615140607154b2f2406043003
073b28293f8c85e122342825120f08300911162b3e423259b632>XKLAAA+TimesNewRomanPS-ItalicMT AddT42Char 
XKLAAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g4 4 def
end
XKLAAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 4 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N31 12.0 Tf
(\004) show
Q
q
399.9 533.7 m
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XKLAAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 1618 5 <00010057ffe802660481001e0106b90005ffde40710f390f400f39a405ef
02fb0e03551b8a00f60103241d3a005b0e030f201d20027f20ef20021e00
0e0f0104050707001d1c1e1b011a1c1d1e18051904010800161a19190404
039300a0020106130b0007071f161914161619161f2819161002490f031f
0302ff0301036c2000af070f8a0eba010100070203400c121640363934c0
16d0160216b8013b400a1f091617161f0a774c182b2b103c2b2b10f65d2b
435c58400f164028143f16401c113f16401e123f2b2b2b5901fdf6ed10e4
10f45d71e42b103c2b10c0870e2e2b057d10c400183f3f3ce4fd3c103c10
3c011112173900111239113939870e7d10c4053c3c0110c910c93130015d
715d5d5d2b2b010333072303061514163332373637170607062322263534
3713233736363702174e9d119cac1c100b19291853215c5238392c3820a7
970a6e925a0481fef03ffdb25f1c111223146719863726372b366f024327
1e779300>XKLAAA+TimesNewRomanPS-ItalicMT AddT42Char 
XKLAAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g5 5 def
end
XKLAAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 5 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N31 12.0 Tf
(\005) show
Q
q
405.2 533.7 m
%ADOBeginSubsetFont: WKFBAA+OpenSymbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WKFBAA+OpenSymbol gcheck setglobal} if
1 202 3 <00010066fe5801e906420011000013361336351027022735161312111003
020766874a3e364594bf6a5a586bc0fe8b7a0134fbef011df9014f883289
febefef2fee5fedffef8fec39000>WKFBAA+OpenSymbol AddT42Char 
WKFBAA+OpenSymbol /CharStrings get begin
/g3 3 def
end
WKFBAA+OpenSymbol /Encoding get
dup 3 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N21 12.0 Tf
(\003) show
Q
Q
n
0.0 -0.099 m
612.099 -0.099 l
612.099 792.0 l
0.0 792.0 l
0.0 -0.099 l
q
eoclip
n
340.2 268.596 m
425.601 268.596 l
425.601 508.896 l
340.2 508.896 l
340.2 268.596 l
q
W
n
424.998 508.797 m
389.359 472.95 l
389.382 472.935 389.405 472.919 389.428 472.903 c
424.999 508.598 l
424.998 508.797 l
424.999 508.598 m
389.428 472.903 l
392.634 470.749 395.382 469.818 397.782 469.818 c
398.081 469.818 398.374 469.833 398.662 469.861 c
398.7 469.899 l
398.662 469.861 l
411.681 471.146 414.086 500.866 424.899 508.104 c
414.086 500.866 411.681 471.146 398.662 469.861 c
398.439 469.638 l
398.662 469.861 l
398.374 469.833 398.081 469.818 397.782 469.818 c
395.382 469.818 392.634 470.749 389.428 472.903 c
340.2 423.504 l
340.365 380.997 l
355.401 380.997 l
355.401 391.599 l
415.8 391.599 l
415.8 399.699 l
415.8 399.699 l
425.196 392.171 l
425.196 424.503 l
403.299 424.503 l
403.299 440.496 l
425.196 440.496 l
425.196 447.749 l
424.999 508.598 l
396.396 467.595 m
397.413 468.621 l
396.396 467.595 l
394.353 465.561 m
395.37 466.578 l
394.353 465.561 l
392.31 463.518 m
393.327 464.535 l
392.31 463.518 l
390.267 461.475 m
391.284 462.501 l
390.267 461.475 l
388.224 459.441 m
389.25 460.458 l
388.224 459.441 l
386.181 457.398 m
387.207 458.415 l
386.181 457.398 l
384.138 455.355 m
385.164 456.381 l
384.138 455.355 l
382.095 453.321 m
383.121 454.338 l
382.095 453.321 l
380.052 451.278 m
381.078 452.295 l
380.052 451.278 l
378.009 449.235 m
379.035 450.261 l
378.009 449.235 l
375.975 447.201 m
376.992 448.218 l
375.975 447.201 l
373.932 445.158 m
374.949 446.175 l
373.932 445.158 l
371.889 443.115 m
372.906 444.141 l
371.889 443.115 l
369.846 441.081 m
370.863 442.098 l
369.846 441.081 l
367.803 439.038 m
368.82 440.055 l
367.803 439.038 l
365.76 436.995 m
366.777 438.021 l
365.76 436.995 l
363.717 434.961 m
364.734 435.978 l
363.717 434.961 l
361.674 432.918 m
362.691 433.935 l
361.674 432.918 l
359.631 430.875 m
360.657 431.901 l
359.631 430.875 l
357.588 428.841 m
358.614 429.858 l
357.588 428.841 l
355.545 426.798 m
356.571 427.815 l
355.545 426.798 l
353.502 424.755 m
354.528 425.781 l
353.502 424.755 l
351.459 422.721 m
352.485 423.738 l
351.459 422.721 l
349.416 420.678 m
350.442 421.695 l
349.416 420.678 l
347.382 418.635 m
348.399 419.661 l
347.382 418.635 l
345.339 416.601 m
346.356 417.618 l
345.339 416.601 l
343.296 414.558 m
344.313 415.575 l
343.296 414.558 l
341.253 412.515 m
342.27 413.541 l
341.253 412.515 l
389.359 472.95 m
340.2 423.504 l
340.2 423.504 l
389.428 472.903 l
389.405 472.919 389.382 472.935 389.359 472.95 c
425.196 447.749 m
425.196 440.496 l
425.22 440.496 l
425.196 447.749 l
425.271 424.503 m
425.196 424.503 l
425.196 392.171 l
425.377 392.026 l
425.271 424.503 l
355.401 380.997 m
340.365 380.997 l
340.476 352.602 l
424.702 352.602 l
425.196 353.097 l
425.196 375.025 l
415.8 367.497 l
415.8 375.597 l
355.401 375.597 l
355.401 380.997 l
425.431 375.213 m
425.196 375.025 l
425.196 353.097 l
425.502 353.403 l
425.431 375.213 l
424.702 352.602 m
340.476 352.602 l
340.803 268.596 l
424.702 352.602 l
[/DeviceRGB] cs 0.925398 0.925398 0.925398 sc
f
n
355.401 380.997 m
340.365 380.997 l
340.365 380.997 l
355.401 380.997 l
355.401 380.997 l
0.227451 0.227451 0.227451 sc
f
n
424.702 352.602 m
340.476 352.602 l
340.476 352.602 l
424.702 352.602 l
424.702 352.602 l
f
n
425.196 447.749 m
425.196 440.496 l
425.196 440.496 l
425.196 447.749 l
425.196 447.749 l
425.196 424.503 m
425.196 424.503 l
425.196 392.171 l
425.196 392.171 l
425.196 424.503 l
425.196 375.025 m
425.196 375.025 l
425.196 353.097 l
425.196 353.097 l
425.196 375.025 l
f
n
424.899 508.104 m
414.086 500.866 411.681 471.146 398.662 469.861 c
398.662 469.861 l
411.681 471.146 414.086 500.866 424.899 508.104 c
389.359 472.95 m
389.359 472.95 l
389.382 472.935 389.405 472.919 389.428 472.903 c
389.428 472.903 l
389.405 472.919 389.382 472.935 389.359 472.95 c
389.428 472.903 m
389.428 472.903 l
392.634 470.749 395.382 469.818 397.782 469.818 c
398.081 469.818 398.374 469.833 398.662 469.861 c
398.662 469.861 l
398.374 469.833 398.081 469.818 397.782 469.818 c
395.382 469.818 392.634 470.749 389.428 472.903 c
f
n
424.999 508.598 m
389.428 472.903 l
389.428 472.903 l
340.2 423.504 l
340.2 423.504 l
389.428 472.903 l
389.428 472.903 l
424.999 508.598 l
424.999 508.598 l
f
n
398.7 469.899 m
398.662 469.861 l
398.662 469.861 l
398.439 469.638 l
398.662 469.861 l
398.662 469.861 l
398.7 469.899 l
397.413 468.621 m
396.396 467.595 l
397.413 468.621 l
395.37 466.578 m
394.353 465.561 l
395.37 466.578 l
393.327 464.535 m
392.31 463.518 l
393.327 464.535 l
391.284 462.501 m
390.267 461.475 l
391.284 462.501 l
389.25 460.458 m
388.224 459.441 l
389.25 460.458 l
387.207 458.415 m
386.181 457.398 l
387.207 458.415 l
385.164 456.381 m
384.138 455.355 l
385.164 456.381 l
383.121 454.338 m
382.095 453.321 l
383.121 454.338 l
381.078 452.295 m
380.052 451.278 l
381.078 452.295 l
379.035 450.261 m
378.009 449.235 l
379.035 450.261 l
376.992 448.218 m
375.975 447.201 l
376.992 448.218 l
374.949 446.175 m
373.932 445.158 l
374.949 446.175 l
372.906 444.141 m
371.889 443.115 l
372.906 444.141 l
370.863 442.098 m
369.846 441.081 l
370.863 442.098 l
368.82 440.055 m
367.803 439.038 l
368.82 440.055 l
366.777 438.021 m
365.76 436.995 l
366.777 438.021 l
364.734 435.978 m
363.717 434.961 l
364.734 435.978 l
362.691 433.935 m
361.674 432.918 l
362.691 433.935 l
360.657 431.901 m
359.631 430.875 l
360.657 431.901 l
358.614 429.858 m
357.588 428.841 l
358.614 429.858 l
356.571 427.815 m
355.545 426.798 l
356.571 427.815 l
354.528 425.781 m
353.502 424.755 l
354.528 425.781 l
352.485 423.738 m
351.459 422.721 l
352.485 423.738 l
350.442 421.695 m
349.416 420.678 l
350.442 421.695 l
348.399 419.661 m
347.382 418.635 l
348.399 419.661 l
346.356 417.618 m
345.339 416.601 l
346.356 417.618 l
344.313 415.575 m
343.296 414.558 l
344.313 415.575 l
342.27 413.541 m
341.253 412.515 l
342.27 413.541 l
f
Q
n
198.9 268.002 m
283.698 268.002 l
283.698 494.802 l
198.9 494.802 l
198.9 268.002 l
q
W
n
283.698 494.703 m
240.903 451.654 l
240.903 451.608 l
283.5 494.004 l
283.5 494.377 l
283.401 494.317 283.302 494.259 283.203 494.199 c
283.302 494.259 283.401 494.317 283.5 494.377 c
283.5 494.397 l
283.5 494.377 l
283.566 494.416 283.632 494.456 283.698 494.495 c
283.698 494.703 l
283.698 494.495 m
283.632 494.456 283.566 494.416 283.5 494.377 c
283.5 494.004 l
283.698 494.201 l
283.698 494.495 l
283.698 494.201 m
283.5 494.004 l
283.5 466.051 l
283.698 466.249 l
283.698 494.201 l
283.5 494.004 m
240.903 451.608 l
240.903 444.897 l
244.602 444.897 l
244.602 452.898 l
258.95 441.53 l
283.5 466.051 l
283.5 494.004 l
283.698 466.249 m
283.5 466.051 l
283.5 423.0 l
283.698 423.198 l
283.698 466.249 l
283.5 466.051 m
258.95 441.53 l
264.798 436.896 l
264.798 436.896 l
249.914 425.036 l
261.062 424.541 270.07 421.059 277.132 416.632 c
283.5 423.0 l
283.5 466.051 l
240.903 451.654 m
236.657 447.382 l
240.903 451.608 l
240.903 451.654 l
240.903 451.608 m
236.657 447.382 l
234.186 444.897 l
240.903 444.897 l
240.903 451.608 l
244.602 428.904 m
240.903 428.904 l
240.903 424.792 l
241.376 424.838 241.847 424.878 242.313 424.913 c
244.602 427.199 l
244.602 428.904 l
240.903 428.904 m
218.288 428.904 l
199.387 409.891 l
215.352 419.301 229.136 423.666 240.903 424.792 c
240.903 428.904 l
244.602 427.199 m
242.313 424.913 l
243.085 424.971 243.848 425.014 244.602 425.045 c
244.602 427.199 l
244.602 425.045 m
243.848 425.014 243.085 424.971 242.313 424.913 c
240.903 423.504 l
242.313 424.913 l
241.847 424.878 241.376 424.838 240.903 424.792 c
240.903 380.997 l
240.903 380.997 l
240.903 380.997 l
240.903 380.997 l
240.903 380.997 l
198.9 338.997 l
198.9 268.101 l
283.401 352.602 l
282.06 352.602 l
283.401 352.602 l
283.5 352.701 l
283.5 380.997 l
240.903 380.997 l
283.5 380.997 l
283.5 412.008 l
281.586 413.603 279.465 415.169 277.132 416.632 c
276.903 416.403 l
277.132 416.632 l
270.07 421.059 261.062 424.541 249.914 425.036 c
244.602 420.804 l
244.602 425.045 l
279.171 352.602 m
280.611 352.602 l
279.171 352.602 l
276.282 352.602 m
277.731 352.602 l
276.282 352.602 l
273.393 352.602 m
274.842 352.602 l
273.393 352.602 l
270.513 352.602 m
271.953 352.602 l
270.513 352.602 l
267.624 352.602 m
269.064 352.602 l
267.624 352.602 l
264.735 352.602 m
266.184 352.602 l
264.735 352.602 l
261.855 352.602 m
263.295 352.602 l
261.855 352.602 l
258.966 352.602 m
260.406 352.602 l
258.966 352.602 l
256.077 352.602 m
257.517 352.602 l
256.077 352.602 l
253.188 352.602 m
254.637 352.602 l
253.188 352.602 l
250.308 352.602 m
251.748 352.602 l
250.308 352.602 l
247.419 352.602 m
248.859 352.602 l
247.419 352.602 l
244.53 352.602 m
245.97 352.602 l
244.53 352.602 l
241.641 352.602 m
243.09 352.602 l
241.641 352.602 l
238.761 352.602 m
240.201 352.602 l
238.761 352.602 l
235.872 352.602 m
237.312 352.602 l
235.872 352.602 l
232.983 352.602 m
234.432 352.602 l
232.983 352.602 l
230.094 352.602 m
231.543 352.602 l
230.094 352.602 l
227.214 352.602 m
228.654 352.602 l
227.214 352.602 l
224.325 352.602 m
225.765 352.602 l
224.325 352.602 l
221.436 352.602 m
222.885 352.602 l
221.436 352.602 l
218.556 352.602 m
219.996 352.602 l
218.556 352.602 l
215.667 352.602 m
217.107 352.602 l
215.667 352.602 l
212.778 352.602 m
214.218 352.602 l
212.778 352.602 l
240.903 424.792 m
229.136 423.666 215.352 419.301 199.387 409.891 c
198.9 409.401 l
198.9 397.398 l
214.2 385.2 l
214.2 385.2 l
198.9 373.077 l
198.9 338.997 l
240.903 380.997 l
240.903 424.792 l
202.761 356.004 m
202.761 361.17 l
207.891 361.17 l
207.891 356.004 l
202.761 356.004 l
209.25 352.998 m
209.25 357.867 l
211.158 357.867 l
211.158 352.998 l
209.25 352.998 l
283.698 423.198 m
283.5 423.0 l
283.5 412.008 l
283.567 411.953 283.632 411.898 283.698 411.842 c
283.698 423.198 l
283.5 423.0 m
277.132 416.632 l
279.465 415.169 281.586 413.603 283.5 412.008 c
283.5 423.0 l
283.5 412.008 m
283.5 380.997 l
283.698 380.997 l
283.698 411.842 l
283.632 411.898 283.567 411.953 283.5 412.008 c
283.698 380.997 m
283.5 380.997 l
283.5 352.701 l
283.698 352.899 l
283.698 380.997 l
[/DeviceRGB] cs 0.925398 0.925398 0.925398 sc
f
n
198.9 397.398 m
198.9 373.077 l
214.2 385.2 l
214.2 385.2 l
198.9 397.398 l
0.83917 0.83917 0.83917 sc
f
n
240.903 451.654 m
240.903 451.654 l
240.903 451.608 l
240.903 451.608 l
240.903 451.654 l
240.903 451.608 m
240.903 451.608 l
240.903 444.897 l
240.903 444.897 l
240.903 451.608 l
240.903 428.904 m
240.903 428.904 l
240.903 424.792 l
240.903 424.792 240.903 424.792 240.903 424.792 c
240.903 428.904 l
240.903 424.792 m
240.903 424.792 240.903 424.792 240.903 424.792 c
240.903 380.997 l
240.903 380.997 l
240.903 424.792 l
240.903 380.997 m
240.903 380.997 l
240.903 380.997 l
240.903 380.997 l
0.227451 0.227451 0.227451 sc
f
n
240.903 380.997 m
240.903 380.997 l
240.903 380.997 l
198.9 338.997 l
198.9 338.997 l
240.903 380.997 l
240.903 380.997 l
240.903 380.997 l
f
n
283.698 380.997 m
283.5 380.997 l
283.5 380.997 l
283.698 380.997 l
283.698 380.997 l
283.5 380.997 m
240.903 380.997 l
283.5 380.997 l
283.5 380.997 l
f
n
283.401 352.602 m
282.06 352.602 l
283.401 352.602 l
283.401 352.602 l
280.611 352.602 m
279.171 352.602 l
280.611 352.602 l
277.731 352.602 m
276.282 352.602 l
277.731 352.602 l
274.842 352.602 m
273.393 352.602 l
274.842 352.602 l
271.953 352.602 m
270.513 352.602 l
271.953 352.602 l
269.064 352.602 m
267.624 352.602 l
269.064 352.602 l
266.184 352.602 m
264.735 352.602 l
266.184 352.602 l
263.295 352.602 m
261.855 352.602 l
263.295 352.602 l
260.406 352.602 m
258.966 352.602 l
260.406 352.602 l
257.517 352.602 m
256.077 352.602 l
257.517 352.602 l
254.637 352.602 m
253.188 352.602 l
254.637 352.602 l
251.748 352.602 m
250.308 352.602 l
251.748 352.602 l
248.859 352.602 m
247.419 352.602 l
248.859 352.602 l
245.97 352.602 m
244.53 352.602 l
245.97 352.602 l
243.09 352.602 m
241.641 352.602 l
243.09 352.602 l
240.201 352.602 m
238.761 352.602 l
240.201 352.602 l
237.312 352.602 m
235.872 352.602 l
237.312 352.602 l
234.432 352.602 m
232.983 352.602 l
234.432 352.602 l
231.543 352.602 m
230.094 352.602 l
231.543 352.602 l
228.654 352.602 m
227.214 352.602 l
228.654 352.602 l
225.765 352.602 m
224.325 352.602 l
225.765 352.602 l
222.885 352.602 m
221.436 352.602 l
222.885 352.602 l
219.996 352.602 m
218.556 352.602 l
219.996 352.602 l
217.107 352.602 m
215.667 352.602 l
217.107 352.602 l
f
n
283.5 494.397 m
283.5 494.377 l
283.5 494.377 283.5 494.377 283.5 494.377 c
283.5 494.397 l
283.5 494.377 m
283.5 494.377 283.5 494.377 283.5 494.377 c
283.5 494.004 l
283.5 494.004 l
283.5 494.377 l
283.5 494.004 m
283.5 494.004 l
283.5 466.051 l
283.5 466.051 l
283.5 494.004 l
283.5 466.051 m
283.5 466.051 l
283.5 423.0 l
283.5 423.0 l
283.5 466.051 l
283.5 423.0 m
283.5 423.0 l
283.5 412.008 l
283.5 412.008 283.5 412.008 283.5 412.008 c
283.5 423.0 l
283.5 412.008 m
283.5 380.997 l
283.5 380.997 l
283.5 352.701 l
283.5 352.701 l
283.5 380.997 l
283.5 380.997 l
283.5 412.008 l
283.5 412.008 283.5 412.008 283.5 412.008 c
f
n
244.602 425.045 m
243.848 425.014 243.085 424.971 242.313 424.913 c
242.313 424.913 l
243.085 424.971 243.848 425.014 244.602 425.045 c
244.602 425.045 l
249.914 425.036 m
249.914 425.036 l
261.062 424.541 270.07 421.059 277.132 416.632 c
277.132 416.632 l
270.07 421.059 261.062 424.541 249.914 425.036 c
242.313 424.913 m
241.847 424.878 241.376 424.838 240.903 424.792 c
240.903 424.792 240.903 424.792 240.903 424.792 c
229.136 423.666 215.352 419.301 199.387 409.891 c
199.387 409.891 l
215.352 419.301 229.136 423.666 240.903 424.792 c
240.903 424.792 240.903 424.792 240.903 424.792 c
241.376 424.838 241.847 424.878 242.313 424.913 c
242.313 424.913 l
277.132 416.632 m
277.132 416.632 l
279.465 415.169 281.586 413.603 283.5 412.008 c
283.5 412.008 283.5 412.008 283.5 412.008 c
283.567 411.953 283.632 411.898 283.698 411.842 c
283.698 411.842 l
283.632 411.898 283.567 411.953 283.5 412.008 c
283.5 412.008 283.5 412.008 283.5 412.008 c
281.586 413.603 279.465 415.169 277.132 416.632 c
f
n
283.698 494.495 m
283.632 494.456 283.566 494.416 283.5 494.377 c
283.5 494.377 283.5 494.377 283.5 494.377 c
283.401 494.317 283.302 494.259 283.203 494.199 c
283.302 494.259 283.401 494.317 283.5 494.377 c
283.5 494.377 283.5 494.377 283.5 494.377 c
283.566 494.416 283.632 494.456 283.698 494.495 c
283.698 494.495 l
f
n
283.698 494.201 m
283.5 494.004 l
283.5 494.004 l
240.903 451.608 l
240.903 451.608 l
236.657 447.382 l
236.657 447.382 l
240.903 451.608 l
240.903 451.608 l
283.5 494.004 l
283.5 494.004 l
283.698 494.201 l
283.698 494.201 l
f
n
283.698 466.249 m
283.5 466.051 l
283.5 466.051 l
258.95 441.53 l
258.95 441.53 l
283.5 466.051 l
283.5 466.051 l
283.698 466.249 l
283.698 466.249 l
244.602 427.199 m
242.313 424.913 l
242.313 424.913 l
240.903 423.504 l
242.313 424.913 l
242.313 424.913 l
244.602 427.199 l
244.602 427.199 l
f
n
283.698 423.198 m
283.5 423.0 l
283.5 423.0 l
277.132 416.632 l
277.132 416.632 l
276.903 416.403 l
277.132 416.632 l
277.132 416.632 l
283.5 423.0 l
283.5 423.0 l
283.698 423.198 l
283.698 423.198 l
f
n
214.218 352.602 m
212.778 352.602 l
214.218 352.602 l
f
n
207.891 361.17 m
202.761 361.17 l
202.761 356.004 l
207.891 356.004 l
207.891 361.17 l
q
W
n
202.761 356.004 m
207.891 356.004 l
207.891 361.17 l
202.761 361.17 l
h
0.925398 0.925398 0.925398 sc
f
0.227451 0.227451 0.227451 sc
q
203.1 356.0 m
%ADOBeginSubsetFont: XKLAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XKLAAA+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N31 [12.1568 0.0 0.0 12.0 0.0 0.0] Tf
(\003) show
Q
Q
n
211.158 357.867 m
209.25 357.867 l
209.25 352.998 l
211.158 352.998 l
211.158 357.867 l
q
W
n
209.25 352.998 m
211.158 352.998 l
211.158 357.867 l
209.25 357.867 l
h
0.925398 0.925398 0.925398 sc
f
0.227451 0.227451 0.227451 sc
q
208.4 353.0 m
%ADOBeginSubsetFont: TPDAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TPDAAA+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N26 [7.2941 0.0 0.0 7.2 0.0 0.0] Tf
(\001) show
Q
Q
Q
n
403.299 416.403 m
483.804 416.403 l
483.804 448.596 l
403.299 448.596 l
403.299 416.403 l
q
W
n
463.599 448.596 m
463.599 448.596 l
463.599 440.496 l
425.22 440.496 l
425.271 424.503 l
463.599 424.503 l
463.599 416.403 l
483.696 432.504 l
463.599 448.596 l
[/DeviceRGB] cs 0.875986 0.875986 0.875986 sc
f
n
425.22 440.496 m
425.196 440.496 l
425.196 424.503 l
425.271 424.503 l
425.22 440.496 l
425.196 440.496 m
403.299 440.496 l
403.299 424.503 l
425.196 424.503 l
425.196 440.496 l
0.83917 0.83917 0.83917 sc
f
n
425.196 440.496 m
425.196 440.496 l
425.196 424.503 l
425.196 424.503 l
425.196 440.496 l
0.490196 0.490196 0.490196 sc
f
Q
n
184.302 420.804 m
264.798 420.804 l
264.798 452.997 l
184.302 452.997 l
184.302 420.804 l
q
W
n
234.186 444.897 m
234.16 444.897 l
218.091 428.904 l
218.288 428.904 l
234.186 444.897 l
234.16 444.897 m
184.302 444.897 l
184.302 428.904 l
218.091 428.904 l
234.16 444.897 l
[/DeviceRGB] cs 0.875986 0.875986 0.875986 sc
f
n
234.16 444.897 m
234.16 444.897 l
218.091 428.904 l
218.091 428.904 l
234.16 444.897 l
0.376471 0.376471 0.376471 sc
f
n
244.602 452.898 m
244.602 444.897 l
240.903 444.897 l
240.903 428.904 l
244.602 428.904 l
244.602 427.199 l
258.95 441.53 l
244.602 452.898 l
240.903 444.897 m
234.186 444.897 l
218.288 428.904 l
240.903 428.904 l
240.903 444.897 l
258.95 441.53 m
244.602 427.199 l
244.602 425.045 l
245.472 425.08 246.33 425.097 247.176 425.097 c
247.176 425.097 247.176 425.097 247.176 425.097 c
248.102 425.097 249.015 425.076 249.914 425.036 c
264.798 436.896 l
264.798 436.896 l
258.95 441.53 l
247.176 425.097 m
247.176 425.097 247.176 425.097 247.176 425.097 c
246.33 425.097 245.472 425.08 244.602 425.045 c
244.602 420.804 l
249.914 425.036 l
249.015 425.076 248.102 425.097 247.176 425.097 c
0.83917 0.83917 0.83917 sc
f
n
240.903 444.897 m
240.903 444.897 l
240.903 428.904 l
240.903 428.904 l
240.903 444.897 l
0.490196 0.490196 0.490196 sc
f
n
247.176 425.097 m
247.176 425.097 247.176 425.097 247.176 425.097 c
247.176 425.097 247.176 425.097 247.176 425.097 c
248.102 425.097 249.015 425.076 249.914 425.036 c
249.914 425.036 l
249.015 425.076 248.102 425.097 247.176 425.097 c
247.176 425.097 m
246.33 425.097 245.472 425.08 244.602 425.045 c
244.602 425.045 l
245.472 425.08 246.33 425.097 247.176 425.097 c
f
n
258.95 441.53 m
244.602 427.199 l
244.602 427.199 l
258.95 441.53 l
258.95 441.53 l
f
Q
n
355.401 367.497 m
435.897 367.497 l
435.897 399.699 l
355.401 399.699 l
355.401 367.497 l
q
W
n
425.377 392.026 m
425.412 380.997 l
432.65 380.997 l
435.897 383.598 l
435.897 383.598 l
425.377 392.026 l
432.65 380.997 m
425.412 380.997 l
425.431 375.213 l
432.65 380.997 l
[/DeviceRGB] cs 0.875986 0.875986 0.875986 sc
f
n
432.65 380.997 m
425.412 380.997 l
425.412 380.997 l
432.65 380.997 l
432.65 380.997 l
0.376471 0.376471 0.376471 sc
f
n
415.8 399.699 m
415.8 399.699 l
415.8 391.599 l
355.401 391.599 l
355.401 380.997 l
425.196 380.997 l
425.196 392.171 l
415.8 399.699 l
425.196 392.171 m
425.196 380.997 l
425.412 380.997 l
425.377 392.026 l
425.196 392.171 l
425.412 380.997 m
425.196 380.997 l
425.196 375.025 l
425.431 375.213 l
425.412 380.997 l
425.196 380.997 m
355.401 380.997 l
355.401 375.597 l
415.8 375.597 l
415.8 367.497 l
425.196 375.025 l
425.196 380.997 l
0.83917 0.83917 0.83917 sc
f
n
425.412 380.997 m
425.196 380.997 l
425.196 380.997 l
425.412 380.997 l
425.412 380.997 l
425.196 380.997 m
355.401 380.997 l
355.401 380.997 l
425.196 380.997 l
425.196 380.997 l
0.490196 0.490196 0.490196 sc
f
n
425.196 392.171 m
425.196 380.997 l
425.196 380.997 l
425.196 375.025 l
425.196 375.025 l
425.196 380.997 l
425.196 380.997 l
425.196 392.171 l
425.196 392.171 l
f
Q
Q
Q
/WKFBAA+OpenSymbol /Font _pdfUndefineResource
/N21 /Font _pdfUndefineResource
/XKLAAA+TimesNewRomanPS-ItalicMT /Font _pdfUndefineResource
/N31 /Font _pdfUndefineResource
/TPDAAA+TimesNewRomanPSMT /Font _pdfUndefineResource
/N26 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
